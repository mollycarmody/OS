{"ast":null,"code":"import _classCallCheck from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/src/Components/Filter.js\";\nimport React from 'react';\nimport Multiselect from 'react-bootstrap-multiselect';\nexport var Filter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Filter, _React$Component);\n\n  function Filter(props) {\n    _classCallCheck(this, Filter);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Filter).call(this, props));\n  }\n\n  _createClass(Filter, [{\n    key: \"showFromMonth\",\n    value: function showFromMonth() {\n      var _this$state = this.state,\n          from = _this$state.from,\n          to = _this$state.to;\n\n      if (!from) {\n        return;\n      }\n\n      if (moment(to).diff(moment(from), 'months') < 2) {\n        this.to.getDayPicker().showMonth(from);\n      }\n    }\n  }, {\n    key: \"handleFromChange\",\n    value: function handleFromChange(from) {\n      // Change the from date and focus the \"to\" input field\n      this.setState({\n        from: from\n      });\n    }\n  }, {\n    key: \"handleToChange\",\n    value: function handleToChange(to) {\n      this.setState({\n        to: to\n      }, this.showFromMonth);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$state2 = this.state,\n          from = _this$state2.from,\n          to = _this$state2.to;\n      var modifiers = {\n        start: from,\n        end: to\n      };\n      return React.createElement(\"div\", {\n        className: \"filter-main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(Multiselect, {\n        data: this.state.spaceTypes,\n        multiple: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"InputFromTo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(DayPickerInput, {\n        value: from,\n        placeholder: \"From\",\n        format: \"LL\",\n        formatDate: formatDate,\n        parseDate: parseDate,\n        dayPickerProps: {\n          selectedDays: [from, {\n            from: from,\n            to: to\n          }],\n          disabledDays: {\n            after: to\n          },\n          toMonth: to,\n          modifiers: modifiers,\n          numberOfMonths: 1,\n          onDayClick: function onDayClick() {\n            return _this.to.getInput().focus();\n          }\n        },\n        onDayChange: this.handleFromChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), ' ', \"\\u2014\", ' ', React.createElement(\"span\", {\n        className: \"InputFromTo-to\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(DayPickerInput, {\n        ref: function ref(el) {\n          return _this.to = el;\n        },\n        value: to,\n        placeholder: \"To\",\n        format: \"LL\",\n        formatDate: formatDate,\n        parseDate: parseDate,\n        dayPickerProps: {\n          selectedDays: [from, {\n            from: from,\n            to: to\n          }],\n          disabledDays: {\n            before: from\n          },\n          modifiers: modifiers,\n          month: from,\n          fromMonth: from,\n          numberOfMonths: 1\n        },\n        onDayChange: this.handleToChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Filter;\n}(React.Component);\nexport default Filter;","map":{"version":3,"sources":["/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/src/Components/Filter.js"],"names":["React","Multiselect","Filter","props","state","from","to","moment","diff","getDayPicker","showMonth","setState","showFromMonth","modifiers","start","end","spaceTypes","formatDate","parseDate","selectedDays","disabledDays","after","toMonth","numberOfMonths","onDayClick","getInput","focus","handleFromChange","el","before","month","fromMonth","handleToChange","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Multiselect from 'react-bootstrap-multiselect';\n\nexport class Filter extends React.Component{\n  constructor(props){\n    super(props);\n  }\n\n  showFromMonth() {\n    const { from, to } = this.state;\n    if (!from) {\n      return;\n    }\n    if (moment(to).diff(moment(from), 'months') < 2) {\n      this.to.getDayPicker().showMonth(from);\n    }\n  }\n  handleFromChange(from) {\n    // Change the from date and focus the \"to\" input field\n    this.setState({ from });\n  }\n  handleToChange(to) {\n    this.setState({ to }, this.showFromMonth);\n  }\n\n  render(){\n    const { from, to } = this.state;\n    const modifiers = { start: from, end: to };\n\n    return(\n      <div className=\"filter-main\">\n        <Multiselect data={this.state.spaceTypes} multiple/>\n        <div className=\"InputFromTo\">\n           <DayPickerInput\n             value={from}\n             placeholder=\"From\"\n             format=\"LL\"\n             formatDate={formatDate}\n             parseDate={parseDate}\n             dayPickerProps={{\n               selectedDays: [from, { from, to }],\n               disabledDays: { after: to },\n               toMonth: to,\n               modifiers,\n               numberOfMonths: 1,\n               onDayClick: () => this.to.getInput().focus(),\n             }}\n             onDayChange={this.handleFromChange}\n           />{' '}\n           â€”{' '}\n           <span className=\"InputFromTo-to\">\n             <DayPickerInput\n               ref={el => (this.to = el)}\n               value={to}\n               placeholder=\"To\"\n               format=\"LL\"\n               formatDate={formatDate}\n               parseDate={parseDate}\n               dayPickerProps={{\n                 selectedDays: [from, { from, to }],\n                 disabledDays: { before: from },\n                 modifiers,\n                 month: from,\n                 fromMonth: from,\n                 numberOfMonths: 1,\n               }}\n               onDayChange={this.handleToChange}\n             />\n           </span>\n        </div>\n\n      </div>\n\n    );\n  }\n\n}\n\nexport default Filter;\n"]},"metadata":{},"sourceType":"module"}