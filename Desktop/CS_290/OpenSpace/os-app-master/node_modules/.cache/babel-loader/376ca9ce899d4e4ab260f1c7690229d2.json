{"ast":null,"code":"import _classCallCheck from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/src/Components/Filter.js\";\nimport React from 'react';\nimport { MDBRow, MDBContainer, MDBInput, MDBCol, MDBFormInline, MDBIcon, MDBBtn } from \"mdbreact\";\nimport { MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem } from \"mdbreact\";\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Chip from '@material-ui/core/Chip';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport moment from 'moment';\nimport DayPickerInput from 'react-day-picker/DayPickerInput.js';\nimport { formatDate, parseDate } from 'react-day-picker/moment';\nimport 'react-day-picker/lib/style.css';\nexport var Filter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Filter, _React$Component);\n\n  function Filter(props) {\n    var _this;\n\n    _classCallCheck(this, Filter);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Filter).call(this, props));\n\n    _this.handleChangeMultiple = function (event) {\n      var options = event.target.options;\n      var value = [];\n\n      for (var i = 0, l = options.length; i < l; i += 1) {\n        if (options[i].selected) {\n          value.push(options[i].value);\n        }\n      }\n\n      _this.setState({\n        name: value\n      });\n    };\n\n    _this.state = {\n      from: undefined,\n      to: undefined,\n      colors: [],\n      name: [],\n      spaceTypes: [{\n        value: 'Restaurant space',\n        label: 'Restaurant'\n      }, {\n        value: 'Mall space',\n        label: 'Mall'\n      }, {\n        value: 'Apartment space',\n        label: 'Apartment'\n      }, {\n        value: 'Garage space',\n        label: 'Garage'\n      }, {\n        value: 'Closet space',\n        label: 'Closet'\n      }, {\n        value: 'Basement space',\n        label: 'Basement'\n      }, {\n        value: 'Outdoor space',\n        label: 'Outdoor (i.e shed)'\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(Filter, [{\n    key: \"showFromMonth\",\n    value: function showFromMonth() {\n      var _this$state = this.state,\n          from = _this$state.from,\n          to = _this$state.to;\n\n      if (!from) {\n        return;\n      }\n\n      if (moment(to).diff(moment(from), 'months') < 2) {\n        this.to.getDayPicker().showMonth(from);\n      }\n    }\n  }, {\n    key: \"handleFromChange\",\n    value: function handleFromChange(from) {\n      // Change the from date and focus the \"to\" input field\n      this.setState({\n        from: from\n      });\n    }\n  }, {\n    key: \"handleToChange\",\n    value: function handleToChange(to) {\n      this.setState({\n        to: to\n      }, this.showFromMonth);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var names = ['Oliver Hansen', 'Van Henry', 'April Tucker', 'Ralph Hubbard', 'Omar Alexander', 'Carlos Abbott', 'Miriam Wagner', 'Bradley Wilkerson', 'Virginia Andrews', 'Kelly Snyder'];\n      var _this$state2 = this.state,\n          from = _this$state2.from,\n          to = _this$state2.to;\n      var modifiers = {\n        start: from,\n        end: to\n      };\n      var spaceTypeDropItems = this.state.spaceTypes.map(function (space, index) {\n        return React.createElement(MDBDropdownItem, {\n          value: space.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, space.label);\n      });\n      var options = [{\n        value: 'chocolate',\n        label: 'Chocolate'\n      }, {\n        value: 'strawberry',\n        label: 'Strawberry'\n      }, {\n        value: 'vanilla',\n        label: 'Vanilla'\n      }];\n      var ITEM_HEIGHT = 48;\n      var ITEM_PADDING_TOP = 8;\n      var MenuProps = {\n        PaperProps: {\n          style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            width: 250\n          }\n        }\n      };\n\n      var styles = function styles(theme) {\n        return {\n          root: {\n            display: 'flex',\n            flexWrap: 'wrap'\n          },\n          formControl: {\n            margin: theme.spacing.unit,\n            minWidth: 120,\n            maxWidth: 300\n          },\n          chips: {\n            display: 'flex',\n            flexWrap: 'wrap'\n          },\n          chip: {\n            margin: theme.spacing.unit / 4\n          },\n          noLabel: {\n            marginTop: theme.spacing.unit * 3\n          }\n        };\n      };\n\n      return React.createElement(\"div\", {\n        className: \"filter-main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"filter-spaceTypeDropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"select-multiple-chip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"Chip\"), React.createElement(Select, {\n        multiple: true,\n        value: this.state.name,\n        onChange: this.handleChange,\n        input: React.createElement(Input, {\n          id: \"select-multiple-chip\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }),\n        renderValue: function renderValue(selected) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 168\n            },\n            __self: this\n          }, selected.map(function (value) {\n            return React.createElement(Chip, {\n              key: value,\n              label: value,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 170\n              },\n              __self: this\n            });\n          }));\n        },\n        MenuProps: MenuProps,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, names.map(function (name) {\n        return React.createElement(MenuItem, {\n          key: name,\n          value: name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }, name);\n      })))), React.createElement(\"div\", {\n        className: \"InputFromTo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(DayPickerInput, {\n        value: from,\n        placeholder: \"From\",\n        format: \"LL\",\n        formatDate: formatDate,\n        parseDate: parseDate,\n        dayPickerProps: {\n          selectedDays: [from, {\n            from: from,\n            to: to\n          }],\n          disabledDays: {\n            after: to\n          },\n          toMonth: to,\n          modifiers: modifiers,\n          numberOfMonths: 1,\n          onDayClick: function onDayClick() {\n            return _this2.to.getInput().focus();\n          }\n        },\n        onDayChange: this.handleFromChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }), ' ', \"\\u2014\", ' ', React.createElement(\"span\", {\n        className: \"InputFromTo-to\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(DayPickerInput, {\n        ref: function ref(el) {\n          return _this2.to = el;\n        },\n        value: to,\n        placeholder: \"To\",\n        format: \"LL\",\n        formatDate: formatDate,\n        parseDate: parseDate,\n        dayPickerProps: {\n          selectedDays: [from, {\n            from: from,\n            to: to\n          }],\n          disabledDays: {\n            before: from\n          },\n          modifiers: modifiers,\n          month: from,\n          fromMonth: from,\n          numberOfMonths: 1\n        },\n        onDayChange: this.handleToChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Filter;\n}(React.Component);\nexport default Filter;","map":{"version":3,"sources":["/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/src/Components/Filter.js"],"names":["React","MDBRow","MDBContainer","MDBInput","MDBCol","MDBFormInline","MDBIcon","MDBBtn","MDBDropdown","MDBDropdownToggle","MDBDropdownMenu","MDBDropdownItem","Input","InputLabel","MenuItem","FormControl","ListItemText","Select","Checkbox","Chip","PropTypes","classNames","withStyles","moment","DayPickerInput","formatDate","parseDate","Filter","props","handleChangeMultiple","event","options","target","value","i","l","length","selected","push","setState","name","state","from","undefined","to","colors","spaceTypes","label","diff","getDayPicker","showMonth","showFromMonth","names","modifiers","start","end","spaceTypeDropItems","map","space","index","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","styles","theme","root","display","flexWrap","formControl","margin","spacing","unit","minWidth","maxWidth","chips","chip","noLabel","marginTop","handleChange","selectedDays","disabledDays","after","toMonth","numberOfMonths","onDayClick","getInput","focus","handleFromChange","el","before","month","fromMonth","handleToChange","Component"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { MDBRow, MDBContainer, MDBInput, MDBCol, MDBFormInline, MDBIcon, MDBBtn } from \"mdbreact\";\nimport { MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem } from \"mdbreact\";\n\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Chip from '@material-ui/core/Chip';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport moment from 'moment';\nimport DayPickerInput from 'react-day-picker/DayPickerInput.js';\nimport { formatDate, parseDate } from 'react-day-picker/moment';\nimport 'react-day-picker/lib/style.css';\n\n\nexport class Filter extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n      from: undefined,\n      to: undefined,\n      colors:[],\n      name: [],\n      spaceTypes:[\n        {\n          value:'Restaurant space',\n          label:'Restaurant'\n        },\n        {\n          value:'Mall space',\n          label:'Mall'\n        },\n        {\n          value:'Apartment space',\n          label:'Apartment'\n        },\n        {\n          value:'Garage space',\n          label:'Garage'\n        },\n        {\n          value:'Closet space',\n          label:'Closet'\n        },\n        {\n          value:'Basement space',\n          label:'Basement'\n        },\n        {\n          value:'Outdoor space',\n          label:'Outdoor (i.e shed)'\n        }\n      ]\n    }\n  }\n\n  showFromMonth() {\n    const { from, to } = this.state;\n    if (!from) {\n      return;\n    }\n    if (moment(to).diff(moment(from), 'months') < 2) {\n      this.to.getDayPicker().showMonth(from);\n    }\n  }\n  handleFromChange(from) {\n    // Change the from date and focus the \"to\" input field\n    this.setState({ from });\n  }\n  handleToChange(to) {\n    this.setState({ to }, this.showFromMonth);\n  }\n\n\n\n handleChangeMultiple = event => {\n   const { options } = event.target;\n   const value = [];\n   for (let i = 0, l = options.length; i < l; i += 1) {\n     if (options[i].selected) {\n       value.push(options[i].value);\n     }\n   }\n   this.setState({\n     name: value,\n   });\n };\n\n  render(){\n    const names = [\n  'Oliver Hansen',\n  'Van Henry',\n  'April Tucker',\n  'Ralph Hubbard',\n  'Omar Alexander',\n  'Carlos Abbott',\n  'Miriam Wagner',\n  'Bradley Wilkerson',\n  'Virginia Andrews',\n  'Kelly Snyder',\n];\n\n\n    const { from, to } = this.state;\n    const modifiers = { start: from, end: to };\n    const spaceTypeDropItems = this.state.spaceTypes.map((space, index) =>\n        <MDBDropdownItem value={space.value} >{space.label}</MDBDropdownItem>\n\n\n    );\n    const options = [\n  { value: 'chocolate', label: 'Chocolate' },\n  { value: 'strawberry', label: 'Strawberry' },\n  { value: 'vanilla', label: 'Vanilla' }\n];\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120,\n    maxWidth: 300,\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: theme.spacing.unit / 4,\n  },\n  noLabel: {\n    marginTop: theme.spacing.unit * 3,\n  },\n});\n\n    return(\n      <div className=\"filter-main\">\n        <div className=\"filter-spaceTypeDropdown\">\n        <FormControl >\n          <InputLabel htmlFor=\"select-multiple-chip\">Chip</InputLabel>\n          <Select\n            multiple\n            value={this.state.name}\n            onChange={this.handleChange}\n            input={<Input id=\"select-multiple-chip\" />}\n            renderValue={selected => (\n              <div >\n                {selected.map(value => (\n                  <Chip key={value} label={value}  />\n                ))}\n              </div>\n            )}\n            MenuProps={MenuProps}\n          >\n            {names.map(name => (\n              <MenuItem key={name} value={name}>\n                {name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        </div>\n        <div className=\"InputFromTo\">\n           <DayPickerInput\n             value={from}\n             placeholder=\"From\"\n             format=\"LL\"\n             formatDate={formatDate}\n             parseDate={parseDate}\n             dayPickerProps={{\n               selectedDays: [from, { from, to }],\n               disabledDays: { after: to },\n               toMonth: to,\n               modifiers,\n               numberOfMonths: 1,\n               onDayClick: () => this.to.getInput().focus(),\n             }}\n             onDayChange={this.handleFromChange}\n           />{' '}\n           —{' '}\n           <span className=\"InputFromTo-to\">\n             <DayPickerInput\n               ref={el => (this.to = el)}\n               value={to}\n               placeholder=\"To\"\n               format=\"LL\"\n               formatDate={formatDate}\n               parseDate={parseDate}\n               dayPickerProps={{\n                 selectedDays: [from, { from, to }],\n                 disabledDays: { before: from },\n                 modifiers,\n                 month: from,\n                 fromMonth: from,\n                 numberOfMonths: 1,\n               }}\n               onDayChange={this.handleToChange}\n             />\n           </span>\n        </div>\n\n      </div>\n\n    );\n  }\n\n}\n\nexport default Filter;\n"]},"metadata":{},"sourceType":"module"}