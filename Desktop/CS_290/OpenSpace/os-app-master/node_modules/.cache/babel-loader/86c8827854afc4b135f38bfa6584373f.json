{"ast":null,"code":"import _defineProperty from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/src/Components/UserProfile.js\";\nimport React from 'react';\nimport MainNav from './MainNav.js';\nimport Footer from './Footer.js';\nimport AvatarEditor from 'react-avatar-editor';\nimport Dropzone from 'react-dropzone';\nimport { MDBRow, MDBCol, MDBInput, MDBContainer, MDBFormInline, MDBIcon, MDBBtn } from \"mdbreact\";\nimport '../Styles/UserProfile.css';\nexport var UserProfile =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UserProfile, _React$Component);\n\n  function UserProfile(props) {\n    var _this;\n\n    _classCallCheck(this, UserProfile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserProfile).call(this, props));\n\n    _this.onClick = function (nr) {\n      return function () {\n        _this.setState({\n          interestRadio: nr\n        });\n      };\n    };\n\n    _this.onClickSave = function () {\n      if (_this.editor) {\n        // This returns a HTMLCanvasElement, it can be made into a data URL or a blob,\n        // drawn on another canvas, or added to the DOM.\n        var canvas = _this.editor.getImage(); // If you want the image resized to the canvas size (also a HTMLCanvasElement)\n\n\n        var canvasScaled = _this.editor.getImageScaledToCanvas();\n      }\n    };\n\n    _this.onDrop = function (acceptedFile) {\n      console.log(acceptedFiles);\n\n      _this.setState({\n        image: dropped[0]\n      });\n    };\n\n    _this.setEditorRef = function (editor) {\n      if (editor) {\n        _this.editor = editor;\n\n        var img = _this.editor.getImageScaledToCanvas().toDataURL();\n\n        console.log(img);\n      }\n    };\n\n    _this.onDrop = function (files) {\n      // POST to a test endpoint for demo purposes\n      console.log(\"hi\");\n    };\n\n    _this.state = {\n      firstName: '',\n      lastName: '',\n      email: '',\n      phone: 0,\n      interestRadio: 1,\n      additionalInfo: '',\n      image: 'https://upload.wikimedia.org/wikipedia/commons/4/4b/What_Is_URL.jpg'\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // <Dropzone onDrop={this.handleDrop} disableClick style={{ width: '250px', height: '250px' }}>\n\n\n  _createClass(UserProfile, [{\n    key: \"handleChange\",\n    value: function handleChange(event, type) {\n      console.log(\"type is \" + type);\n      console.log(\"value is \" + event.target.value);\n      this.setState(_defineProperty({}, type, event.target.value));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      console.log(\"submit/save profile!\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // const canvas = this.editor.getImage().toDataURL();\n      // let imageURL;\n      // fetch(canvas)\n      //   .then(res => res.blob())\n      //   .then(blob => (imageURL = window.URL.createObjectURL(blob)));\n      // Usage\n      // <img src={imageURL} ... />\n      var maxSize = 1048576;\n      return React.createElement(\"div\", {\n        className: \"userprofile-main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(MainNav, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"userprofile-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"userprofile-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"My OpenSpace Profile\")), React.createElement(MDBContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(MDBInput, {\n        onChange: function onChange(event) {\n          return _this2.handleChange(event, 'firstName');\n        },\n        label: \"First\",\n        group: true,\n        type: \"text\",\n        validate: true,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      })), React.createElement(MDBCol, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(MDBInput, {\n        onChange: function onChange(event) {\n          return _this2.handleChange(event, 'lastName');\n        },\n        label: \"Last\",\n        group: true,\n        type: \"text\",\n        validate: true,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }))), React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(MDBInput, {\n        onChange: function onChange(event) {\n          return _this2.handleChange(event, 'email');\n        },\n        label: \"Email *\",\n        group: true,\n        type: \"email\",\n        validate: true,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }))), React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(MDBInput, {\n        onChange: function onChange(event) {\n          return _this2.handleChange(event, 'phone');\n        },\n        label: \"Phone *\",\n        group: true,\n        type: \"number\",\n        validate: true,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"userprofile-profilepic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Profile Picture\"))), React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(Dropzone, {\n        onDrop: this.onDrop,\n        accept: \"image/png\",\n        minSize: 0,\n        maxSize: maxSize,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, function (_ref) {\n        var getRootProps = _ref.getRootProps,\n            getInputProps = _ref.getInputProps,\n            isDragActive = _ref.isDragActive,\n            isDragReject = _ref.isDragReject,\n            rejectedFiles = _ref.rejectedFiles;\n        var isFileTooLarge = rejectedFiles.length > 0 && rejectedFiles[0].size > maxSize;\n        return React.createElement(\"div\", Object.assign({}, getRootProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        })), React.createElement(AvatarEditor, {\n          width: 250,\n          height: 250,\n          image: _this2.state.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }), !isDragActive && 'Click here or drop a file to upload!', isDragActive && !isDragReject && \"Drop it like it's hot!\", isDragReject && \"File type not accepted, sorry!\", isFileTooLarge && React.createElement(\"div\", {\n          className: \"text-danger mt-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }, \"File is too large.\"));\n      })))), React.createElement(\"div\", {\n        className: \"userprofile-selector\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Are you interested in storing stuff, listing a space, or both?\"))), React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(MDBInput, {\n        gap: true,\n        onClick: this.onClick(1),\n        checked: this.state.interestRadio === 1 ? true : false,\n        label: \"Storing stuff\",\n        type: \"radio\",\n        id: \"radio1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }))), React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(MDBInput, {\n        gap: true,\n        onClick: this.onClick(2),\n        checked: this.state.interestRadio === 2 ? true : false,\n        label: \"Listing a space\",\n        type: \"radio\",\n        id: \"radio2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }))), React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(MDBInput, {\n        gap: true,\n        onClick: this.onClick(3),\n        checked: this.state.interestRadio === 3 ? true : false,\n        label: \"Both\",\n        type: \"radio\",\n        id: \"radio3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"userprofile-bio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, \"Tell us a little about yourself! (optinal)\"))), React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(MDBInput, {\n        onChange: function onChange(event) {\n          return _this2.handleChange(event, 'additionalInfo');\n        },\n        id: \"bookform-extrainfo\",\n        type: \"textarea\",\n        label: \"ex: I am student at ... \",\n        rows: \"5\",\n        cols: \"100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      })))), React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"Save!\")))))), React.createElement(\"footer\", {\n        className: \"userprofile-footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return UserProfile;\n}(React.Component);\nexport default UserProfile;","map":{"version":3,"sources":["/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/src/Components/UserProfile.js"],"names":["React","MainNav","Footer","AvatarEditor","Dropzone","MDBRow","MDBCol","MDBInput","MDBContainer","MDBFormInline","MDBIcon","MDBBtn","UserProfile","props","onClick","nr","setState","interestRadio","onClickSave","editor","canvas","getImage","canvasScaled","getImageScaledToCanvas","onDrop","acceptedFile","console","log","acceptedFiles","image","dropped","setEditorRef","img","toDataURL","files","state","firstName","lastName","email","phone","additionalInfo","handleChange","bind","handleSubmit","event","type","target","value","maxSize","getRootProps","getInputProps","isDragActive","isDragReject","rejectedFiles","isFileTooLarge","length","size","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport MainNav from './MainNav.js';\nimport Footer from './Footer.js';\nimport AvatarEditor from 'react-avatar-editor';\nimport Dropzone from 'react-dropzone';\n\nimport { MDBRow, MDBCol, MDBInput, MDBContainer, MDBFormInline, MDBIcon, MDBBtn } from \"mdbreact\";\nimport '../Styles/UserProfile.css';\nexport class UserProfile extends React.Component{\n  editor: AvatarEditor;\n\n  constructor(props){\n    super(props);\n    this.state={\n      firstName:'',\n      lastName:'',\n      email:'',\n      phone:0,\n      interestRadio:1,\n      additionalInfo: '',\n      image: 'https://upload.wikimedia.org/wikipedia/commons/4/4b/What_Is_URL.jpg'\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n\n  }\n  // <Dropzone onDrop={this.handleDrop} disableClick style={{ width: '250px', height: '250px' }}>\n\n  handleChange(event, type){\n    console.log(\"type is \"+ type);\n    console.log(\"value is \"+ event.target.value);\n    this.setState({\n      [type]: event.target.value\n    })\n  }\n  onClick = (nr) => () => {\n    this.setState({\n        interestRadio: nr\n    });\n  }\n  onClickSave = () => {\n    if (this.editor) {\n      // This returns a HTMLCanvasElement, it can be made into a data URL or a blob,\n      // drawn on another canvas, or added to the DOM.\n      const canvas = this.editor.getImage()\n\n      // If you want the image resized to the canvas size (also a HTMLCanvasElement)\n      const canvasScaled = this.editor.getImageScaledToCanvas()\n    }\n  }\n  onDrop = (acceptedFile) => {\n      console.log(acceptedFiles);\n      this.setState({\n        image: dropped[0]\n      })\n    }\n  setEditorRef = (editor: any) => {\n     if (editor) {\n        this.editor = editor;\n        const img = this.editor.getImageScaledToCanvas().toDataURL();\n        console.log(img);\n    }\n}\n\n  handleSubmit(){\n    console.log(\"submit/save profile!\");\n  }\n  onDrop = (files) => {\n    // POST to a test endpoint for demo purposes\n    console.log(\"hi\");\n  }\n\n\n  render(){\n    // const canvas = this.editor.getImage().toDataURL();\n    // let imageURL;\n    // fetch(canvas)\n    //   .then(res => res.blob())\n    //   .then(blob => (imageURL = window.URL.createObjectURL(blob)));\n\n// Usage\n// <img src={imageURL} ... />\n const maxSize = 1048576;\n    return(\n      <div className=\"userprofile-main\">\n\n        <MainNav/>\n\n        <div className = \"userprofile-content\">\n          <div className=\"userprofile-title\">\n            <h1>My OpenSpace Profile</h1>\n          </div>\n          <MDBContainer>\n            <form onSubmit={this.handleSubmit}>\n              <MDBRow>\n                <MDBCol>\n                  <MDBInput\n                    onChange={(event)=>this.handleChange(event, 'firstName')}\n                    label=\"First\"\n                    group\n                    type=\"text\"\n                    validate\n                    required\n                  />\n                </MDBCol>\n                <MDBCol>\n                  <MDBInput\n                    onChange={(event)=>this.handleChange(event, 'lastName')}\n                    label=\"Last\"\n                    group\n                    type=\"text\"\n                    validate\n                    required\n                  />\n                </MDBCol>\n              </MDBRow>\n\n              <MDBRow>\n                <MDBCol>\n                  <MDBInput\n                    onChange={(event)=>this.handleChange(event, 'email')}\n                    label=\"Email *\"\n                    group\n                    type=\"email\"\n                    validate\n                    required\n                  />\n                </MDBCol>\n              </MDBRow>\n\n              <MDBRow>\n                <MDBCol>\n                  <MDBInput\n                    onChange={(event)=>this.handleChange(event, 'phone')}\n                    label=\"Phone *\"\n                    group\n                    type=\"number\"\n                    validate\n                    required\n                  />\n                </MDBCol>\n              </MDBRow>\n\n\n              <div className=\"userprofile-profilepic\">\n                  <MDBRow>\n                      <MDBCol>\n                        <h4>Profile Picture</h4>\n                      </MDBCol>\n                  </MDBRow>\n                  <MDBRow>\n                      <MDBCol>\n                        <Dropzone onDrop={this.onDrop} accept=\"image/png\" minSize={0} maxSize={maxSize}>\n                          {({getRootProps, getInputProps, isDragActive, isDragReject, rejectedFiles}) => {\n                            const isFileTooLarge = rejectedFiles.length > 0 && rejectedFiles[0].size > maxSize;\n                            return (\n                              <div {...getRootProps()}>\n                              <input {...getInputProps()}/>\n                              <AvatarEditor width={250} height={250} image={this.state.image} />\n                                {!isDragActive && 'Click here or drop a file to upload!'}\n                                {isDragActive && !isDragReject && \"Drop it like it's hot!\"}\n                                {isDragReject && \"File type not accepted, sorry!\"}\n                                {isFileTooLarge && (\n                                  <div className=\"text-danger mt-2\">\n                                    File is too large.\n                                  </div>\n                                )}\n                              </div>\n                            )}\n                          }\n                        </Dropzone>\n\n\n                      </MDBCol>\n                  </MDBRow>\n              </div>\n\n              <div className=\"userprofile-selector\">\n              <MDBRow><MDBCol><h4>Are you interested in storing stuff, listing a space, or both?</h4></MDBCol></MDBRow>\n                <MDBRow>\n                  <MDBCol>\n                    <MDBInput gap onClick={this.onClick(1)} checked={this.state.interestRadio===1 ? true : false} label=\"Storing stuff\" type=\"radio\"\n                      id=\"radio1\" />\n                  </MDBCol>\n                </MDBRow>\n\n                <MDBRow>\n                  <MDBCol>\n                    <MDBInput gap onClick={this.onClick(2)} checked={this.state.interestRadio===2 ? true : false} label=\"Listing a space\" type=\"radio\"\n                      id=\"radio2\" />\n                  </MDBCol>\n                </MDBRow>\n\n                <MDBRow>\n                  <MDBCol>\n                    <MDBInput gap onClick={this.onClick(3)} checked={this.state.interestRadio===3 ? true : false} label=\"Both\" type=\"radio\"\n                      id=\"radio3\"/>\n                  </MDBCol>\n                </MDBRow>\n              </div>\n              <div className=\"userprofile-bio\">\n                <MDBRow>\n                  <MDBCol>\n                    <h4>Tell us a little about yourself! (optinal)</h4>\n                  </MDBCol>\n                </MDBRow>\n\n                <MDBRow>\n                  <MDBCol>\n                    <MDBInput onChange={(event)=>this.handleChange(event, 'additionalInfo')} id=\"bookform-extrainfo\" type=\"textarea\" label=\"ex: I am student at ... \" rows=\"5\" cols=\"100\"/>\n                  </MDBCol>\n                </MDBRow>\n              </div>\n\n              <MDBRow>\n                <MDBCol>\n                  <MDBBtn type=\"submit\">Save!</MDBBtn>\n                </MDBCol>\n              </MDBRow>\n            </form>\n          </MDBContainer>\n        </div>\n\n\n        <footer className =\"userprofile-footer\">\n            <Footer/>\n        </footer>\n      </div>\n    );\n  }\n}\nexport default UserProfile;\n"]},"metadata":{},"sourceType":"module"}