{"ast":null,"code":"import _objectSpread from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport axios from 'axios';\nvar API_BASE_URL = 'https://vcm-8728.vm.duke.edu:8888/api/';\n\nfunction handleResponse(response, callback) {\n  return response.data ? callback(response.data) : console.error(response);\n}\n\nexport var Users = {\n  me: function me(callback) {\n    return axios.get(API_BASE_URL + 'me/').then(function (response) {\n      return handleResponse(response, callback);\n    });\n  },\n  all: function all(params, callback) {\n    return axios.get(API_BASE_URL + 'users/').then(function (response) {\n      return handleResponse(response, callback);\n    });\n  },\n  get: function get(_ref, callback) {\n    var username = _ref.username;\n    return axios.get(API_BASE_URL + 'users/' + username + '/').then(function (response) {\n      return handleResponse(response, callback);\n    });\n  },\n  update: function update(_ref2, callback) {\n    var username = _ref2.username,\n        rest = _objectWithoutProperties(_ref2, [\"username\"]);\n\n    return axios.post(API_BASE_URL + 'users/' + username + '/', _objectSpread({}, rest)).post(rest).then(function (response) {\n      return handleResponse(response, callback);\n    });\n  },\n  delete: function _delete(_ref3, callback) {\n    var username = _ref3.username;\n    return axios.delete(API_BASE_URL + 'users/' + username + '/').delete(username).then(function (response) {\n      return handleResponse(response, callback);\n    });\n  }\n};\nexport var Hosts = {\n  all: function all(params, callback) {\n    return axios.get(API_BASE_URL + 'hosts/', {\n      params: params\n    }).then(function (response) {\n      return handleResponse(response, callback);\n    });\n  },\n  get: function get(_ref4, callback) {\n    var username = _ref4.username;\n    return axios.get(API_BASE_URL + 'hosts/' + username + '/').then(function (response) {\n      return handleResponse(response, callback);\n    });\n  },\n  become: function become(callback) {\n    return axios.post(API_BASE_URL + 'hosts/', {}).then(function (response) {\n      return handleResponse(response, callback);\n    });\n  },\n  delete: function _delete(_ref5, callback) {\n    var username = _ref5.username;\n    return axios.delete(API_BASE_URL + 'hosts/' + username + '/').delete(username).then(function (response) {\n      return handleResponse(response, callback);\n    });\n  }\n};\nexport var Locations = {\n  all: function all(params, callback) {\n    return axios.get(API_BASE_URL + 'locations/', {\n      params: params\n    }).then(function (response) {\n      return handleResponse(response, callback);\n    });\n  },\n  get: function get(_ref6, callback) {\n    var google_place_id = _ref6.google_place_id;\n    return axios.get(API_BASE_URL + 'locations/' + google_place_id + '/').then(function (response) {\n      return handleResponse(response, callback);\n    });\n  },\n  create: function create(data, callback) {\n    return axios.post(API_BASE_URL + 'locations/', data).then(function (response) {\n      return handleResponse(response, callback);\n    });\n  }\n};\nexport var Listings = {\n  all: function all(params, callback) {\n    return axios.get(API_BASE_URL + 'listings/', {\n      params: params\n    }).then(function (response) {\n      return handleResponse(response, callback);\n    });\n  },\n  get: function get(_ref7, callback) {\n    var id = _ref7.id;\n    return axios.get(API_BASE_URL + 'listings/' + id + '/').then(function (response) {\n      return handleResponse(response, callback);\n    });\n  },\n  create: function create(data, callback) {\n    return axios.post(API_BASE_URL + 'listings/', data).then(function (response) {\n      return handleResponse(response, callback);\n    });\n  },\n  update: function update(_ref8, callback) {\n    var id = _ref8.id,\n        rest = _objectWithoutProperties(_ref8, [\"id\"]);\n\n    return axios.post(API_BASE_URL + 'listings/' + id + '/', rest).then(function (response) {\n      return handleResponse(response, callback);\n    });\n  },\n  delete: function _delete(_ref9, callback) {\n    var id = _ref9.id;\n    return axios.delete(API_BASE_URL + 'listings/' + id).then(function (response) {\n      return handleResponse(response, callback);\n    });\n  }\n};\nexport var Bookings = {\n  all: function all(params, callback) {\n    return axios.get('bookings/').then(function (response) {\n      return handleResponse(response, callback);\n    });\n  },\n  get: function get(_ref10, callback) {\n    var id = _ref10.id;\n    return axios.get('bookings/' + id + '/').then(function (response) {\n      return handleResponse(response, callback);\n    });\n  },\n  create: function create(data, callback) {\n    return axios.post(API_BASE_URL + 'bookings/', data).then(function (response) {\n      return handleResponse(response, callback);\n    });\n  },\n  update: function update(_ref11, callback) {\n    var id = _ref11.id,\n        rest = _objectWithoutProperties(_ref11, [\"id\"]);\n\n    return axios.post('bookings/' + id + '/', rest).then(function (response) {\n      return handleResponse(response, callback);\n    });\n  },\n  delete: function _delete(_ref12, callback) {\n    var id = _ref12.id;\n    return axios.delete('bookings/' + id + '/').then(function (response) {\n      return handleResponse(response, callback);\n    });\n  },\n  confirm: function confirm(_ref13, callback) {\n    var id = _ref13.id;\n    return axios.post('bookings/', {\n      confirmed: true\n    }).then(function (response) {\n      return handleResponse(response, callback);\n    });\n  }\n};","map":{"version":3,"sources":["/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/src/apiActions.js"],"names":["axios","API_BASE_URL","handleResponse","response","callback","data","console","error","Users","me","get","then","all","params","username","update","rest","post","delete","Hosts","become","Locations","google_place_id","create","Listings","id","Bookings","confirm","confirmed"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\n\r\nconst API_BASE_URL = 'https://vcm-8728.vm.duke.edu:8888/api/';\r\n\r\nfunction handleResponse(response, callback) {\r\n    return response.data ? callback(response.data) : console.error(response)\r\n}\r\n\r\nexport const Users = {\r\n    me: (callback) =>\r\n        axios.get(API_BASE_URL + 'me/')\r\n            .then(response => handleResponse(response, callback)),\r\n    all: (params, callback) =>\r\n        axios.get(API_BASE_URL + 'users/')\r\n            .then(response => handleResponse(response, callback)),\r\n    get: ({username}, callback) =>\r\n        axios.get(API_BASE_URL + 'users/' + username + '/')\r\n            .then(response => handleResponse(response, callback)),\r\n    update: ({username, ...rest}, callback) =>\r\n        axios.post(API_BASE_URL + 'users/' + username + '/', {...rest})\r\n            .post(rest)\r\n            .then(response => handleResponse(response, callback)),\r\n    delete: ({username}, callback) =>\r\n        axios.delete(API_BASE_URL + 'users/' + username + '/')\r\n            .delete(username)\r\n            .then(response => handleResponse(response, callback))\r\n}\r\n\r\nexport const Hosts = {\r\n    all: (params, callback) =>\r\n        axios.get(API_BASE_URL + 'hosts/', {params})\r\n            .then(response => handleResponse(response, callback)),\r\n    get: ({username}, callback) =>\r\n        axios.get(API_BASE_URL + 'hosts/' + username + '/')\r\n            .then(response => handleResponse(response, callback)),\r\n    become: (callback) =>\r\n        axios.post(API_BASE_URL + 'hosts/', {})\r\n            .then(response => handleResponse(response, callback)),\r\n    delete: ({username}, callback) =>\r\n        axios.delete(API_BASE_URL + 'hosts/' + username + '/')\r\n            .delete(username)\r\n            .then(response => handleResponse(response, callback))\r\n}\r\n\r\nexport const Locations = {\r\n    all: (params, callback) =>\r\n        axios.get(API_BASE_URL + 'locations/', {params})\r\n            .then(response => handleResponse(response, callback)),\r\n    get: ({google_place_id}, callback) =>\r\n        axios.get(API_BASE_URL + 'locations/' + google_place_id + '/')\r\n            .then(response => handleResponse(response, callback)),\r\n    create: (data, callback) =>\r\n        axios.post(API_BASE_URL + 'locations/', data)\r\n            .then(response => handleResponse(response, callback)),\r\n}\r\n\r\nexport const Listings = {\r\n    all: (params, callback) =>\r\n        axios.get(API_BASE_URL + 'listings/', {params})\r\n            .then(response => handleResponse(response, callback)),\r\n    get: ({id}, callback) =>\r\n        axios.get(API_BASE_URL + 'listings/' + id + '/')\r\n            .then(response => handleResponse(response, callback)),\r\n    create: (data, callback) =>\r\n        axios.post(API_BASE_URL + 'listings/', data)\r\n            .then(response => handleResponse(response, callback)),\r\n    update: ({id, ...rest}, callback) =>\r\n        axios.post(API_BASE_URL + 'listings/' + id + '/', rest)\r\n            .then(response => handleResponse(response, callback)),\r\n    delete: ({id}, callback) =>\r\n        axios.delete(API_BASE_URL + 'listings/' + id)\r\n            .then(response => handleResponse(response, callback))\r\n}\r\n\r\nexport const Bookings = {\r\n    all: (params, callback) =>\r\n        axios.get('bookings/')\r\n            .then(response => handleResponse(response, callback)),\r\n    get: ({id}, callback) =>\r\n        axios.get('bookings/' + id + '/')\r\n            .then(response => handleResponse(response, callback)),\r\n    create: (data, callback) =>\r\n        axios.post(API_BASE_URL +'bookings/', data)\r\n            .then(response => handleResponse(response, callback)),\r\n    update: ({id, ...rest}, callback) =>\r\n        axios.post('bookings/' + id + '/', rest)\r\n            .then(response => handleResponse(response, callback)),\r\n    delete: ({id}, callback) =>\r\n        axios.delete('bookings/' + id + '/')\r\n            .then(response => handleResponse(response, callback)),\r\n    confirm: ({id}, callback) =>\r\n        axios.post('bookings/', {confirmed: true})\r\n            .then(response => handleResponse(response, callback))\r\n}\r\n"]},"metadata":{},"sourceType":"module"}