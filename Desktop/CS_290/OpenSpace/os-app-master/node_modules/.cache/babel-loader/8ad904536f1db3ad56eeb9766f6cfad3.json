{"ast":null,"code":"import _classCallCheck from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/src/Components/Filter.js\";\nimport React from 'react';\nimport { MDBRow, MDBContainer, MDBInput, MDBCol, MDBFormInline, MDBIcon, MDBBtn } from \"mdbreact\";\nimport { MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem } from \"mdbreact\";\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport moment from 'moment';\nimport DayPickerInput from 'react-day-picker/DayPickerInput.js';\nimport { formatDate, parseDate } from 'react-day-picker/moment';\nimport 'react-day-picker/lib/style.css';\nexport var Filter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Filter, _React$Component);\n\n  function Filter(props) {\n    var _this;\n\n    _classCallCheck(this, Filter);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Filter).call(this, props));\n    _this.state = {\n      dropdownOpen: false,\n      spaceTypes: [{\n        value: 'Restaurant space',\n        label: 'Restaurant'\n      }, {\n        value: 'Mall space',\n        label: 'Mall'\n      }, {\n        value: 'Apartment space',\n        label: 'Apartment'\n      }, {\n        value: 'Garage space',\n        label: 'Garage'\n      }, {\n        value: 'Closet space',\n        label: 'Closet'\n      }, {\n        value: 'Basement space',\n        label: 'Basement'\n      }, {\n        value: 'Outdoor space',\n        label: 'Outdoor (i.e shed)'\n      }]\n    };\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Filter, [{\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState(function (prevState) {\n        return {\n          dropdownOpen: !prevState.dropdownOpen\n        };\n      });\n    } // <select value={this.props.arr} multiple={true} onChange={this.props.handleChange}>\n    //   <option value=\"Restaurant space\">Restaurant</option>\n    //   <option value=\"Apartment space\">Apartment</option>\n    //   <option value=\"Mall space\">Mall</option>\n    //   <option value=\"Garage space\">Garage</option>\n    //   <option value=\"Closet space\">Closet</option>\n    //   <option value=\"Basement space\">Basement</option>\n    //   <option value=\"Attic space\">Attic</option>\n    //   <option value=\"Outdoor space\">Outdoor Storage (i.e. shed)</option>\n    // </select>\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          from = _this$props.from,\n          to = _this$props.to;\n      var modifiers = {\n        start: from,\n        end: to\n      }; // const spaceTypeDropItems = this.state.spaceTypes.map((space, index) =>\n      //     <Dropdown.Item value={space.value}>{space.label}</Dropdown.Item>\n      //\n      //\n      // );\n\n      return React.createElement(\"div\", {\n        className: \"filter-main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"filter-spaceTypeDropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        isOpen: this.state.dropdownOpen,\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(DropdownToggle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Dropdown\"), React.createElement(DropdownMenu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(DropdownItem, {\n        header: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Header\"), React.createElement(DropdownItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Some Action\"), React.createElement(DropdownItem, {\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Action (disabled)\"), React.createElement(DropdownItem, {\n        divider: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(DropdownItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Foo Action\"), React.createElement(DropdownItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Bar Action\"), React.createElement(DropdownItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Quo Action\")))), React.createElement(\"div\", {\n        className: \"InputFromTo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(DayPickerInput, {\n        value: from,\n        placeholder: \"From\",\n        format: \"LL\",\n        formatDate: formatDate,\n        parseDate: parseDate,\n        dayPickerProps: {\n          selectedDays: [from, {\n            from: from,\n            to: to\n          }],\n          disabledDays: {\n            after: to\n          },\n          toMonth: to,\n          modifiers: modifiers,\n          numberOfMonths: 1,\n          onDayClick: function onDayClick() {\n            return _this2.to.getInput().focus();\n          }\n        },\n        onDayChange: this.props.handleFromChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), ' ', \"\\u2014\", ' ', React.createElement(\"span\", {\n        className: \"InputFromTo-to\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(DayPickerInput, {\n        ref: function ref(el) {\n          return _this2.to = el;\n        },\n        value: to,\n        placeholder: \"To\",\n        format: \"LL\",\n        formatDate: formatDate,\n        parseDate: parseDate,\n        dayPickerProps: {\n          selectedDays: [from, {\n            from: from,\n            to: to\n          }],\n          disabledDays: {\n            before: from\n          },\n          modifiers: modifiers,\n          month: from,\n          fromMonth: from,\n          numberOfMonths: 1\n        },\n        onDayChange: this.props.handleToChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Filter;\n}(React.Component);\nexport default Filter;","map":{"version":3,"sources":["/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/src/Components/Filter.js"],"names":["React","MDBRow","MDBContainer","MDBInput","MDBCol","MDBFormInline","MDBIcon","MDBBtn","MDBDropdown","MDBDropdownToggle","MDBDropdownMenu","MDBDropdownItem","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","moment","DayPickerInput","formatDate","parseDate","Filter","props","state","dropdownOpen","spaceTypes","value","label","toggle","bind","setState","prevState","from","to","modifiers","start","end","selectedDays","disabledDays","after","toMonth","numberOfMonths","onDayClick","getInput","focus","handleFromChange","el","before","month","fromMonth","handleToChange","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { MDBRow, MDBContainer, MDBInput, MDBCol, MDBFormInline, MDBIcon, MDBBtn } from \"mdbreact\";\nimport { MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem } from \"mdbreact\";\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nimport moment from 'moment';\nimport DayPickerInput from 'react-day-picker/DayPickerInput.js';\nimport { formatDate, parseDate } from 'react-day-picker/moment';\nimport 'react-day-picker/lib/style.css';\n\nexport class Filter extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state={\n      dropdownOpen: false,\n      spaceTypes:[\n        {\n          value:'Restaurant space',\n          label:'Restaurant'\n        },\n        {\n          value:'Mall space',\n          label:'Mall'\n        },\n        {\n          value:'Apartment space',\n          label:'Apartment'\n        },\n        {\n          value:'Garage space',\n          label:'Garage'\n        },\n        {\n          value:'Closet space',\n          label:'Closet'\n        },\n        {\n          value:'Basement space',\n          label:'Basement'\n        },\n        {\n          value:'Outdoor space',\n          label:'Outdoor (i.e shed)'\n        }\n      ]\n    }\n    this.toggle = this.toggle.bind(this);\n\n\n  }\n  toggle() {\n      this.setState(prevState => ({\n        dropdownOpen: !prevState.dropdownOpen\n      }));\n  }\n  // <select value={this.props.arr} multiple={true} onChange={this.props.handleChange}>\n  //   <option value=\"Restaurant space\">Restaurant</option>\n  //   <option value=\"Apartment space\">Apartment</option>\n  //   <option value=\"Mall space\">Mall</option>\n  //   <option value=\"Garage space\">Garage</option>\n  //   <option value=\"Closet space\">Closet</option>\n  //   <option value=\"Basement space\">Basement</option>\n  //   <option value=\"Attic space\">Attic</option>\n  //   <option value=\"Outdoor space\">Outdoor Storage (i.e. shed)</option>\n  // </select>\n\n  render(){\n    const { from, to } = this.props;\n    const modifiers = { start: from, end: to };\n    // const spaceTypeDropItems = this.state.spaceTypes.map((space, index) =>\n    //     <Dropdown.Item value={space.value}>{space.label}</Dropdown.Item>\n    //\n    //\n    // );\n    return(\n      <div className=\"filter-main\">\n        <div className=\"filter-spaceTypeDropdown\">\n        <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n          <DropdownToggle >\n            Dropdown\n          </DropdownToggle>\n          <DropdownMenu>\n          <DropdownItem header>Header</DropdownItem>\n          <DropdownItem>Some Action</DropdownItem>\n          <DropdownItem disabled>Action (disabled)</DropdownItem>\n          <DropdownItem divider />\n          <DropdownItem>Foo Action</DropdownItem>\n          <DropdownItem>Bar Action</DropdownItem>\n          <DropdownItem>Quo Action</DropdownItem>\n        </DropdownMenu>\n\n        </Dropdown>\n        </div>\n        <div className=\"InputFromTo\">\n           <DayPickerInput\n             value={from}\n             placeholder=\"From\"\n             format=\"LL\"\n             formatDate={formatDate}\n             parseDate={parseDate}\n             dayPickerProps={{\n               selectedDays: [from, { from, to }],\n               disabledDays: { after: to },\n               toMonth: to,\n               modifiers,\n               numberOfMonths: 1,\n               onDayClick: () => this.to.getInput().focus(),\n             }}\n             onDayChange={this.props.handleFromChange}\n           />{' '}\n           —{' '}\n           <span className=\"InputFromTo-to\">\n             <DayPickerInput\n               ref={el => (this.to = el)}\n               value={to}\n               placeholder=\"To\"\n               format=\"LL\"\n               formatDate={formatDate}\n               parseDate={parseDate}\n               dayPickerProps={{\n                 selectedDays: [from, { from, to }],\n                 disabledDays: { before: from },\n                 modifiers,\n                 month: from,\n                 fromMonth: from,\n                 numberOfMonths: 1,\n               }}\n               onDayChange={this.props.handleToChange}\n             />\n           </span>\n        </div>\n\n      </div>\n\n    );\n  }\n\n}\n\nexport default Filter;\n"]},"metadata":{},"sourceType":"module"}