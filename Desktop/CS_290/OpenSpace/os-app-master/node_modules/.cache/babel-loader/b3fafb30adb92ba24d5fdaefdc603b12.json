{"ast":null,"code":"import _classCallCheck from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/src/Components/DropFile.js\";\nimport React from 'react';\nimport AvatarEditor from 'react-avatar-editor';\nimport Dropzone from 'react-dropzone';\nimport { MDBView, MDBMask } from \"mdbreact\";\nexport var DropFile =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DropFile, _React$Component);\n\n  function DropFile(props) {\n    var _this;\n\n    _classCallCheck(this, DropFile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DropFile).call(this, props));\n    _this.handleMouseOver = _this.handleMouseOver.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(DropFile, [{\n    key: \"handleMouseOver\",\n    value: function handleMouseOver() {\n      console.log(\"mousing over the picture\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Dropzone, {\n        onDrop: this.props.handleOnDrop,\n        accept: \"image/png\",\n        minSize: this.props.minSize,\n        maxSize: this.props.maxSize,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, function (_ref) {\n        var getRootProps = _ref.getRootProps,\n            getInputProps = _ref.getInputProps,\n            isDragActive = _ref.isDragActive,\n            isDragReject = _ref.isDragReject,\n            rejectedFiles = _ref.rejectedFiles;\n        var isFileTooLarge = rejectedFiles.length > 0 && rejectedFiles[0].size > _this2.props.maxSize;\n        return React.createElement(\"div\", Object.assign({}, getRootProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }), React.createElement(AvatarEditor, {\n          width: _this2.props.avatarWidth,\n          height: _this2.props.avatarHeight,\n          image: _this2.props.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        })), !isDragActive && 'Click here or drop a file to upload!', isDragActive && !isDragReject && \"Drop it like it's hot!\", isDragReject && \"File type not accepted, sorry!\", isFileTooLarge && React.createElement(\"div\", {\n          className: \"text-danger mt-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, \"File is too large.\"));\n      });\n    }\n  }]);\n\n  return DropFile;\n}(React.Component);\nexport default DropFile;","map":{"version":3,"sources":["/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/src/Components/DropFile.js"],"names":["React","AvatarEditor","Dropzone","MDBView","MDBMask","DropFile","props","handleMouseOver","bind","console","log","handleOnDrop","minSize","maxSize","getRootProps","getInputProps","isDragActive","isDragReject","rejectedFiles","isFileTooLarge","length","size","avatarWidth","avatarHeight","image","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,UAAjC;AAEA,WAAaC,QAAb;AAAA;AAAA;AAAA;;AACE,oBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,kFAAMA,KAAN;AACA,UAAKC,eAAL,GAAuB,MAAKA,eAAL,CAAqBC,IAArB,uDAAvB;AAFgB;AAGjB;;AAJH;AAAA;AAAA,sCAMmB;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACD;AARH;AAAA;AAAA,6BASU;AAAA;;AAEN,aACE,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWK,YAA7B;AAA2C,QAAA,MAAM,EAAC,WAAlD;AAA8D,QAAA,OAAO,EAAE,KAAKL,KAAL,CAAWM,OAAlF;AAA2F,QAAA,OAAO,EAAE,KAAKN,KAAL,CAAWO,OAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,gBAA8E;AAAA,YAA5EC,YAA4E,QAA5EA,YAA4E;AAAA,YAA9DC,aAA8D,QAA9DA,aAA8D;AAAA,YAA/CC,YAA+C,QAA/CA,YAA+C;AAAA,YAAjCC,YAAiC,QAAjCA,YAAiC;AAAA,YAAnBC,aAAmB,QAAnBA,aAAmB;AAC7E,YAAMC,cAAc,GAAGD,aAAa,CAACE,MAAd,GAAuB,CAAvB,IAA4BF,aAAa,CAAC,CAAD,CAAb,CAAiBG,IAAjB,GAAwB,MAAI,CAACf,KAAL,CAAWO,OAAtF;AACA,eAEE,6CAASC,YAAY,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACA,oBAAC,YAAD;AAAc,UAAA,KAAK,EAAE,MAAI,CAACR,KAAL,CAAWgB,WAAhC;AAA6C,UAAA,MAAM,EAAE,MAAI,CAAChB,KAAL,CAAWiB,YAAhE;AAA8E,UAAA,KAAK,EAAE,MAAI,CAACjB,KAAL,CAAWkB,KAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,EAGA,+CAAWT,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHA,EAIK,CAACC,YAAD,IAAiB,sCAJtB,EAKKA,YAAY,IAAI,CAACC,YAAjB,IAAiC,wBALtC,EAMKA,YAAY,IAAI,gCANrB,EAOKE,cAAc,IACb;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCARN,CAFF;AAkBE,OArBN,CADF;AA0BD;AArCH;;AAAA;AAAA,EAA8BnB,KAAK,CAACyB,SAApC;AAuCA,eAAepB,QAAf","sourcesContent":["import React from 'react';\nimport AvatarEditor from 'react-avatar-editor';\nimport Dropzone from 'react-dropzone';\nimport { MDBView, MDBMask } from \"mdbreact\";\n\nexport class DropFile extends React.Component{\n  constructor(props){\n    super(props);\n    this.handleMouseOver = this.handleMouseOver.bind(this);\n  }\n\n  handleMouseOver(){\n    console.log(\"mousing over the picture\");\n  }\n  render(){\n\n    return(\n      <Dropzone onDrop={this.props.handleOnDrop} accept=\"image/png\" minSize={this.props.minSize} maxSize={this.props.maxSize}>\n        {({getRootProps, getInputProps, isDragActive, isDragReject, rejectedFiles}) => {\n          const isFileTooLarge = rejectedFiles.length > 0 && rejectedFiles[0].size > this.props.maxSize;\n          return (\n\n            <div {...getRootProps()}>\n            <AvatarEditor width={this.props.avatarWidth} height={this.props.avatarHeight} image={this.props.image} />\n\n            <input {...getInputProps()}/>\n                {!isDragActive && 'Click here or drop a file to upload!'}\n                {isDragActive && !isDragReject && \"Drop it like it's hot!\"}\n                {isDragReject && \"File type not accepted, sorry!\"}\n                {isFileTooLarge && (\n                  <div className=\"text-danger mt-2\">\n                    File is too large.\n                  </div>\n                )}\n\n\n\n            </div>\n          )}\n        }\n      </Dropzone>\n    );\n  }\n}\nexport default DropFile;\n"]},"metadata":{},"sourceType":"module"}