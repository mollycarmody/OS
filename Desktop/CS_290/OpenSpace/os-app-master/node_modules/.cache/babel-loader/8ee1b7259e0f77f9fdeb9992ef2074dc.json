{"ast":null,"code":"import _objectWithoutProperties from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport axiosRestClient from 'axios-rest-client';\nvar API_BASE_URL = 'https://vcm-8728.vm.duke.edu:8888/api/';\nvar api = axiosRestClient({\n  baseUrl: API_BASE_URL\n}); //example callback: data => console.log(data)\n//example usage: actions.Listings.all(params, data => console.log(data)}\n\nfunction handleResponse(response, callback) {\n  return response.isSuccessful ? callback(response.data) : console.log(response);\n}\n\nexport var Users = {\n  me: function me(callback) {\n    return api.me.all().then(function (response) {\n      return handleResponse(response, callback);\n    });\n  },\n  all: function all(params, callback) {\n    return api.users.all().then(function (response) {\n      return handleResponse(response, callback);\n    });\n  },\n  get: function get(_ref, callback) {\n    var username = _ref.username;\n    return api.users.find(username).then(function (response) {\n      return handleResponse(response, callback);\n    });\n  },\n  update: function update(_ref2, callback) {\n    var username = _ref2.username,\n        rest = _objectWithoutProperties(_ref2, [\"username\"]);\n\n    return api.users[username].post(rest).then(function (response) {\n      return handleResponse(response, callback);\n    });\n  },\n  delete: function _delete(_ref3, callback) {\n    var username = _ref3.username;\n    return api.users.delete(username).then(function (response) {\n      return handleResponse(response, callback);\n    });\n  }\n};\nexport var Hosts = {\n  all: function all(params, callback) {\n    return api.hosts.all(params).then(function (response) {\n      return handleResponse(response, callback);\n    });\n  },\n  get: function get(username, callback) {\n    return api.hosts.find(username).then(function (response) {\n      return handleResponse(response, callback);\n    });\n  },\n  become: function become(callback) {\n    return api.hosts.post({}).then(function (response) {\n      return handleResponse(response, callback);\n    });\n  },\n  delete: function _delete(_ref4, callback) {\n    var username = _ref4.username;\n    return api.hosts.delete(username).then(function (response) {\n      return handleResponse(response, callback);\n    });\n  }\n};\nexport var Locations = {\n  all: function all(params, callback) {\n    return api.locations.all(params).then(function (response) {\n      return handleResponse(response, callback);\n    });\n  },\n  get: function get(_ref5, callback) {\n    var google_place_id = _ref5.google_place_id;\n    return api.locations.find(google_place_id).then(function (response) {\n      return handleResponse(response, callback);\n    });\n  },\n  create: function create(data, callback) {\n    return api.locations.create(data).then(function (response) {\n      return handleResponse(response, callback);\n    });\n  }\n};\nexport var Listings = {\n  all: function all(params, callback) {\n    return api.listings.all(params).then(function (response) {\n      return handleResponse(response, callback);\n    });\n  },\n  get: function get(_ref6, callback) {\n    var id = _ref6.id;\n    return api.listings.find(id).then(function (response) {\n      return handleResponse(response, callback);\n    });\n  },\n  create: function create(data, callback) {\n    return api.listings.create(data).then(function (response) {\n      return handleResponse(response, callback);\n    });\n  },\n  update: function update(data, callback) {\n    return api.listings.update(data).then(function (response) {\n      return handleResponse(response, callback);\n    });\n  },\n  delete: function _delete(_ref7, callback) {\n    var id = _ref7.id;\n    return api.listings.delete(id).then(function (response) {\n      return handleResponse(response, callback);\n    });\n  }\n};\nexport var Bookings = {\n  all: function all(params, callback) {\n    return api.bookings.all(params).then(function (response) {\n      return handleResponse(response, callback);\n    });\n  },\n  get: function get(_ref8, callback) {\n    var id = _ref8.id;\n    return api.bookings.find(id).then(function (response) {\n      return handleResponse(response, callback);\n    });\n  },\n  create: function create(data, callback) {\n    return api.bookings.create(data).then(function (response) {\n      return handleResponse(response, callback);\n    });\n  },\n  update: function update(_ref9, callback) {\n    var id = _ref9.id,\n        rest = _objectWithoutProperties(_ref9, [\"id\"]);\n\n    return api.bookings[id].post(rest).then(function (response) {\n      return handleResponse(response, callback);\n    });\n  },\n  delete: function _delete(_ref10, callback) {\n    var id = _ref10.id;\n    return api.bookings.delete(id).then(function (response) {\n      return handleResponse(response, callback);\n    });\n  },\n  confirm: function confirm(_ref11, callback) {\n    var id = _ref11.id;\n    return api.bookings[id].post({\n      confirmed: true\n    }).then(function (response) {\n      return handleResponse(response, callback);\n    });\n  }\n};","map":{"version":3,"sources":["/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/src/apiActions.js"],"names":["axiosRestClient","API_BASE_URL","api","baseUrl","handleResponse","response","callback","isSuccessful","data","console","log","Users","me","all","then","params","users","get","username","find","update","rest","post","delete","Hosts","hosts","become","Locations","locations","google_place_id","create","Listings","listings","id","Bookings","bookings","confirm","confirmed"],"mappings":"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","sourcesContent":["import axiosRestClient from 'axios-rest-client'\r\n\r\nconst API_BASE_URL = 'https://vcm-8728.vm.duke.edu:8888/api/'\r\n\r\nconst api = axiosRestClient({\r\n    baseUrl: API_BASE_URL\r\n});\r\n\r\n//example callback: data => console.log(data)\r\n\r\n//example usage: actions.Listings.all(params, data => console.log(data)}\r\n\r\nfunction handleResponse(response, callback) {\r\n    return response.isSuccessful ? callback(response.data) : console.log(response)\r\n}\r\n\r\nexport const Users = {\r\n    me: (callback) =>\r\n        api.me\r\n            .all()\r\n            .then(response => handleResponse(response, callback)),\r\n    all: (params, callback) =>\r\n        api.users\r\n            .all()\r\n            .then(response => handleResponse(response, callback)),\r\n    get: ({username}, callback) =>\r\n        api.users\r\n            .find(username)\r\n            .then(response => handleResponse(response, callback)),\r\n    update: ({username, ...rest}, callback) =>\r\n        api.users[username]\r\n            .post(rest)\r\n            .then(response => handleResponse(response, callback)),\r\n    delete: ({username}, callback) =>\r\n        api.users\r\n            .delete(username)\r\n            .then(response => handleResponse(response, callback))\r\n}\r\n\r\nexport const Hosts = {\r\n    all: (params, callback) =>\r\n        api.hosts\r\n            .all(params)\r\n            .then(response => handleResponse(response, callback)),\r\n    get: (username, callback) =>\r\n        api.hosts\r\n            .find(username)\r\n            .then(response => handleResponse(response, callback)),\r\n    become: (callback) =>\r\n        api.hosts\r\n            .post({})\r\n            .then(response => handleResponse(response, callback)),\r\n    delete: ({username}, callback) =>\r\n        api.hosts\r\n            .delete(username)\r\n            .then(response => handleResponse(response, callback))\r\n}\r\n\r\nexport const Locations = {\r\n    all: (params, callback) =>\r\n        api.locations\r\n            .all(params)\r\n            .then(response => handleResponse(response, callback)),\r\n    get: ({google_place_id}, callback) =>\r\n        api.locations\r\n            .find(google_place_id)\r\n            .then(response => handleResponse(response, callback)),\r\n    create: (data, callback) =>\r\n        api.locations\r\n            .create(data)\r\n            .then(response => handleResponse(response, callback)),\r\n}\r\n\r\nexport const Listings = {\r\n    all: (params, callback) =>\r\n        api.listings\r\n            .all(params)\r\n            .then(response => handleResponse(response, callback)),\r\n    get: ({id}, callback) =>\r\n        api.listings\r\n            .find(id)\r\n            .then(response => handleResponse(response, callback)),\r\n    create: (data, callback) =>\r\n        api.listings\r\n            .create(data)\r\n            .then(response => handleResponse(response, callback)),\r\n    update: (data, callback) =>\r\n        api.listings\r\n            .update(data)\r\n            .then(response => handleResponse(response, callback)),\r\n    delete: ({id}, callback) =>\r\n        api.listings\r\n            .delete(id)\r\n            .then(response => handleResponse(response, callback))\r\n}\r\n\r\nexport const Bookings = {\r\n    all: (params, callback) =>\r\n        api.bookings\r\n            .all(params)\r\n            .then(response => handleResponse(response, callback)),\r\n    get: ({id}, callback) =>\r\n        api.bookings\r\n            .find(id)\r\n            .then(response => handleResponse(response, callback)),\r\n    create: (data, callback) =>\r\n        api.bookings\r\n            .create(data)\r\n            .then(response => handleResponse(response, callback)),\r\n    update: ({id, ...rest}, callback) =>\r\n        api.bookings[id]\r\n            .post(rest)\r\n            .then(response => handleResponse(response, callback)),\r\n    delete: ({id}, callback) =>\r\n        api.bookings\r\n            .delete(id)\r\n            .then(response => handleResponse(response, callback)),\r\n    confirm: ({id}, callback) =>\r\n        api.bookings[id]\r\n            .post({confirmed: true})\r\n            .then(response => handleResponse(response, callback))\r\n}"]},"metadata":{},"sourceType":"module"}