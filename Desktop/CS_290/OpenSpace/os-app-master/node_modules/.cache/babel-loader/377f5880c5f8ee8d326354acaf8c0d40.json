{"ast":null,"code":"import _classCallCheck from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/src/Components/TermsCond.js\";\nimport React from 'react';\nimport List from './List.js';\nexport var TermsCond =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TermsCond, _React$Component);\n\n  function TermsCond(props) {\n    _classCallCheck(this, TermsCond);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TermsCond).call(this, props));\n  }\n\n  _createClass(TermsCond, [{\n    key: \"render\",\n    value: function render() {\n      var terms = [{\n        header: 'Acceptance of Terms',\n        points: ['These Terms and Conditions form a legally binding agreement between you (“you”, “your”, the “User”, the “Host” or the “Renter”) and OpenSpace (“OpenSpace”, “we”, “us”, “our”, or the “Company”) which governs your use of this form (the “Website”) and our services.', 'By clicking “I ACCEPT” or “Yes” to Accept Terms and Conditions, you register as a user of OpenSpace (“User”) and you enter a legally binding agreement with OpenSpace on the following terms. You warrant that you have full legal capacity to enter into this agreement. If you do not accept all the Terms and Conditions you must not use or access the Website.', 'OpenSpace reserves the right to amend these Terms and Conditions from time to time without notice. You will be deemed to have read and accepted these Terms and Conditions, including any changes, each time you use the Site.']\n      }, {\n        header: 'Defined Terms',\n        points: ['Host: the person providing a Space in order for the Renter to store their items', 'Space: the physical space at the Hosts’ address in which items are stored under a Contract', 'Renter: the person paying the Total Fee and utilising a Space to store items belonging to them or under their possession', 'Listing: the Space of a host being offered via the platform', 'Contract: Agreement between a Host and a Renter to utilise a Space for the storage of goods for a Total Fee', 'Stored Goods: means the goods and items to be stored under a Contract', 'Total Fee: Consists of the aggregate of OpenSpace Rent and OpenSpace Commission', 'OpenSpace Rent: The Listing price applied by a Host for the use of a storage Space', 'OpenSpace Commission: Fee paid to OpenSpace (excluding sales taxes) of the Total Fee.', 'Host Guarantee Contribution: Contribution deducted from OpenSpace Rent calculated as 0% (excluding sales taxes) of the OpenSpace Rent.', 'Prohibited Goods: The following items may not be stored through a Contract under any circumstances: Toxic, polluted or contaminated goods; firearms, munitions, weapons or explosives; radioactive materials; highly flammable or hazardous goods; living plants or animals; food or perishable goods (unless frozen food to be stored in a deep freezer); anything damp, mouldy, rotten or infested with or damaged by parasites; any item which emits any fumes or strong odour; cash and securities; illegal goods; waste; or any item whose presence would invalidate any insurance policy which would otherwise cover the items or the storage space', 'Payment Manager: Venmo, https://venmo.com/']\n      }];\n      var listOfTerms = terms.map(function (term) {\n        return React.createElement(\"div\", {\n          className: \"termCond-term\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, term.header), React.createElement(List, {\n          ordered: false,\n          bulletPoints: term.points,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }));\n      });\n      return React.createElement(\"div\", {\n        className: \"terms-main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(List, {\n        ordered: true,\n        bulletPoints: listOfTerms,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TermsCond;\n}(React.Component);\nexport default TermsCond;","map":{"version":3,"sources":["/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/src/Components/TermsCond.js"],"names":["React","List","TermsCond","props","terms","header","points","listOfTerms","map","term","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,WAAaC,SAAb;AAAA;AAAA;AAAA;;AACE,qBAAYC,KAAZ,EAAkB;AAAA;;AAAA,kFACVA,KADU;AAEjB;;AAHH;AAAA;AAAA,6BAKU;AACN,UAAMC,KAAK,GAAG,CACZ;AACEC,QAAAA,MAAM,EAAC,qBADT;AAEEC,QAAAA,MAAM,EAAE,CAAC,wQAAD,EAA2Q,qWAA3Q,EAAknB,gOAAlnB;AAFV,OADY,EAKZ;AACED,QAAAA,MAAM,EAAC,eADT;AAEEC,QAAAA,MAAM,EAAE,CAAC,iFAAD,EAAoF,4FAApF,EAAkL,0HAAlL,EAA8S,6DAA9S,EAA6W,6GAA7W,EAA4d,uEAA5d,EAAqiB,iFAAriB,EAAwnB,oFAAxnB,EAA8sB,uFAA9sB,EAAuyB,wIAAvyB,EAAi7B,2nBAAj7B,EAA8iD,4CAA9iD;AAFV,OALY,CAAd;AAUA,UAAMC,WAAW,GAAGH,KAAK,CAACI,GAAN,CAAU,UAACC,IAAD;AAAA,eAC5B;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,IAAI,CAACJ,MAAV,CADF,EAEE,oBAAC,IAAD;AAAM,UAAA,OAAO,EAAG,KAAhB;AAAuB,UAAA,YAAY,EAAEI,IAAI,CAACH,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,CAD4B;AAAA,OAAV,CAApB;AAMA,aACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,OAAO,EAAE,IAAf;AAAqB,QAAA,YAAY,EAAEC,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD;AA3BH;;AAAA;AAAA,EAA+BP,KAAK,CAACU,SAArC;AA6BA,eAAeR,SAAf","sourcesContent":["import React from 'react';\nimport List from './List.js';\n\nexport class TermsCond extends React.Component{\n  constructor(props){\n    super(props);\n  }\n\n  render(){\n    const terms = [\n      {\n        header:'Acceptance of Terms',\n        points: ['These Terms and Conditions form a legally binding agreement between you (“you”, “your”, the “User”, the “Host” or the “Renter”) and OpenSpace (“OpenSpace”, “we”, “us”, “our”, or the “Company”) which governs your use of this form (the “Website”) and our services.', 'By clicking “I ACCEPT” or “Yes” to Accept Terms and Conditions, you register as a user of OpenSpace (“User”) and you enter a legally binding agreement with OpenSpace on the following terms. You warrant that you have full legal capacity to enter into this agreement. If you do not accept all the Terms and Conditions you must not use or access the Website.', 'OpenSpace reserves the right to amend these Terms and Conditions from time to time without notice. You will be deemed to have read and accepted these Terms and Conditions, including any changes, each time you use the Site.']\n      },\n      {\n        header:'Defined Terms',\n        points: ['Host: the person providing a Space in order for the Renter to store their items', 'Space: the physical space at the Hosts’ address in which items are stored under a Contract', 'Renter: the person paying the Total Fee and utilising a Space to store items belonging to them or under their possession', 'Listing: the Space of a host being offered via the platform', 'Contract: Agreement between a Host and a Renter to utilise a Space for the storage of goods for a Total Fee', 'Stored Goods: means the goods and items to be stored under a Contract', 'Total Fee: Consists of the aggregate of OpenSpace Rent and OpenSpace Commission', 'OpenSpace Rent: The Listing price applied by a Host for the use of a storage Space', 'OpenSpace Commission: Fee paid to OpenSpace (excluding sales taxes) of the Total Fee.', 'Host Guarantee Contribution: Contribution deducted from OpenSpace Rent calculated as 0% (excluding sales taxes) of the OpenSpace Rent.', 'Prohibited Goods: The following items may not be stored through a Contract under any circumstances: Toxic, polluted or contaminated goods; firearms, munitions, weapons or explosives; radioactive materials; highly flammable or hazardous goods; living plants or animals; food or perishable goods (unless frozen food to be stored in a deep freezer); anything damp, mouldy, rotten or infested with or damaged by parasites; any item which emits any fumes or strong odour; cash and securities; illegal goods; waste; or any item whose presence would invalidate any insurance policy which would otherwise cover the items or the storage space', 'Payment Manager: Venmo, https://venmo.com/']\n      }\n    ];\n    const listOfTerms = terms.map((term) =>\n      <div className=\"termCond-term\">\n        <h1>{term.header}</h1>\n        <List ordered= {false} bulletPoints={term.points}/>\n      </div>\n    );\n    return(\n      <div className=\"terms-main\">\n        <List ordered={true} bulletPoints={listOfTerms}/>\n      </div>\n    );\n  }\n}\nexport default TermsCond;\n"]},"metadata":{},"sourceType":"module"}