{"ast":null,"code":"import _toConsumableArray from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/src/Components/Listing.js\";\nimport React, { Component } from 'react';\nimport 'mdbreact/dist/css/mdb.css'; //import logo from './logo.svg';\n\nimport '../App.css';\nimport '../Styles/Listing.css';\nimport Table from './Table.js';\nimport Map from './Map.js';\nimport MainNav from './MainNav.js';\nimport HowItWorks from './HowItWorks.js';\nimport Filter from './Filter.js';\nimport { MDBRow, MDBCol, MDBFormInline, MDBIcon, MDBBtn } from \"mdbreact\";\nimport { BrowserRouter, Route, NavLink } from 'react-router-dom';\nimport Fullpage, { FullPageSections, FullpageSection } from 'react-fullpage';\nimport moment from 'moment';\nimport 'react-day-picker/lib/style.css';\nimport DayPickerInput from 'react-day-picker/DayPickerInput.js';\nimport { formatDate, parseDate } from 'react-day-picker/moment';\nimport * as Api from '../apiActions.js';\nimport * as API from \"../apiActions\"; // import Main from './Main.js';\n// import PracticeNewPage from './Components/PracticeNewPage.js';\n// import {\n//   Route,\n//   NavLink,\n//   HashRouter\n// } from \"react-router-dom\";\n\nexport var Listing =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Listing, _Component);\n\n  function Listing(props) {\n    var _this;\n\n    _classCallCheck(this, Listing);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Listing).call(this, props));\n    _this.state = {\n      newStateControl: false,\n      showModal: false,\n      login: false,\n      signup: false,\n      searchVal: _this.props.location.state,\n      data: [],\n      arr: [],\n      from: undefined,\n      to: undefined,\n      startD: '',\n      endD: '',\n      distance: undefined,\n      filtersUsed: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleFromChange = _this.handleFromChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleToChange = _this.handleToChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.get2D = _this.get2D.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.formatDates = _this.formatDates.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClearFilters = _this.handleClearFilters.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.showFromMonth = _this.showFromMonth.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } //put fitlers in brackets as from_plade_id: \"string\", from_radis:\"8\"\n\n\n  _createClass(Listing, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (!this.newStateControl) {\n        var filterInfo = this.state.searchVal.filterInfo.filterInfo;\n        var _filtersUsed = false;\n        var from = filterInfo[2] == '' ? undefined : filterInfo[2];\n        var to = filterInfo[3] == '' ? undefined : filterInfo[3];\n        var _distance = filterInfo[1];\n\n        if (filterInfo[1] != undefined || filterInfo[2] != '' || filterInfo[3] != '') {\n          _filtersUsed = true;\n        }\n\n        Api.Listings.all({}, function (data) {\n          console.log(data);\n\n          _this2.setState({\n            data: data,\n            filtersUsed: _filtersUsed,\n            distance: _distance\n          });\n        });\n      } else {\n        Api.Listings.all({}, function (data) {\n          console.log(data);\n\n          _this2.setState({\n            data: data,\n            filtersUsed: filtersUsed,\n            distance: distance\n          });\n        });\n      }\n    }\n  }, {\n    key: \"searchForListings\",\n    value: function searchForListings(placeId, radius, transportationMode, startDate, endDate, spaceType) {\n      var _this3 = this;\n\n      API.Listings.all({\n        from_place_id: placeId,\n        radius: radius,\n        space_type: spaceType,\n        start_date: startDate,\n        end_date: endDate,\n        transportation_mode: transportationMode\n      }, function (response) {\n        console.log(\"Search Query: \" + placeId);\n        console.log(\"Search Query: \" + startDate);\n        console.log(\"Search Query: \" + endDate);\n        console.log(\"Search Query: \" + spaceType);\n        console.log(\"Search Results:\\n\");\n        console.log(response);\n\n        _this3.setState({\n          data: response\n        });\n      });\n    }\n  }, {\n    key: \"get2D\",\n    value: function get2D(num) {\n      if (num.toString().length < 2) // Integer of less than two digits\n        return \"0\" + num; // Prepend a zero!\n\n      return num.toString(); // return string for consistency\n    }\n  }, {\n    key: \"formatDates\",\n    value: function formatDates(date) {\n      var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n      var dateA = date.toString().split(' '); //split by spaceTypes\n\n      var year = dateA[3].toString();\n      var day = dateA[2].toString();\n      var month = months.indexOf(dateA[1]) + 1;\n      var monthString = this.get2D(month);\n      var dayString = this.get2D(day);\n      var newDate = year + '-' + monthString + '-' + dayString;\n      console.log(\"new date\" + newDate);\n      return newDate;\n    }\n  }, {\n    key: \"showFromMonth\",\n    value: function showFromMonth(month) {\n      var _this$state = this.state,\n          from = _this$state.from,\n          to = _this$state.to;\n      console.log(\"this is to\" + to);\n\n      if (!from) {\n        return;\n      }\n\n      if (moment(to).diff(moment(from), 'months') < 2) {\n        month.getDayPicker().showMonth(from);\n      }\n    }\n  }, {\n    key: \"handleFromChange\",\n    value: function handleFromChange(from) {\n      // Change the from date and focus the \"to\" input field\n      console.log(from);\n      var d = this.formatDates(from);\n      this.setState({\n        from: from,\n        startD: d,\n        filtersUsed: true\n      });\n    }\n  }, {\n    key: \"handleToChange\",\n    value: function handleToChange(to, dayPick) {\n      console.log(\"to: \" + to);\n      var d = this.formatDates(to);\n      this.setState({\n        to: to,\n        endD: d,\n        filtersUsed: true\n      }, this.showFromMonth(dayPick)); //,showFromMonth\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      console.log(\"adding space type to array\");\n      var exists = this.state.arr.some(function (v) {\n        return v === event.target.value;\n      });\n\n      if (!exists) {\n        this.setState({\n          arr: this.state.arr.concat(event.target.value),\n          filtersUsed: true\n        });\n      } else {\n        var array = _toConsumableArray(this.state.arr);\n\n        var index = array.indexOf(event.target.value);\n\n        if (index !== -1) {\n          array.splice(index, 1);\n\n          if ((array === undefined || array.length == 0) && this.state.startD == '' && this.state.endD == '') {\n            this.setState({\n              arr: [],\n              filtersUsed: false\n            });\n          } else {\n            this.setState({\n              arr: array,\n              filtersUsed: true\n            });\n          }\n        }\n      } //call filter function\n\n    }\n  }, {\n    key: \"handleClearFilters\",\n    value: function handleClearFilters() {\n      this.setState({\n        newStateControl: true,\n        arr: [],\n        from: '',\n        to: '',\n        startD: '',\n        endD: '',\n        distance: undefined,\n        filtersUsed: false\n      }, console.log(\"from\" + this.state.from));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      // handleNavModalOption = event =>{\n      //   console.log(\"nav option clicked\");\n      //   switch(event.target.id){\n      //     case 'login':\n      //       this.setState({\n      //         login:true\n      //         //signup:false;\n      //       });\n      //       break;\n      //     case 'signup':\n      //       this.setState({\n      //         login:true\n      //         //signup:false\n      //       });\n      //       break;\n      //   }\n      // };\n      // toggleNavModal = () => {\n      //   this.setState({ showModal: !this.state.showModal });\n      // };\n      //{this.state.showModal && <In currUser = {this.state.login} handleCancel = {this.toggleNavModal}/>}\n      var filterInfo = this.state.searchVal.filterInfo.filterInfo;\n      console.log(\"search value is \" + JSON.stringify(filterInfo));\n      return React.createElement(\"div\", {\n        className: \"listing-main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(MainNav, {\n        searchVal: filterInfo[0],\n        showSearch: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }), React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(Filter, {\n        distance: this.state.distance,\n        to: this.state.to,\n        from: this.state.from,\n        filtersUsed: this.state.filtersUsed,\n        arr: this.state.arr,\n        handleClearFilters: this.handleClearFilters,\n        handleToChange: this.handleToChange,\n        handleFromChange: this.handleFromChange,\n        handleChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"listing-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(MDBRow, {\n        className: \"listing-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(Table, {\n        dataPoints: this.state.data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      })), React.createElement(MDBCol, {\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(Map, {\n        data: this.state.data,\n        onPlaceSearched: function onPlaceSearched(placeId, startDate, endDate) {\n          return _this4.searchForListings(placeId, 1200, 'driving', _this4.state.startD, _this4.state.endD, _this4.state.arr);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Listing;\n}(Component);\nexport default Listing;","map":{"version":3,"sources":["/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/src/Components/Listing.js"],"names":["React","Component","Table","Map","MainNav","HowItWorks","Filter","MDBRow","MDBCol","MDBFormInline","MDBIcon","MDBBtn","BrowserRouter","Route","NavLink","Fullpage","FullPageSections","FullpageSection","moment","DayPickerInput","formatDate","parseDate","Api","API","Listing","props","state","newStateControl","showModal","login","signup","searchVal","location","data","arr","from","undefined","to","startD","endD","distance","filtersUsed","handleChange","bind","handleFromChange","handleToChange","get2D","formatDates","handleClearFilters","showFromMonth","filterInfo","Listings","all","console","log","setState","placeId","radius","transportationMode","startDate","endDate","spaceType","from_place_id","space_type","start_date","end_date","transportation_mode","response","num","toString","length","date","months","dateA","split","year","day","month","indexOf","monthString","dayString","newDate","diff","getDayPicker","showMonth","d","dayPick","event","exists","some","v","target","value","concat","array","index","splice","JSON","stringify","searchForListings"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport 'mdbreact/dist/css/mdb.css'\n//import logo from './logo.svg';\nimport '../App.css';\nimport '../Styles/Listing.css';\nimport Table from './Table.js';\nimport Map from './Map.js';\nimport MainNav from './MainNav.js';\nimport HowItWorks from './HowItWorks.js';\nimport Filter from './Filter.js';\n\nimport { MDBRow, MDBCol, MDBFormInline, MDBIcon, MDBBtn } from \"mdbreact\";\nimport { BrowserRouter, Route, NavLink } from 'react-router-dom';\nimport Fullpage, { FullPageSections, FullpageSection } from 'react-fullpage';\n\nimport moment from 'moment';\nimport 'react-day-picker/lib/style.css';\n\nimport DayPickerInput from 'react-day-picker/DayPickerInput.js';\nimport { formatDate, parseDate } from 'react-day-picker/moment';\nimport * as Api from '../apiActions.js';\nimport * as API from \"../apiActions\";\n\n// import Main from './Main.js';\n// import PracticeNewPage from './Components/PracticeNewPage.js';\n// import {\n//   Route,\n//   NavLink,\n//   HashRouter\n// } from \"react-router-dom\";\nexport class Listing extends Component{\n  constructor(props){\n    super(props);\n    this.state={\n      newStateControl:false,\n      showModal:false,\n      login:false,\n      signup:false,\n      searchVal:this.props.location.state,\n      data: [],\n      arr: [],\n      from: undefined,\n      to: undefined,\n      startD: '',\n      endD: '',\n      distance: undefined,\n      filtersUsed:false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleFromChange = this.handleFromChange.bind(this);\n    this.handleToChange = this.handleToChange.bind(this);\n    this.get2D = this.get2D.bind(this);\n    this.formatDates = this.formatDates.bind(this);\n    this.handleClearFilters = this.handleClearFilters.bind(this);\n    this.showFromMonth = this.showFromMonth.bind(this);\n  }\n//put fitlers in brackets as from_plade_id: \"string\", from_radis:\"8\"\n  componentDidMount(){\n    if(!this.newStateControl){\n      const {filterInfo} = this.state.searchVal.filterInfo;\n      let filtersUsed = false;\n      let from = filterInfo[2]==''? undefined : filterInfo[2];\n      let to = filterInfo[3]==''? undefined : filterInfo[3];\n      let distance = filterInfo[1];\n      if(filterInfo[1]!=undefined || filterInfo[2]!='' || filterInfo[3]!=''){\n        filtersUsed=true;\n      }\n      Api.Listings.all({},\n        data=>{\n          console.log(data);\n          this.setState({\n            data:data,\n            filtersUsed,\n            distance\n          });\n        }\n      );\n  }else{\n  Api.Listings.all({},\n    data=>{\n      console.log(data);\n      this.setState({\n        data:data,\n        filtersUsed,\n        distance\n      });\n    }\n  );\n}\n  }\n\n  searchForListings(placeId, radius, transportationMode, startDate, endDate, spaceType){\n      API.Listings.all({\n          from_place_id: placeId,\n          radius: radius,\n          space_type: spaceType,\n          start_date: startDate,\n          end_date: endDate,\n          transportation_mode: transportationMode\n      }, response => {\n          console.log(\"Search Query: \" + placeId)\n          console.log(\"Search Query: \" + startDate)\n          console.log(\"Search Query: \" + endDate)\n          console.log(\"Search Query: \" + spaceType)\n          console.log(\"Search Results:\\n\")\n          console.log(response)\n          this.setState({\n              data: response\n          })\n      })\n  }\n\n\n    get2D( num ) {\n       if( num.toString().length < 2 ) // Integer of less than two digits\n           return \"0\" + num; // Prepend a zero!\n       return num.toString(); // return string for consistency\n    }\n\n    formatDates(date){\n      const months=['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n      var dateA = date.toString().split(' '); //split by spaceTypes\n      let year = dateA[3].toString();\n      let day = dateA[2].toString();\n      let month = months.indexOf(dateA[1])+1;\n      const monthString = this.get2D(month);\n      const dayString = this.get2D(day);\n      const newDate = year + '-' + monthString + '-' + dayString;\n      console.log(\"new date\" + newDate);\n      return newDate;\n    }\n\n    showFromMonth(month) {\n      const { from, to } = this.state;\n      console.log(\"this is to\" + to);\n      if (!from) {\n        return;\n      }\n      if (moment(to).diff(moment(from), 'months') < 2) {\n        month.getDayPicker().showMonth(from);\n      }\n    }\n\n    handleFromChange(from) {\n      // Change the from date and focus the \"to\" input field\n      console.log(from);\n      const d = this.formatDates(from);\n      this.setState({\n        from,\n        startD:d,\n        filtersUsed:true\n       });\n    }\n\n    handleToChange(to, dayPick) {\n      console.log(\"to: \"+ to);\n      const d = this.formatDates(to);\n      this.setState({\n        to,\n        endD:d,\n        filtersUsed:true\n\n      }, this.showFromMonth(dayPick)); //,showFromMonth\n    }\n\n    handleChange(event) {\n      console.log(\"adding space type to array\");\n      const exists = this.state.arr.some(v => (v === event.target.value));\n      if(!exists){\n         this.setState({\n        arr: this.state.arr.concat(event.target.value),\n        filtersUsed:true\n      });\n\n      }else{\n        var array = [...this.state.arr];\n        var index = array.indexOf(event.target.value)\n        if (index !== -1) {\n          array.splice(index, 1);\n          if((array === undefined || array.length == 0)&&this.state.startD==''&&this.state.endD==''){\n            this.setState({\n              arr:[],\n              filtersUsed:false\n\n            });\n          }else{\n            this.setState({\n              arr: array,\n              filtersUsed:true\n\n            });\n          }\n\n        }\n\n      }\n  //call filter function\n   }\n   handleClearFilters(){\n     this.setState({\n       newStateControl:true,\n       arr: [],\n       from: '',\n       to: '',\n       startD: '',\n       endD: '',\n       distance: undefined,\n       filtersUsed:false\n     }, console.log(\"from\" + this.state.from));\n   }\n\n\n    render() {\n\n    // handleNavModalOption = event =>{\n    //   console.log(\"nav option clicked\");\n    //   switch(event.target.id){\n    //     case 'login':\n    //       this.setState({\n    //         login:true\n    //         //signup:false;\n    //       });\n    //       break;\n    //     case 'signup':\n    //       this.setState({\n    //         login:true\n    //         //signup:false\n    //       });\n    //       break;\n    //   }\n    // };\n    // toggleNavModal = () => {\n    //   this.setState({ showModal: !this.state.showModal });\n    // };\n//{this.state.showModal && <In currUser = {this.state.login} handleCancel = {this.toggleNavModal}/>}\nconst {filterInfo} = this.state.searchVal.filterInfo;\nconsole.log(\"search value is \"+ JSON.stringify(filterInfo));\n\n\n    return (\n\n      <div className=\"listing-main\">\n\n          <MainNav searchVal={filterInfo[0]} showSearch={true}/>\n          <MDBRow>\n            <Filter distance = {this.state.distance} to={this.state.to} from={this.state.from} filtersUsed={this.state.filtersUsed} arr={this.state.arr} handleClearFilters = {this.handleClearFilters} handleToChange = {this.handleToChange} handleFromChange={this.handleFromChange}  handleChange = {this.handleChange}/>\n          </MDBRow>\n\n        <div className =\"listing-content\">\n          <MDBRow className=\"listing-row\">\n            <MDBCol size=\"sm\">\n              <Table dataPoints={this.state.data}/>\n            </MDBCol>\n            <MDBCol size=\"sm\">\n              <Map data={this.state.data} onPlaceSearched={(placeId, startDate, endDate) => this.searchForListings(placeId, 1200, 'driving', this.state.startD, this.state.endD, this.state.arr)}/>\n            </MDBCol>\n          </MDBRow>\n\n        </div>\n      </div>\n\n\n\n\n\n\n    );\n  }\n\n}\nexport default Listing;\n"]},"metadata":{},"sourceType":"module"}