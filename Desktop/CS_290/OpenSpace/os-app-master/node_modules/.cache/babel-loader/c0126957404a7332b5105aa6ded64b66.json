{"ast":null,"code":"import _classCallCheck from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/src/Components/Map.js\";\nimport React from 'react';\nimport { compose, withProps } from \"recompose\";\nimport { GoogleMap, Marker, withGoogleMap, withScriptjs, InfoWindow, StandaloneSearchBox } from 'react-google-maps';\nimport MapMarker from \"./MapMarker\";\nimport Autocomplete from 'react-google-autocomplete';\nimport Table from \"./Listing\";\nimport SearchBox from \"react-google-maps/lib/components/places/SearchBox\";\nexport var Map =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Map, _React$Component);\n\n  function Map(props) {\n    var _this;\n\n    _classCallCheck(this, Map);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Map).call(this, props));\n    _this.myRefs = {};\n    _this.state = {\n      places: [],\n      center: {\n        lat: 36.0014,\n        lng: -78.9382\n      },\n      bounds: null,\n      onMapMounted: function onMapMounted(ref) {\n        _this.myRefs.map = ref;\n      },\n      onSearchBoxMounted: function onSearchBoxMounted(ref) {\n        _this.myRefs.searchBox = ref;\n      },\n      onDragEnd: function onDragEnd() {\n        console.warn(_this.myRefs.map.getBounds());\n        console.warn(_this.myRefs.map.getCenter());\n\n        _this.setState({\n          bounds: _this.myRefs.map.getBounds(),\n          center: _this.myRefs.map.getCenter()\n        });\n      },\n      onPlacesChanged: function onPlacesChanged() {\n        var places = _this.myRefs.searchBox.getPlaces();\n\n        if (places.length === 1) {\n          console.log(places[0]);\n\n          _this.setState({\n            center: places[0].geometry.location\n          });\n        }\n\n        _this.props.onPlaceSearched(places[0].place_id);\n      }\n    };\n    return _this;\n  }\n\n  _createClass(Map, [{\n    key: \"render\",\n    value: function render() {\n      return this.props.data && React.createElement(GoogleMap, {\n        defaultZoom: 12,\n        center: this.state.center,\n        onDragEnd: this.state.onDragEnd,\n        ref: this.state.onMapMounted,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(SearchBox, {\n        controlPosition: 1,\n        ref: this.state.onSearchBoxMounted,\n        bounds: this.state.bounds,\n        onPlacesChanged: this.state.onPlacesChanged,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Customized your placeholder\",\n        style: {\n          boxSizing: \"border-box\",\n          border: \"1px solid transparent\",\n          width: \"240px\",\n          height: \"32px\",\n          padding: \"0 12px\",\n          borderRadius: \"3px\",\n          boxShadow: \"0 2px 6px rgba(0, 0, 0, 0.3)\",\n          fontSize: \"14px\",\n          outline: \"none\",\n          textOverflow: \"ellipses\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      })), this.props.data.map(function (listing) {\n        return React.createElement(MapMarker, {\n          key: listing.id,\n          listing: listing,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return Map;\n}(React.Component);\nexport default compose(withProps({\n  googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyDbGXFv-QOejj2G8vfGj5cIuYqXjI1AhRU&libraries=places\",\n  loadingElement: React.createElement(\"div\", {\n    style: {\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }),\n  containerElement: React.createElement(\"div\", {\n    style: {\n      height: \"60vh\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }),\n  mapElement: React.createElement(\"div\", {\n    style: {\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  })\n}), withScriptjs, withGoogleMap)(Map); // import React from 'react'\n// import {compose, withProps} from \"recompose\"\n// import {GoogleMap, Marker, withGoogleMap, withScriptjs, InfoWindow} from 'react-google-maps'\n// import MapMarker from \"./MapMarker\";\n// import Autocomplete from 'react-google-autocomplete';\n//\n// export class Map extends React.Component {\n//     constructor(props) {\n//         super(props);\n//     }\n//\n//     render() {\n//\n//         return (\n//             this.props.data &&\n//             <GoogleMap\n//                 defaultZoom={12}\n//                 defaultCenter={{lat: 36.0014, lng: -78.9382}}\n//\n//             >\n//                 {this.props.data.map(listing => <MapMarker key={listing.id} listing={listing}/>)}\n//             </GoogleMap>\n//         )\n//     }\n// }\n//\n// export default compose(\n//     withProps({\n//         googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyDbGXFv-QOejj2G8vfGj5cIuYqXjI1AhRU&\",\n//         loadingElement: <div style={{height: `100%`}}/>,\n//         containerElement: <div style={{height: `60vh`}}/>,\n//         mapElement: <div style={{height: `100%`}}/>,\n//     }),\n//     withScriptjs,\n//     withGoogleMap\n// )((Map))","map":{"version":3,"sources":["/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/src/Components/Map.js"],"names":["React","compose","withProps","GoogleMap","Marker","withGoogleMap","withScriptjs","InfoWindow","StandaloneSearchBox","MapMarker","Autocomplete","Table","SearchBox","Map","props","myRefs","state","places","center","lat","lng","bounds","onMapMounted","ref","map","onSearchBoxMounted","searchBox","onDragEnd","console","warn","getBounds","getCenter","setState","onPlacesChanged","getPlaces","length","log","geometry","location","onPlaceSearched","place_id","data","boxSizing","border","width","height","padding","borderRadius","boxShadow","fontSize","outline","textOverflow","listing","id","Component","googleMapURL","loadingElement","containerElement","mapElement"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,EAAiBC,SAAjB,QAAiC,WAAjC;AACA,SACIC,SADJ,EAEIC,MAFJ,EAGIC,aAHJ,EAIIC,YAJJ,EAKIC,UALJ,EAMIC,mBANJ,QAOO,mBAPP;AAQA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,KAAP,MAAkB,WAAlB;AACA,OAAOC,SAAP,MAAsB,mDAAtB;AAEA,WAAaC,GAAb;AAAA;AAAA;AAAA;;AACI,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,6EAAMA,KAAN;AACA,UAAKC,MAAL,GAAc,EAAd;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,EADC;AAETC,MAAAA,MAAM,EAAE;AAACC,QAAAA,GAAG,EAAE,OAAN;AAAeC,QAAAA,GAAG,EAAE,CAAC;AAArB,OAFC;AAGTC,MAAAA,MAAM,EAAE,IAHC;AAITC,MAAAA,YAAY,EAAE,sBAAAC,GAAG,EAAI;AACjB,cAAKR,MAAL,CAAYS,GAAZ,GAAkBD,GAAlB;AACH,OANQ;AAOTE,MAAAA,kBAAkB,EAAE,4BAAAF,GAAG,EAAI;AACvB,cAAKR,MAAL,CAAYW,SAAZ,GAAwBH,GAAxB;AACH,OATQ;AAUTI,MAAAA,SAAS,EAAE,qBAAM;AACbC,QAAAA,OAAO,CAACC,IAAR,CAAa,MAAKd,MAAL,CAAYS,GAAZ,CAAgBM,SAAhB,EAAb;AACAF,QAAAA,OAAO,CAACC,IAAR,CAAa,MAAKd,MAAL,CAAYS,GAAZ,CAAgBO,SAAhB,EAAb;;AACA,cAAKC,QAAL,CAAc;AACVX,UAAAA,MAAM,EAAE,MAAKN,MAAL,CAAYS,GAAZ,CAAgBM,SAAhB,EADE;AAEVZ,UAAAA,MAAM,EAAE,MAAKH,MAAL,CAAYS,GAAZ,CAAgBO,SAAhB;AAFE,SAAd;AAIH,OAjBQ;AAkBTE,MAAAA,eAAe,EAAE,2BAAM;AACnB,YAAMhB,MAAM,GAAG,MAAKF,MAAL,CAAYW,SAAZ,CAAsBQ,SAAtB,EAAf;;AACA,YAAIjB,MAAM,CAACkB,MAAP,KAAkB,CAAtB,EAAyB;AACrBP,UAAAA,OAAO,CAACQ,GAAR,CAAYnB,MAAM,CAAC,CAAD,CAAlB;;AACA,gBAAKe,QAAL,CAAc;AACVd,YAAAA,MAAM,EAAED,MAAM,CAAC,CAAD,CAAN,CAAUoB,QAAV,CAAmBC;AADjB,WAAd;AAGH;;AACD,cAAKxB,KAAL,CAAWyB,eAAX,CAA2BtB,MAAM,CAAC,CAAD,CAAN,CAAUuB,QAArC;AACH;AA3BQ,KAAb;AAHe;AAgClB;;AAjCL;AAAA;AAAA,6BAmCa;AAEL,aACI,KAAK1B,KAAL,CAAW2B,IAAX,IACA,oBAAC,SAAD;AACI,QAAA,WAAW,EAAE,EADjB;AAEI,QAAA,MAAM,EAAE,KAAKzB,KAAL,CAAWE,MAFvB;AAGI,QAAA,SAAS,EAAE,KAAKF,KAAL,CAAWW,SAH1B;AAII,QAAA,GAAG,EAAE,KAAKX,KAAL,CAAWM,YAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMI,oBAAC,SAAD;AACI,QAAA,eAAe,EAAE,CADrB;AAEI,QAAA,GAAG,EAAE,KAAKN,KAAL,CAAWS,kBAFpB;AAGI,QAAA,MAAM,EAAE,KAAKT,KAAL,CAAWK,MAHvB;AAII,QAAA,eAAe,EAAE,KAAKL,KAAL,CAAWiB,eAJhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,WAAW,EAAC,6BAFhB;AAGI,QAAA,KAAK,EAAE;AACHS,UAAAA,SAAS,cADN;AAEHC,UAAAA,MAAM,yBAFH;AAGHC,UAAAA,KAAK,SAHF;AAIHC,UAAAA,MAAM,QAJH;AAKHC,UAAAA,OAAO,UALJ;AAMHC,UAAAA,YAAY,OANT;AAOHC,UAAAA,SAAS,gCAPN;AAQHC,UAAAA,QAAQ,QARL;AASHC,UAAAA,OAAO,QATJ;AAUHC,UAAAA,YAAY;AAVT,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,CANJ,EA6BK,KAAKrC,KAAL,CAAW2B,IAAX,CAAgBjB,GAAhB,CAAoB,UAAA4B,OAAO;AAAA,eAAI,oBAAC,SAAD;AAAW,UAAA,GAAG,EAAEA,OAAO,CAACC,EAAxB;AAA4B,UAAA,OAAO,EAAED,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAJ;AAAA,OAA3B,CA7BL,CAFJ;AAkCH;AAvEL;;AAAA;AAAA,EAAyBpD,KAAK,CAACsD,SAA/B;AA0EA,eAAerD,OAAO,CAClBC,SAAS,CAAC;AACNqD,EAAAA,YAAY,EAAE,sGADR;AAENC,EAAAA,cAAc,EAAE;AAAK,IAAA,KAAK,EAAE;AAACX,MAAAA,MAAM;AAAP,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFV;AAGNY,EAAAA,gBAAgB,EAAE;AAAK,IAAA,KAAK,EAAE;AAACZ,MAAAA,MAAM;AAAP,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHZ;AAINa,EAAAA,UAAU,EAAE;AAAK,IAAA,KAAK,EAAE;AAACb,MAAAA,MAAM;AAAP,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJN,CAAD,CADS,EAOlBvC,YAPkB,EAQlBD,aARkB,CAAP,CASZQ,GATY,CAAf,C,CAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react'\nimport {compose, withProps} from \"recompose\"\nimport {\n    GoogleMap,\n    Marker,\n    withGoogleMap,\n    withScriptjs,\n    InfoWindow,\n    StandaloneSearchBox,\n} from 'react-google-maps'\nimport MapMarker from \"./MapMarker\";\nimport Autocomplete from 'react-google-autocomplete';\nimport Table from \"./Listing\";\nimport SearchBox from \"react-google-maps/lib/components/places/SearchBox\";\n\nexport class Map extends React.Component {\n    constructor(props) {\n        super(props);\n        this.myRefs = {};\n        this.state = {\n            places: [],\n            center: {lat: 36.0014, lng: -78.9382},\n            bounds: null,\n            onMapMounted: ref => {\n                this.myRefs.map = ref\n            },\n            onSearchBoxMounted: ref => {\n                this.myRefs.searchBox = ref;\n            },\n            onDragEnd: () => {\n                console.warn(this.myRefs.map.getBounds())\n                console.warn(this.myRefs.map.getCenter())\n                this.setState({\n                    bounds: this.myRefs.map.getBounds(),\n                    center: this.myRefs.map.getCenter(),\n                })\n            },\n            onPlacesChanged: () => {\n                const places = this.myRefs.searchBox.getPlaces();\n                if (places.length === 1) {\n                    console.log(places[0])\n                    this.setState({\n                        center: places[0].geometry.location\n                    })\n                }\n                this.props.onPlaceSearched(places[0].place_id)\n            },\n        }\n    }\n\n    render() {\n\n        return (\n            this.props.data &&\n            <GoogleMap\n                defaultZoom={12}\n                center={this.state.center}\n                onDragEnd={this.state.onDragEnd}\n                ref={this.state.onMapMounted}\n            >\n                <SearchBox\n                    controlPosition={1}\n                    ref={this.state.onSearchBoxMounted}\n                    bounds={this.state.bounds}\n                    onPlacesChanged={this.state.onPlacesChanged}\n                >\n                    <input\n                        type=\"text\"\n                        placeholder=\"Customized your placeholder\"\n                        style={{\n                            boxSizing: `border-box`,\n                            border: `1px solid transparent`,\n                            width: `240px`,\n                            height: `32px`,\n                            padding: `0 12px`,\n                            borderRadius: `3px`,\n                            boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\n                            fontSize: `14px`,\n                            outline: `none`,\n                            textOverflow: `ellipses`,\n                        }}\n                    />\n                </SearchBox>\n                {this.props.data.map(listing => <MapMarker key={listing.id} listing={listing}/>)}\n            </GoogleMap>\n        )\n    }\n}\n\nexport default compose(\n    withProps({\n        googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyDbGXFv-QOejj2G8vfGj5cIuYqXjI1AhRU&libraries=places\",\n        loadingElement: <div style={{height: `100%`}}/>,\n        containerElement: <div style={{height: `60vh`}}/>,\n        mapElement: <div style={{height: `100%`}}/>,\n    }),\n    withScriptjs,\n    withGoogleMap\n)((Map))\n\n\n\n// import React from 'react'\n// import {compose, withProps} from \"recompose\"\n// import {GoogleMap, Marker, withGoogleMap, withScriptjs, InfoWindow} from 'react-google-maps'\n// import MapMarker from \"./MapMarker\";\n// import Autocomplete from 'react-google-autocomplete';\n//\n// export class Map extends React.Component {\n//     constructor(props) {\n//         super(props);\n//     }\n//\n//     render() {\n//\n//         return (\n//             this.props.data &&\n//             <GoogleMap\n//                 defaultZoom={12}\n//                 defaultCenter={{lat: 36.0014, lng: -78.9382}}\n//\n//             >\n//                 {this.props.data.map(listing => <MapMarker key={listing.id} listing={listing}/>)}\n//             </GoogleMap>\n//         )\n//     }\n// }\n//\n// export default compose(\n//     withProps({\n//         googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyDbGXFv-QOejj2G8vfGj5cIuYqXjI1AhRU&\",\n//         loadingElement: <div style={{height: `100%`}}/>,\n//         containerElement: <div style={{height: `60vh`}}/>,\n//         mapElement: <div style={{height: `100%`}}/>,\n//     }),\n//     withScriptjs,\n//     withGoogleMap\n// )((Map))\n"]},"metadata":{},"sourceType":"module"}