{"ast":null,"code":"import _slicedToArray from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/src/Components/Filter.js\";\nimport React from 'react';\nimport { MDBRow, MDBContainer, MDBInput, MDBCol, MDBFormInline, MDBIcon, MDBBtn } from \"mdbreact\";\nimport { MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem } from \"mdbreact\";\nimport classNames from 'classnames';\nimport { makeStyles, useTheme } from '@material-ui/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Chip from '@material-ui/core/Chip';\nimport moment from 'moment';\nimport DayPickerInput from 'react-day-picker/DayPickerInput.js';\nimport { formatDate, parseDate } from 'react-day-picker/moment';\nimport 'react-day-picker/lib/style.css';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    formControl: {\n      margin: theme.spacing.unit,\n      minWidth: 120,\n      maxWidth: 300\n    },\n    chips: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    chip: {\n      margin: theme.spacing.unit / 4\n    },\n    noLabel: {\n      marginTop: theme.spacing.unit * 3\n    }\n  };\n});\nvar ITEM_HEIGHT = 48;\nvar ITEM_PADDING_TOP = 8;\nvar MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\nvar names = ['Oliver Hansen', 'Van Henry', 'April Tucker', 'Ralph Hubbard', 'Omar Alexander', 'Carlos Abbott', 'Miriam Wagner', 'Bradley Wilkerson', 'Virginia Andrews', 'Kelly Snyder'];\n\nfunction getStyles(name, personName, theme) {\n  return {\n    fontWeight: personName.indexOf(name) === -1 ? theme.typography.fontWeightRegular : theme.typography.fontWeightMedium\n  };\n}\n\nexport var Filter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Filter, _React$Component);\n\n  function Filter(props) {\n    var _this;\n\n    _classCallCheck(this, Filter);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Filter).call(this, props));\n    _this.state = {\n      from: undefined,\n      to: undefined,\n      colors: [],\n      name: [],\n      spaceTypes: [{\n        value: 'Restaurant space',\n        label: 'Restaurant'\n      }, {\n        value: 'Mall space',\n        label: 'Mall'\n      }, {\n        value: 'Apartment space',\n        label: 'Apartment'\n      }, {\n        value: 'Garage space',\n        label: 'Garage'\n      }, {\n        value: 'Closet space',\n        label: 'Closet'\n      }, {\n        value: 'Basement space',\n        label: 'Basement'\n      }, {\n        value: 'Outdoor space',\n        label: 'Outdoor (i.e shed)'\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(Filter, [{\n    key: \"showFromMonth\",\n    value: function showFromMonth() {\n      var _this$state = this.state,\n          from = _this$state.from,\n          to = _this$state.to;\n\n      if (!from) {\n        return;\n      }\n\n      if (moment(to).diff(moment(from), 'months') < 2) {\n        this.to.getDayPicker().showMonth(from);\n      }\n    }\n  }, {\n    key: \"handleFromChange\",\n    value: function handleFromChange(from) {\n      // Change the from date and focus the \"to\" input field\n      this.setState({\n        from: from\n      });\n    }\n  }, {\n    key: \"handleToChange\",\n    value: function handleToChange(to) {\n      this.setState({\n        to: to\n      }, this.showFromMonth);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          from = _this$state2.from,\n          to = _this$state2.to;\n      var modifiers = {\n        start: from,\n        end: to\n      };\n      var spaceTypeDropItems = this.state.spaceTypes.map(function (space, index) {\n        return React.createElement(MDBDropdownItem, {\n          value: space.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, space.label);\n      });\n      var classes = useStyles();\n      var theme = useTheme();\n\n      var _React$useState = React.useState([]),\n          _React$useState2 = _slicedToArray(_React$useState, 2),\n          personName = _React$useState2[0],\n          setPersonName = _React$useState2[1];\n\n      function handleChange(event) {\n        setPersonName(event.target.value);\n      }\n\n      return React.createElement(\"div\", {\n        className: \"filter-main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"filter-spaceTypeDropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"select-multiple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Name\"), React.createElement(Select, {\n        multiple: true,\n        value: personName,\n        onChange: handleChange,\n        input: React.createElement(Input, {\n          id: \"select-multiple\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }),\n        MenuProps: MenuProps,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, names.map(function (name) {\n        return React.createElement(MenuItem, {\n          key: name,\n          value: name,\n          style: getStyles(name, personName, theme),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }, name);\n      }))), React.createElement(FormControl, {\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"select-multiple-checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"Tag\"), React.createElement(Select, {\n        multiple: true,\n        value: personName,\n        onChange: handleChange,\n        input: React.createElement(Input, {\n          id: \"select-multiple-checkbox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }),\n        renderValue: function renderValue(selected) {\n          return selected.join(', ');\n        },\n        MenuProps: MenuProps,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, names.map(function (name) {\n        return React.createElement(MenuItem, {\n          key: name,\n          value: name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, React.createElement(Checkbox, {\n          checked: personName.indexOf(name) > -1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }), React.createElement(ListItemText, {\n          primary: name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }));\n      }))), React.createElement(FormControl, {\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"select-multiple-chip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Chip\"), React.createElement(Select, {\n        multiple: true,\n        value: personName,\n        onChange: handleChange,\n        input: React.createElement(Input, {\n          id: \"select-multiple-chip\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }),\n        renderValue: function renderValue(selected) {\n          return React.createElement(\"div\", {\n            className: classes.chips,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 201\n            },\n            __self: this\n          }, selected.map(function (value) {\n            return React.createElement(Chip, {\n              key: value,\n              label: value,\n              className: classes.chip,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 203\n              },\n              __self: this\n            });\n          }));\n        },\n        MenuProps: MenuProps,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, names.map(function (name) {\n        return React.createElement(MenuItem, {\n          key: name,\n          value: name,\n          style: getStyles(name, personName, theme),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          },\n          __self: this\n        }, name);\n      }))), React.createElement(FormControl, {\n        className: classNames(classes.formControl, classes.noLabel),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(Select, {\n        multiple: true,\n        displayEmpty: true,\n        value: personName,\n        onChange: handleChange,\n        input: React.createElement(Input, {\n          id: \"select-multiple-placeholder\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222\n          },\n          __self: this\n        }),\n        renderValue: function renderValue(selected) {\n          if (selected.length === 0) {\n            return React.createElement(\"em\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 225\n              },\n              __self: this\n            }, \"Placeholder\");\n          }\n\n          return selected.join(', ');\n        },\n        MenuProps: MenuProps,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        disabled: true,\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"Placeholder\")), names.map(function (name) {\n        return React.createElement(MenuItem, {\n          key: name,\n          value: name,\n          style: getStyles(name, personName, theme),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        }, name);\n      }))))), React.createElement(\"div\", {\n        className: \"InputFromTo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(DayPickerInput, {\n        value: from,\n        placeholder: \"From\",\n        format: \"LL\",\n        formatDate: formatDate,\n        parseDate: parseDate,\n        dayPickerProps: {\n          selectedDays: [from, {\n            from: from,\n            to: to\n          }],\n          disabledDays: {\n            after: to\n          },\n          toMonth: to,\n          modifiers: modifiers,\n          numberOfMonths: 1,\n          onDayClick: function onDayClick() {\n            return _this2.to.getInput().focus();\n          }\n        },\n        onDayChange: this.handleFromChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }), ' ', \"\\u2014\", ' ', React.createElement(\"span\", {\n        className: \"InputFromTo-to\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(DayPickerInput, {\n        ref: function ref(el) {\n          return _this2.to = el;\n        },\n        value: to,\n        placeholder: \"To\",\n        format: \"LL\",\n        formatDate: formatDate,\n        parseDate: parseDate,\n        dayPickerProps: {\n          selectedDays: [from, {\n            from: from,\n            to: to\n          }],\n          disabledDays: {\n            before: from\n          },\n          modifiers: modifiers,\n          month: from,\n          fromMonth: from,\n          numberOfMonths: 1\n        },\n        onDayChange: this.handleToChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Filter;\n}(React.Component);\nexport default Filter;","map":{"version":3,"sources":["/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/src/Components/Filter.js"],"names":["React","MDBRow","MDBContainer","MDBInput","MDBCol","MDBFormInline","MDBIcon","MDBBtn","MDBDropdown","MDBDropdownToggle","MDBDropdownMenu","MDBDropdownItem","classNames","makeStyles","useTheme","Input","InputLabel","MenuItem","FormControl","ListItemText","Select","Checkbox","Chip","moment","DayPickerInput","formatDate","parseDate","useStyles","theme","root","display","flexWrap","formControl","margin","spacing","unit","minWidth","maxWidth","chips","chip","noLabel","marginTop","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","names","getStyles","name","personName","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","Filter","props","state","from","undefined","to","colors","spaceTypes","value","label","diff","getDayPicker","showMonth","setState","showFromMonth","modifiers","start","end","spaceTypeDropItems","map","space","index","classes","useState","setPersonName","handleChange","event","target","selected","join","length","selectedDays","disabledDays","after","toMonth","numberOfMonths","onDayClick","getInput","focus","handleFromChange","el","before","month","fromMonth","handleToChange","Component"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { MDBRow, MDBContainer, MDBInput, MDBCol, MDBFormInline, MDBIcon, MDBBtn } from \"mdbreact\";\nimport { MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem } from \"mdbreact\";\n\n\nimport classNames from 'classnames';\nimport { makeStyles, useTheme } from '@material-ui/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Chip from '@material-ui/core/Chip';\n\nimport moment from 'moment';\nimport DayPickerInput from 'react-day-picker/DayPickerInput.js';\nimport { formatDate, parseDate } from 'react-day-picker/moment';\nimport 'react-day-picker/lib/style.css';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120,\n    maxWidth: 300,\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: theme.spacing.unit / 4,\n  },\n  noLabel: {\n    marginTop: theme.spacing.unit * 3,\n  },\n}));\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst names = [\n  'Oliver Hansen',\n  'Van Henry',\n  'April Tucker',\n  'Ralph Hubbard',\n  'Omar Alexander',\n  'Carlos Abbott',\n  'Miriam Wagner',\n  'Bradley Wilkerson',\n  'Virginia Andrews',\n  'Kelly Snyder',\n];\n\nfunction getStyles(name, personName, theme) {\n  return {\n    fontWeight:\n      personName.indexOf(name) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\n\nexport class Filter extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n      from: undefined,\n      to: undefined,\n      colors:[],\n      name: [],\n      spaceTypes:[\n        {\n          value:'Restaurant space',\n          label:'Restaurant'\n        },\n        {\n          value:'Mall space',\n          label:'Mall'\n        },\n        {\n          value:'Apartment space',\n          label:'Apartment'\n        },\n        {\n          value:'Garage space',\n          label:'Garage'\n        },\n        {\n          value:'Closet space',\n          label:'Closet'\n        },\n        {\n          value:'Basement space',\n          label:'Basement'\n        },\n        {\n          value:'Outdoor space',\n          label:'Outdoor (i.e shed)'\n        }\n      ]\n    }\n  }\n\n  showFromMonth() {\n    const { from, to } = this.state;\n    if (!from) {\n      return;\n    }\n    if (moment(to).diff(moment(from), 'months') < 2) {\n      this.to.getDayPicker().showMonth(from);\n    }\n  }\n  handleFromChange(from) {\n    // Change the from date and focus the \"to\" input field\n    this.setState({ from });\n  }\n  handleToChange(to) {\n    this.setState({ to }, this.showFromMonth);\n  }\n\n\n \n\n  render(){\n\n    const { from, to } = this.state;\n    const modifiers = { start: from, end: to };\n    const spaceTypeDropItems = this.state.spaceTypes.map((space, index) =>\n        <MDBDropdownItem value={space.value} >{space.label}</MDBDropdownItem>\n\n\n    );\n    const classes = useStyles();\n  const theme = useTheme();\n  const [personName, setPersonName] = React.useState([]);\n  function handleChange(event) {\n   setPersonName(event.target.value);\n }\n    return(\n      <div className=\"filter-main\">\n        <div className=\"filter-spaceTypeDropdown\">\n        <div className={classes.root}>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor=\"select-multiple\">Name</InputLabel>\n        <Select\n          multiple\n          value={personName}\n          onChange={handleChange}\n          input={<Input id=\"select-multiple\" />}\n          MenuProps={MenuProps}\n        >\n          {names.map(name => (\n            <MenuItem key={name} value={name} style={getStyles(name, personName, theme)}>\n              {name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor=\"select-multiple-checkbox\">Tag</InputLabel>\n        <Select\n          multiple\n          value={personName}\n          onChange={handleChange}\n          input={<Input id=\"select-multiple-checkbox\" />}\n          renderValue={selected => selected.join(', ')}\n          MenuProps={MenuProps}\n        >\n          {names.map(name => (\n            <MenuItem key={name} value={name}>\n              <Checkbox checked={personName.indexOf(name) > -1} />\n              <ListItemText primary={name} />\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor=\"select-multiple-chip\">Chip</InputLabel>\n        <Select\n          multiple\n          value={personName}\n          onChange={handleChange}\n          input={<Input id=\"select-multiple-chip\" />}\n          renderValue={selected => (\n            <div className={classes.chips}>\n              {selected.map(value => (\n                <Chip key={value} label={value} className={classes.chip} />\n              ))}\n            </div>\n          )}\n          MenuProps={MenuProps}\n        >\n          {names.map(name => (\n            <MenuItem key={name} value={name} style={getStyles(name, personName, theme)}>\n              {name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <FormControl className={classNames(classes.formControl, classes.noLabel)}>\n        <Select\n          multiple\n          displayEmpty\n          value={personName}\n          onChange={handleChange}\n          input={<Input id=\"select-multiple-placeholder\" />}\n          renderValue={selected => {\n            if (selected.length === 0) {\n              return <em>Placeholder</em>;\n            }\n\n            return selected.join(', ');\n          }}\n          MenuProps={MenuProps}\n        >\n          <MenuItem disabled value=\"\">\n            <em>Placeholder</em>\n          </MenuItem>\n          {names.map(name => (\n            <MenuItem key={name} value={name} style={getStyles(name, personName, theme)}>\n              {name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n        </div>\n        <div className=\"InputFromTo\">\n           <DayPickerInput\n             value={from}\n             placeholder=\"From\"\n             format=\"LL\"\n             formatDate={formatDate}\n             parseDate={parseDate}\n             dayPickerProps={{\n               selectedDays: [from, { from, to }],\n               disabledDays: { after: to },\n               toMonth: to,\n               modifiers,\n               numberOfMonths: 1,\n               onDayClick: () => this.to.getInput().focus(),\n             }}\n             onDayChange={this.handleFromChange}\n           />{' '}\n           —{' '}\n           <span className=\"InputFromTo-to\">\n             <DayPickerInput\n               ref={el => (this.to = el)}\n               value={to}\n               placeholder=\"To\"\n               format=\"LL\"\n               formatDate={formatDate}\n               parseDate={parseDate}\n               dayPickerProps={{\n                 selectedDays: [from, { from, to }],\n                 disabledDays: { before: from },\n                 modifiers,\n                 month: from,\n                 fromMonth: from,\n                 numberOfMonths: 1,\n               }}\n               onDayChange={this.handleToChange}\n             />\n           </span>\n        </div>\n\n      </div>\n\n    );\n  }\n\n}\n\nexport default Filter;\n"]},"metadata":{},"sourceType":"module"}