{"ast":null,"code":"import _toConsumableArray from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/src/Components/BookForm.js\";\nimport React from 'react';\nimport moment from 'moment';\nimport { MDBRow, MDBContainer, MDBInput, MDBCol, MDBFormInline, MDBIcon, MDBBtn } from \"mdbreact\";\nimport CountItem from './CountItem.js';\nimport ToggleInfo from './ToggleInfo.js';\nimport Form from 'react-bootstrap/Form';\nimport DayPickerInput from 'react-day-picker/DayPickerInput.js';\nimport { formatDate, parseDate } from 'react-day-picker/moment';\nimport 'react-day-picker/lib/style.css';\nimport '../Styles/BookForm.css';\nexport var BookForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BookForm, _React$Component);\n\n  function BookForm(props) {\n    var _this$state;\n\n    var _this;\n\n    _classCallCheck(this, BookForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BookForm).call(this, props));\n\n    _this.onClick = function (nr, type) {\n      return function () {\n        console.log(type);\n        console.log(nr);\n        var typeRadio = type;\n\n        _this.setState(_defineProperty({}, type, nr));\n      };\n    };\n\n    _this.handleValueSelected = function (event) {\n      var noSpace = event.target.value.split(' ').join('');\n      var showItem = \"show\".concat(noSpace);\n      var countItem = noSpace + 'Count';\n      console.log(\"count item is \" + countItem);\n\n      _this.setState(_defineProperty({\n        value: _toConsumableArray(event.target.value)\n      }, showItem, true));\n    };\n\n    _this.state = (_this$state = {\n      value: [],\n      contactRadio: 1,\n      deliveryRadio: 1,\n      showBox: false,\n      showOther: false,\n      showBike: false,\n      showLargeBox: false,\n      showSmallFurniture: false,\n      showLargeFurniture: false,\n      from: undefined,\n      to: undefined,\n      BoxCount: 0,\n      BikeCount: 0,\n      LargeBoxCount: 0,\n      SmallFurnitureCount: 0,\n      LargeFurnitureCount: 0,\n      TVCount: 0,\n      CouchCount: 0,\n      SuitcaseCount: 0\n    }, _defineProperty(_this$state, \"SuitcaseCount\", 0), _defineProperty(_this$state, \"MiniFridgeCount\", 0), _defineProperty(_this$state, \"MopedCount\", 0), _this$state);\n    _this.handleFromChange = _this.handleFromChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleToChange = _this.handleToChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleIncrement = _this.handleIncrement.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDecrement = _this.handleDecrement.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // <MDBRow>\n  //   <MDBCol size=\"sm-3\"><h3> interested in delivery?: </h3></MDBCol>\n  //   <MDBCol size=\"sm-2\"><MDBInput gap onClick={this.onClick(1, \"deliveryRadio\")} checked={this.state.deliveryRadio===1 ? true : false} label=\"yes\" type=\"radio\"\n  //   id=\"radio1\" /></MDBCol>\n  //   <MDBCol size=\"sm-2\"><MDBInput gap onClick={this.onClick(2, \"deliveryRadio\")} checked={this.state.deliveryRadio===2 ? true : false} label=\"no\" type=\"radio\"\n  //   id=\"radio2\" /></MDBCol>\n  //\n  // </MDBRow>\n  // {this.state.deliveryRadio==1 &&\n  //   <div>\n  //   <MDBRow>\n  //   <MDBCol>\n  //     <MDBInput\n  //       label=\"Street Address (include APT, etc)\"\n  //       group\n  //       type=\"number\"\n  //       validate\n  //       error=\"wrong\"\n  //       success=\"right\"\n  //     />\n  //   </MDBCol>\n  //   </MDBRow>\n  //\n  //   <MDBRow>\n  //     <MDBCol>\n  //     <MDBInput\n  //       label=\"City\"\n  //       group\n  //       type=\"text\"\n  //       validate\n  //       error=\"wrong\"\n  //       success=\"right\"\n  //     />\n  //     </MDBCol>\n  //\n  //     <MDBCol>\n  //\n  //       <Form.Control as=\"select\" id=\"bookform-states\">\n  //         <option>State..</option>\n  //         <option value=\"Alabama\">Alabama</option><option value=\"Alaska\">Alaska</option><option value=\"Arizona\">Arizona</option><option value=\"Arkansas\">Arkansas</option><option value=\"California\">California</option><option value=\"Colorado\">Colorado</option><option value=\"Connecticut\">Connecticut</option><option value=\"Delaware\">Delaware</option><option value=\"District of Columbia\">District of Columbia</option><option value=\"Florida\">Florida</option><option value=\"Georgia\">Georgia</option><option value=\"Guam\">Guam</option><option value=\"Hawaii\">Hawaii</option><option value=\"Idaho\">Idaho</option><option value=\"Illinois\">Illinois</option><option value=\"Indiana\">Indiana</option><option value=\"Iowa\">Iowa</option><option value=\"Kansas\">Kansas</option><option value=\"Kentucky\">Kentucky</option><option value=\"Louisiana\">Louisiana</option><option value=\"Maine\">Maine</option><option value=\"Maryland\">Maryland</option><option value=\"Massachusetts\">Massachusetts</option><option value=\"Michigan\">Michigan</option><option value=\"Minnesota\">Minnesota</option><option value=\"Mississippi\">Mississippi</option><option value=\"Missouri\">Missouri</option><option value=\"Montana\">Montana</option><option value=\"Nebraska\">Nebraska</option><option value=\"Nevada\">Nevada</option><option value=\"New Hampshire\">New Hampshire</option><option value=\"New Jersey\">New Jersey</option><option value=\"New Mexico\">New Mexico</option><option value=\"New York\">New York</option><option value=\"North Carolina\">North Carolina</option><option value=\"North Dakota\">North Dakota</option><option value=\"Northern Marianas Islands\">Northern Marianas Islands</option><option value=\"Ohio\">Ohio</option><option value=\"Oklahoma\">Oklahoma</option><option value=\"Oregon\">Oregon</option><option value=\"Pennsylvania\">Pennsylvania</option><option value=\"Puerto Rico\">Puerto Rico</option><option value=\"Rhode Island\">Rhode Island</option><option value=\"South Carolina\">South Carolina</option><option value=\"South Dakota\">South Dakota</option><option value=\"Tennessee\">Tennessee</option><option value=\"Texas\">Texas</option><option value=\"Utah\">Utah</option><option value=\"Vermont\">Vermont</option><option value=\"Virginia\">Virginia</option><option value=\"Virgin Islands\">Virgin Islands</option><option value=\"Washington\">Washington</option><option value=\"West Virginia\">West Virginia</option><option value=\"Wisconsin\">Wisconsin</option><option value=\"Wyoming\">Wyoming</option>\n  //       </Form.Control>\n  //     </MDBCol>\n  //\n  //     <MDBCol>\n  //     <MDBInput\n  //       label=\"Zip\"\n  //       group\n  //       type=\"number\"\n  //       validate\n  //       error=\"wrong\"\n  //       success=\"right\"\n  //     />\n  //     </MDBCol>\n  //   </MDBRow>\n  //\n  //   </div>\n  //\n  //\n  // }\n\n\n  _createClass(BookForm, [{\n    key: \"showFromMonth\",\n    value: function showFromMonth() {\n      var _this$state2 = this.state,\n          from = _this$state2.from,\n          to = _this$state2.to;\n\n      if (!from) {\n        return;\n      }\n\n      if (moment(to).diff(moment(from), 'months') < 2) {\n        this.to.getDayPicker().showMonth(from);\n      }\n    }\n  }, {\n    key: \"handleFromChange\",\n    value: function handleFromChange(from) {\n      // Change the from date and focus the \"to\" input field\n      this.setState({\n        from: from\n      });\n    }\n  }, {\n    key: \"handleToChange\",\n    value: function handleToChange(to) {\n      this.setState({\n        to: to\n      }, this.showFromMonth);\n    }\n  }, {\n    key: \"handleIncrement\",\n    value: function handleIncrement(item) {\n      console.log(\"up\");\n      var countItem = item + 'Count';\n      console.log(\"count item is \" + countItem);\n      this.setState(_defineProperty({}, countItem, this.state[countItem] + 1));\n    }\n  }, {\n    key: \"handleDecrement\",\n    value: function handleDecrement(item) {\n      console.log(\"down\");\n      var countItem = item + 'Count';\n      console.log(\"count item is \" + countItem);\n      this.setState(_defineProperty({}, countItem, this.state[countItem] == 0 ? 0 : this.state[countItem] - 1));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state3 = this.state,\n          from = _this$state3.from,\n          to = _this$state3.to;\n      var modifiers = {\n        start: from,\n        end: to\n      };\n      var itemTypes = ['Box', 'Small Furniture', 'Large Furniture', 'TV', 'Couch', 'Suitcase', 'Mini Fridge', 'Moped', 'Bike'];\n      var itemCountElements = itemTypes.map(function (type, index) {\n        var noSpace = type.replace(/\\s+/g, '');\n        var countItem = noSpace + 'Count';\n        return React.createElement(CountItem, {\n          count: _this2.state[countItem],\n          name: type,\n          id: index,\n          handleIncrement: _this2.handleIncrement,\n          handleDecrement: _this2.handleDecrement,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        className: \"bookform-main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(MDBContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"bookform-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Book this Space\"), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"Please fill out the form below to submit a booking request. We will follow up as soon as possible to confirm the booking and setup details for payment, delivery, etc.\")), React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(MDBContainer, {\n        id: \"bookform-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"bookform-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(MDBInput, {\n        label: \"First Name*\",\n        group: true,\n        type: \"text\",\n        validate: true,\n        error: \"wrong\",\n        success: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      })), React.createElement(MDBCol, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(MDBInput, {\n        label: \"Last Name*\",\n        group: true,\n        type: \"text\",\n        validate: true,\n        error: \"wrong\",\n        success: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }))), React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        size: \"sm-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \" Preferred form of contact: \")), React.createElement(MDBCol, {\n        size: \"sm-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(MDBInput, {\n        gap: true,\n        onClick: this.onClick(1, \"contactRadio\"),\n        checked: this.state.contactRadio === 1 ? true : false,\n        label: \"email\",\n        type: \"radio\",\n        id: \"radio1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      })), React.createElement(MDBCol, {\n        size: \"sm-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(MDBInput, {\n        gap: true,\n        onClick: this.onClick(2, \"contactRadio\"),\n        checked: this.state.contactRadio === 2 ? true : false,\n        label: \"phone\",\n        type: \"radio\",\n        id: \"radio2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      })), React.createElement(MDBCol, {\n        size: \"sm-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, this.state.contactRadio === 1 && React.createElement(MDBInput, {\n        label: \"Your email *\",\n        group: true,\n        type: \"email\",\n        validate: true,\n        error: \"wrong\",\n        success: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }), this.state.contactRadio === 2 && React.createElement(MDBInput, {\n        label: \"Your phone *\",\n        group: true,\n        type: \"number\",\n        validate: true,\n        error: \"wrong\",\n        success: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }))), React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, \"Dates to be stored\")), React.createElement(MDBCol, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"InputFromTo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(DayPickerInput, {\n        value: from,\n        placeholder: \"From\",\n        format: \"LL\",\n        formatDate: formatDate,\n        parseDate: parseDate,\n        dayPickerProps: {\n          selectedDays: [from, {\n            from: from,\n            to: to\n          }],\n          disabledDays: {\n            after: to\n          },\n          toMonth: to,\n          modifiers: modifiers,\n          numberOfMonths: 1,\n          onDayClick: function onDayClick() {\n            return _this2.to.getInput().focus();\n          }\n        },\n        onDayChange: this.handleFromChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }), ' ', \"\\u2014\", ' ', React.createElement(\"span\", {\n        className: \"InputFromTo-to\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(DayPickerInput, {\n        ref: function ref(el) {\n          return _this2.to = el;\n        },\n        value: to,\n        placeholder: \"To\",\n        format: \"LL\",\n        formatDate: formatDate,\n        parseDate: parseDate,\n        dayPickerProps: {\n          selectedDays: [from, {\n            from: from,\n            to: to\n          }],\n          disabledDays: {\n            before: from\n          },\n          modifiers: modifiers,\n          month: from,\n          fromMonth: from,\n          numberOfMonths: 1\n        },\n        onDayChange: this.handleToChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }))))), React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, React.createElement(ToggleInfo, {\n        title: \"item count\",\n        content: itemCountElements,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }))), React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, \"Additional information about your storage needs\"))), React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, React.createElement(MDBInput, {\n        id: \"bookform-extrainfo\",\n        type: \"textarea\",\n        label: \"ex: I have a oddly shaped item...\",\n        rows: \"5\",\n        cols: \"100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"bookform-submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        outline: true,\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, \"Send\")))))));\n    }\n  }]);\n\n  return BookForm;\n}(React.Component);\nexport default BookForm;","map":{"version":3,"sources":["/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/src/Components/BookForm.js"],"names":["React","moment","MDBRow","MDBContainer","MDBInput","MDBCol","MDBFormInline","MDBIcon","MDBBtn","CountItem","ToggleInfo","Form","DayPickerInput","formatDate","parseDate","BookForm","props","onClick","nr","type","console","log","typeRadio","setState","handleValueSelected","event","noSpace","target","value","split","join","showItem","countItem","state","contactRadio","deliveryRadio","showBox","showOther","showBike","showLargeBox","showSmallFurniture","showLargeFurniture","from","undefined","to","BoxCount","BikeCount","LargeBoxCount","SmallFurnitureCount","LargeFurnitureCount","TVCount","CouchCount","SuitcaseCount","handleFromChange","bind","handleToChange","handleIncrement","handleDecrement","diff","getDayPicker","showMonth","showFromMonth","item","modifiers","start","end","itemTypes","itemCountElements","map","index","replace","selectedDays","disabledDays","after","toMonth","numberOfMonths","onDayClick","getInput","focus","el","before","month","fromMonth","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport moment from 'moment';\nimport { MDBRow, MDBContainer, MDBInput, MDBCol, MDBFormInline, MDBIcon, MDBBtn } from \"mdbreact\";\nimport CountItem from './CountItem.js';\nimport ToggleInfo from './ToggleInfo.js';\nimport Form from 'react-bootstrap/Form';\nimport DayPickerInput from 'react-day-picker/DayPickerInput.js';\nimport { formatDate, parseDate } from 'react-day-picker/moment';\n\nimport 'react-day-picker/lib/style.css';\nimport '../Styles/BookForm.css';\n\n\n\nexport class BookForm extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n      value: [],\n      contactRadio:1,\n      deliveryRadio:1,\n      showBox:false,\n      showOther:false,\n      showBike: false,\n      showLargeBox:false,\n      showSmallFurniture:false,\n      showLargeFurniture:false,\n      from: undefined,\n      to: undefined,\n      BoxCount:0,\n      BikeCount:0,\n      LargeBoxCount:0,\n      SmallFurnitureCount:0,\n      LargeFurnitureCount:0,\n      TVCount:0,\n      CouchCount:0,\n      SuitcaseCount:0,\n      SuitcaseCount:0,\n      MiniFridgeCount:0,\n      MopedCount:0,\n    };\n    this.handleFromChange = this.handleFromChange.bind(this);\n    this.handleToChange = this.handleToChange.bind(this);\n    this.handleIncrement = this.handleIncrement.bind(this);\n    this.handleDecrement = this.handleDecrement.bind(this);\n  }\n\n  // <MDBRow>\n  //   <MDBCol size=\"sm-3\"><h3> interested in delivery?: </h3></MDBCol>\n  //   <MDBCol size=\"sm-2\"><MDBInput gap onClick={this.onClick(1, \"deliveryRadio\")} checked={this.state.deliveryRadio===1 ? true : false} label=\"yes\" type=\"radio\"\n  //   id=\"radio1\" /></MDBCol>\n  //   <MDBCol size=\"sm-2\"><MDBInput gap onClick={this.onClick(2, \"deliveryRadio\")} checked={this.state.deliveryRadio===2 ? true : false} label=\"no\" type=\"radio\"\n  //   id=\"radio2\" /></MDBCol>\n  //\n  // </MDBRow>\n  // {this.state.deliveryRadio==1 &&\n  //   <div>\n  //   <MDBRow>\n  //   <MDBCol>\n  //     <MDBInput\n  //       label=\"Street Address (include APT, etc)\"\n  //       group\n  //       type=\"number\"\n  //       validate\n  //       error=\"wrong\"\n  //       success=\"right\"\n  //     />\n  //   </MDBCol>\n  //   </MDBRow>\n  //\n  //   <MDBRow>\n  //     <MDBCol>\n  //     <MDBInput\n  //       label=\"City\"\n  //       group\n  //       type=\"text\"\n  //       validate\n  //       error=\"wrong\"\n  //       success=\"right\"\n  //     />\n  //     </MDBCol>\n  //\n  //     <MDBCol>\n  //\n  //       <Form.Control as=\"select\" id=\"bookform-states\">\n  //         <option>State..</option>\n  //         <option value=\"Alabama\">Alabama</option><option value=\"Alaska\">Alaska</option><option value=\"Arizona\">Arizona</option><option value=\"Arkansas\">Arkansas</option><option value=\"California\">California</option><option value=\"Colorado\">Colorado</option><option value=\"Connecticut\">Connecticut</option><option value=\"Delaware\">Delaware</option><option value=\"District of Columbia\">District of Columbia</option><option value=\"Florida\">Florida</option><option value=\"Georgia\">Georgia</option><option value=\"Guam\">Guam</option><option value=\"Hawaii\">Hawaii</option><option value=\"Idaho\">Idaho</option><option value=\"Illinois\">Illinois</option><option value=\"Indiana\">Indiana</option><option value=\"Iowa\">Iowa</option><option value=\"Kansas\">Kansas</option><option value=\"Kentucky\">Kentucky</option><option value=\"Louisiana\">Louisiana</option><option value=\"Maine\">Maine</option><option value=\"Maryland\">Maryland</option><option value=\"Massachusetts\">Massachusetts</option><option value=\"Michigan\">Michigan</option><option value=\"Minnesota\">Minnesota</option><option value=\"Mississippi\">Mississippi</option><option value=\"Missouri\">Missouri</option><option value=\"Montana\">Montana</option><option value=\"Nebraska\">Nebraska</option><option value=\"Nevada\">Nevada</option><option value=\"New Hampshire\">New Hampshire</option><option value=\"New Jersey\">New Jersey</option><option value=\"New Mexico\">New Mexico</option><option value=\"New York\">New York</option><option value=\"North Carolina\">North Carolina</option><option value=\"North Dakota\">North Dakota</option><option value=\"Northern Marianas Islands\">Northern Marianas Islands</option><option value=\"Ohio\">Ohio</option><option value=\"Oklahoma\">Oklahoma</option><option value=\"Oregon\">Oregon</option><option value=\"Pennsylvania\">Pennsylvania</option><option value=\"Puerto Rico\">Puerto Rico</option><option value=\"Rhode Island\">Rhode Island</option><option value=\"South Carolina\">South Carolina</option><option value=\"South Dakota\">South Dakota</option><option value=\"Tennessee\">Tennessee</option><option value=\"Texas\">Texas</option><option value=\"Utah\">Utah</option><option value=\"Vermont\">Vermont</option><option value=\"Virginia\">Virginia</option><option value=\"Virgin Islands\">Virgin Islands</option><option value=\"Washington\">Washington</option><option value=\"West Virginia\">West Virginia</option><option value=\"Wisconsin\">Wisconsin</option><option value=\"Wyoming\">Wyoming</option>\n  //       </Form.Control>\n  //     </MDBCol>\n  //\n  //     <MDBCol>\n  //     <MDBInput\n  //       label=\"Zip\"\n  //       group\n  //       type=\"number\"\n  //       validate\n  //       error=\"wrong\"\n  //       success=\"right\"\n  //     />\n  //     </MDBCol>\n  //   </MDBRow>\n  //\n  //   </div>\n  //\n  //\n  // }\n\n  onClick = (nr, type) => () => {\n    console.log(type);\n    console.log(nr);\n    let typeRadio = type;\n    this.setState({\n      [type]: nr\n    });\n  }\n\n  handleValueSelected=(event) =>{\n    let noSpace = event.target.value.split(' ').join('');\n    let showItem = `show${noSpace}`;\n    let countItem = noSpace+'Count';\n    console.log(\"count item is \" + countItem );\n    this.setState({\n      value: [ ...event.target.value ],\n      [showItem]:true\n    });\n  }\n\n  showFromMonth() {\n    const { from, to } = this.state;\n    if (!from) {\n      return;\n    }\n    if (moment(to).diff(moment(from), 'months') < 2) {\n      this.to.getDayPicker().showMonth(from);\n    }\n  }\n  handleFromChange(from) {\n    // Change the from date and focus the \"to\" input field\n    this.setState({ from });\n  }\n  handleToChange(to) {\n    this.setState({ to }, this.showFromMonth);\n  }\n\n  handleIncrement(item){\n    console.log(\"up\");\n    let countItem = item+'Count';\n    console.log(\"count item is \" + countItem );\n\n    this.setState({\n      [countItem]:this.state[countItem]+1\n    });\n  }\n  handleDecrement(item){\n    console.log(\"down\");\n    let countItem = item+'Count';\n    console.log(\"count item is \" + countItem );\n\n    this.setState({\n      [countItem]:this.state[countItem]==0? 0:this.state[countItem]-1\n    });\n  }\n\n  render(){\n    const { from, to } = this.state;\n    const modifiers = { start: from, end: to };\n  const itemTypes = ['Box', 'Small Furniture', 'Large Furniture', 'TV', 'Couch', 'Suitcase', 'Mini Fridge', 'Moped', 'Bike'];\n  const itemCountElements = itemTypes.map((type, index) =>{\n    let noSpace = type.replace(/\\s+/g, '');\n    let countItem = noSpace+'Count';\n    return <CountItem count={this.state[countItem]} name={type} id={index} handleIncrement={this.handleIncrement} handleDecrement = {this.handleDecrement}/>;\n  }\n\n\n  );\n\n\n    return(\n      <div className=\"bookform-main\">\n        <MDBContainer>\n          <div className=\"bookform-title\">\n            <h1>Book this Space</h1>\n            <h4>Please fill out the form below to submit a booking request. We will follow up as soon as possible to confirm the booking and setup details for payment, delivery, etc.</h4>\n          </div>\n          <MDBRow>\n            <form>\n             <MDBContainer id=\"bookform-container\">\n              <div className =\"bookform-content\">\n                <MDBRow>\n                  <MDBCol>\n                    <MDBInput\n                      label=\"First Name*\"\n                      group\n                      type=\"text\"\n                      validate\n                      error=\"wrong\"\n                      success=\"right\"\n                    />\n                  </MDBCol>\n                  <MDBCol>\n                    <MDBInput\n                      label=\"Last Name*\"\n                      group\n                      type=\"text\"\n                      validate\n                      error=\"wrong\"\n                      success=\"right\"\n                    />\n                  </MDBCol>\n                </MDBRow>\n                <MDBRow>\n                  <MDBCol size=\"sm-3\"><h3> Preferred form of contact: </h3></MDBCol>\n                  <MDBCol size=\"sm-2\"><MDBInput gap onClick={this.onClick(1, \"contactRadio\")} checked={this.state.contactRadio===1 ? true : false} label=\"email\" type=\"radio\"\n                  id=\"radio1\" /></MDBCol>\n                  <MDBCol size=\"sm-2\"><MDBInput gap onClick={this.onClick(2, \"contactRadio\")} checked={this.state.contactRadio===2 ? true : false} label=\"phone\" type=\"radio\"\n                  id=\"radio2\" /></MDBCol>\n                  <MDBCol size=\"sm-5\">\n                  {this.state.contactRadio===1 && <MDBInput\n                    label=\"Your email *\"\n                    group\n                    type=\"email\"\n                    validate\n                    error=\"wrong\"\n                    success=\"right\"\n                  />}\n\n                  {this.state.contactRadio===2 && <MDBInput\n                    label=\"Your phone *\"\n                    group\n                    type=\"number\"\n                    validate\n                    error=\"wrong\"\n                    success=\"right\"\n                  />}\n                  </MDBCol>\n                </MDBRow>\n\n                <MDBRow>\n                  <MDBCol>\n                    <h4>Dates to be stored</h4>\n                  </MDBCol>\n\n                  <MDBCol>\n                  <div className=\"InputFromTo\">\n                     <DayPickerInput\n                       value={from}\n                       placeholder=\"From\"\n                       format=\"LL\"\n                       formatDate={formatDate}\n                       parseDate={parseDate}\n                       dayPickerProps={{\n                         selectedDays: [from, { from, to }],\n                         disabledDays: { after: to },\n                         toMonth: to,\n                         modifiers,\n                         numberOfMonths: 1,\n                         onDayClick: () => this.to.getInput().focus(),\n                       }}\n                       onDayChange={this.handleFromChange}\n                     />{' '}\n                     —{' '}\n                     <span className=\"InputFromTo-to\">\n                       <DayPickerInput\n                         ref={el => (this.to = el)}\n                         value={to}\n                         placeholder=\"To\"\n                         format=\"LL\"\n                         formatDate={formatDate}\n                         parseDate={parseDate}\n                         dayPickerProps={{\n                           selectedDays: [from, { from, to }],\n                           disabledDays: { before: from },\n                           modifiers,\n                           month: from,\n                           fromMonth: from,\n                           numberOfMonths: 1,\n                         }}\n                         onDayChange={this.handleToChange}\n                       />\n                     </span>\n                  </div>\n                  </MDBCol>\n                </MDBRow>\n                <MDBRow>\n                  <MDBCol>\n                    <ToggleInfo title=\"item count\" content={itemCountElements}/>\n                  </MDBCol>\n                </MDBRow>\n                <MDBRow>\n                  <MDBCol><h4>Additional information about your storage needs</h4></MDBCol>\n                </MDBRow>\n                <MDBRow>\n                  <MDBCol>\n                    <MDBInput id=\"bookform-extrainfo\" type=\"textarea\" label=\"ex: I have a oddly shaped item...\" rows=\"5\" cols=\"100\"/>\n                  </MDBCol>\n                </MDBRow>\n              </div>\n              <div className =\"bookform-submit\">\n                  <MDBBtn outline color=\"secondary\">\n                    Send\n                  </MDBBtn>\n              </div>\n\n              </MDBContainer>\n            </form>\n\n          </MDBRow>\n        </MDBContainer>\n      </div>\n    );\n  }\n}\nexport default BookForm;\n"]},"metadata":{},"sourceType":"module"}