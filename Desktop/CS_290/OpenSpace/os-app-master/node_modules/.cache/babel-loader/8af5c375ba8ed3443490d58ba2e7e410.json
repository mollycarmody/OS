{"ast":null,"code":"import _toConsumableArray from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/src/Components/BookForm.js\";\nimport React from 'react';\nimport moment from 'moment';\nimport { MDBRow, MDBContainer, MDBInput, MDBCol, MDBFormInline, MDBIcon, MDBBtn } from \"mdbreact\";\nimport CountItem from './CountItem.js';\nimport ToggleInfo from './ToggleInfo.js';\nimport Form from 'react-bootstrap/Form';\nimport DayPickerInput from 'react-day-picker/DayPickerInput.js';\nimport { formatDate, parseDate } from 'react-day-picker/moment';\nimport 'react-day-picker/lib/style.css';\nimport '../Styles/BookForm.css';\nimport * as Api from '../apiActions.js';\nexport var BookForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BookForm, _React$Component);\n\n  function BookForm(props) {\n    var _this$state;\n\n    var _this;\n\n    _classCallCheck(this, BookForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BookForm).call(this, props));\n\n    _this.onClick = function (nr, type) {\n      return function () {\n        console.log(type);\n        console.log(nr);\n        var typeRadio = type;\n\n        _this.setState(_defineProperty({}, type, nr));\n      };\n    };\n\n    _this.Selected = function (event) {\n      var noSpace = event.target.value.split(' ').join('');\n      var showItem = \"show\".concat(noSpace);\n      var countItem = noSpace + 'Count';\n      console.log(\"count item is \" + countItem);\n\n      _this.setState(_defineProperty({\n        value: _toConsumableArray(event.target.value)\n      }, showItem, true));\n    };\n\n    _this.state = (_this$state = {\n      value: [],\n      contactRadio: 1,\n      deliveryRadio: 1,\n      showBox: false,\n      showOther: false,\n      showBike: false,\n      showLargeBox: false,\n      showSmallFurniture: false,\n      showLargeFurniture: false,\n      from: undefined,\n      to: undefined,\n      startD: '',\n      endD: '',\n      BoxCount: 0,\n      BikeCount: 0,\n      LargeBoxCount: 0,\n      SmallFurnitureCount: 0,\n      LargeFurnitureCount: 0,\n      TVCount: 0,\n      CouchCount: 0,\n      SuitcaseCount: 0\n    }, _defineProperty(_this$state, \"SuitcaseCount\", 0), _defineProperty(_this$state, \"MiniFridgeCount\", 0), _defineProperty(_this$state, \"MopedCount\", 0), _defineProperty(_this$state, \"note\", ''), _defineProperty(_this$state, \"email\", ''), _defineProperty(_this$state, \"phone\", 0), _defineProperty(_this$state, \"emailClass\", ''), _defineProperty(_this$state, \"phoneClass\", ''), _defineProperty(_this$state, \"startDClass\", ''), _defineProperty(_this$state, \"endDClass\", ''), _this$state);\n    _this.handleFromChange = _this.handleFromChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleToChange = _this.handleToChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleIncrement = _this.handleIncrement.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDecrement = _this.handleDecrement.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.get2D = _this.get2D.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.formatDates = _this.formatDates.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleNoteChange = _this.handleNoteChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleContactChange = _this.handleContactChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.hSubmit = _this.hSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // <MDBRow>\n  //   <MDBCol>\n  //     <MDBInput\n  //       label=\"First Name*\"\n  //       group\n  //       type=\"text\"\n  //       validate\n  //       error=\"wrong\"\n  //       success=\"right\"\n  //     />\n  //   </MDBCol>\n  //   <MDBCol>\n  //     <MDBInput\n  //       label=\"Last Name*\"\n  //       group\n  //       type=\"text\"\n  //       validate\n  //       error=\"wrong\"\n  //       success=\"right\"\n  //     />\n  //   </MDBCol>\n  // </MDBRow>\n  // <MDBRow>\n  //   <MDBCol size=\"sm-3\"><h3> interested in delivery?: </h3></MDBCol>\n  //   <MDBCol size=\"sm-2\"><MDBInput gap onClick={this.onClick(1, \"deliveryRadio\")} checked={this.state.deliveryRadio===1 ? true : false} label=\"yes\" type=\"radio\"\n  //   id=\"radio1\" /></MDBCol>\n  //   <MDBCol size=\"sm-2\"><MDBInput gap onClick={this.onClick(2, \"deliveryRadio\")} checked={this.state.deliveryRadio===2 ? true : false} label=\"no\" type=\"radio\"\n  //   id=\"radio2\" /></MDBCol>\n  //\n  // </MDBRow>\n  // {this.state.deliveryRadio==1 &&\n  //   <div>\n  //   <MDBRow>\n  //   <MDBCol>\n  //     <MDBInput\n  //       label=\"Street Address (include APT, etc)\"\n  //       group\n  //       type=\"number\"\n  //       validate\n  //       error=\"wrong\"\n  //       success=\"right\"\n  //     />\n  //   </MDBCol>\n  //   </MDBRow>\n  //\n  //   <MDBRow>\n  //     <MDBCol>\n  //     <MDBInput\n  //       label=\"City\"\n  //       group\n  //       type=\"text\"\n  //       validate\n  //       error=\"wrong\"\n  //       success=\"right\"\n  //     />\n  //     </MDBCol>\n  //\n  //     <MDBCol>\n  //\n  //       <Form.Control as=\"select\" id=\"bookform-states\">\n  //         <option>State..</option>\n  //         <option value=\"Alabama\">Alabama</option><option value=\"Alaska\">Alaska</option><option value=\"Arizona\">Arizona</option><option value=\"Arkansas\">Arkansas</option><option value=\"California\">California</option><option value=\"Colorado\">Colorado</option><option value=\"Connecticut\">Connecticut</option><option value=\"Delaware\">Delaware</option><option value=\"District of Columbia\">District of Columbia</option><option value=\"Florida\">Florida</option><option value=\"Georgia\">Georgia</option><option value=\"Guam\">Guam</option><option value=\"Hawaii\">Hawaii</option><option value=\"Idaho\">Idaho</option><option value=\"Illinois\">Illinois</option><option value=\"Indiana\">Indiana</option><option value=\"Iowa\">Iowa</option><option value=\"Kansas\">Kansas</option><option value=\"Kentucky\">Kentucky</option><option value=\"Louisiana\">Louisiana</option><option value=\"Maine\">Maine</option><option value=\"Maryland\">Maryland</option><option value=\"Massachusetts\">Massachusetts</option><option value=\"Michigan\">Michigan</option><option value=\"Minnesota\">Minnesota</option><option value=\"Mississippi\">Mississippi</option><option value=\"Missouri\">Missouri</option><option value=\"Montana\">Montana</option><option value=\"Nebraska\">Nebraska</option><option value=\"Nevada\">Nevada</option><option value=\"New Hampshire\">New Hampshire</option><option value=\"New Jersey\">New Jersey</option><option value=\"New Mexico\">New Mexico</option><option value=\"New York\">New York</option><option value=\"North Carolina\">North Carolina</option><option value=\"North Dakota\">North Dakota</option><option value=\"Northern Marianas Islands\">Northern Marianas Islands</option><option value=\"Ohio\">Ohio</option><option value=\"Oklahoma\">Oklahoma</option><option value=\"Oregon\">Oregon</option><option value=\"Pennsylvania\">Pennsylvania</option><option value=\"Puerto Rico\">Puerto Rico</option><option value=\"Rhode Island\">Rhode Island</option><option value=\"South Carolina\">South Carolina</option><option value=\"South Dakota\">South Dakota</option><option value=\"Tennessee\">Tennessee</option><option value=\"Texas\">Texas</option><option value=\"Utah\">Utah</option><option value=\"Vermont\">Vermont</option><option value=\"Virginia\">Virginia</option><option value=\"Virgin Islands\">Virgin Islands</option><option value=\"Washington\">Washington</option><option value=\"West Virginia\">West Virginia</option><option value=\"Wisconsin\">Wisconsin</option><option value=\"Wyoming\">Wyoming</option>\n  //       </Form.Control>\n  //     </MDBCol>\n  //\n  //     <MDBCol>\n  //     <MDBInput\n  //       label=\"Zip\"\n  //       group\n  //       type=\"number\"\n  //       validate\n  //       error=\"wrong\"\n  //       success=\"right\"\n  //     />\n  //     </MDBCol>\n  //   </MDBRow>\n  //\n  //   </div>\n  //\n  //\n  // }\n\n\n  _createClass(BookForm, [{\n    key: \"get2D\",\n    value: function get2D(num) {\n      if (num.toString().length < 2) // Integer of less than two digits\n        return \"0\" + num; // Prepend a zero!\n\n      return num.toString(); // return string for consistency\n    }\n  }, {\n    key: \"formatDates\",\n    value: function formatDates(date) {\n      var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n      var dateA = date.toString().split(' '); //split by spaceTypes\n\n      var year = dateA[3].toString();\n      var day = dateA[2].toString();\n      var month = months.indexOf(dateA[1]) + 1;\n      var monthString = this.get2D(month);\n      var dayString = this.get2D(day);\n      var newDate = year + '-' + monthString + '-' + dayString;\n      console.log(\"new date\" + newDate);\n      return newDate;\n    }\n  }, {\n    key: \"showFromMonth\",\n    value: function showFromMonth() {\n      var _this$state2 = this.state,\n          from = _this$state2.from,\n          to = _this$state2.to;\n\n      if (!from) {\n        return;\n      }\n\n      if (moment(to).diff(moment(from), 'months') < 2) {\n        this.to.getDayPicker().showMonth(from);\n      }\n    }\n  }, {\n    key: \"handleFromChange\",\n    value: function handleFromChange(from) {\n      // Change the from date and focus the \"to\" input field\n      console.log(from);\n      var d = this.formatDates(from);\n      this.setState({\n        from: from,\n        startD: d\n      });\n    }\n  }, {\n    key: \"handleToChange\",\n    value: function handleToChange(to) {\n      console.log(to);\n      var d = this.formatDates(to);\n      this.setState({\n        to: to,\n        endD: d\n      }, this.showFromMonth);\n    }\n  }, {\n    key: \"handleIncrement\",\n    value: function handleIncrement(item) {\n      console.log(\"up\");\n      var countItem = item + 'Count';\n      console.log(\"count item is \" + countItem);\n      this.setState(_defineProperty({}, countItem, this.state[countItem] + 1));\n    }\n  }, {\n    key: \"handleDecrement\",\n    value: function handleDecrement(item) {\n      console.log(\"down\");\n      var countItem = item + 'Count';\n      console.log(\"count item is \" + countItem);\n      this.setState(_defineProperty({}, countItem, this.state[countItem] == 0 ? 0 : this.state[countItem] - 1));\n    }\n  }, {\n    key: \"handleNoteChange\",\n    value: function handleNoteChange(event) {\n      this.setState({\n        note: event.target.value\n      });\n    }\n  }, {\n    key: \"handleContactChange\",\n    value: function handleContactChange(event) {\n      if (this.state.contactRadio == 1) {\n        var regexp = ''; //if(event.target.value.match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)){\n        //  console.log(\"email passing!\");\n\n        this.setState({\n          email: event.target.value\n        }); ///  }else{\n        //    console.log(\"email not poassing\");\n        //  }\n      } else {\n        this.setState({\n          phone: event.target.value\n        });\n      }\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      console.log(\"submit!\"); //post data\n\n      console.log(\"id is\" + JSON.stringify(this.props.id));\n      var data = {\n        listing: {\n          id: this.props.id\n        },\n        price: '$5.00',\n        booked_space: 100,\n        start_date: this.state.startD,\n        end_date: this.state.endD,\n        additional_instructions: this.state.note //confirmed:false,\n        //booker: \"mollycarmody\"\n\n      };\n      Api.Bookings.create(data, function (response) {\n        console.log(\"post attempt\");\n        console.log(response);\n      }); //data validate\n    }\n  }, {\n    key: \"hSubmit\",\n    value: function hSubmit(e) {\n      e.preventDefault();\n      var _this$state3 = this.state,\n          contactRadio = _this$state3.contactRadio,\n          phone = _this$state3.phone,\n          email = _this$state3.email,\n          startD = _this$state3.startD,\n          endD = _this$state3.endD;\n      var flag = true;\n      var emailClass = '';\n      var phoneClass = '';\n      var startDClass = '';\n      var endDClass = '';\n\n      if (contactRadio == 1 && email === '') {\n        console.log(\"email no\");\n        flag = false;\n        emailClass = \"invalid\";\n      }\n\n      if (contactRadio == 2 && (phone === 0 || phone === null || phone === undefined)) {\n        console.log(\"phone no\");\n        flag = false;\n        phoneClass = \"invalid\";\n      }\n\n      if (startD === '') {\n        console.log(\"nostartD\");\n        flag = false;\n        startDClass = \"invalid\";\n      }\n\n      if (endD === '') {\n        console.log(\"noendD\");\n        flag = false;\n        endDClass = \"invalid\";\n      }\n\n      if (flag) {\n        console.log('you can submit!');\n        this.handleSubmit();\n      } else {\n        console.log(\"there were errors!\");\n        this.setState({\n          emailClass: emailClass,\n          phoneClass: phoneClass,\n          startDClass: startDClass,\n          endDClass: endDClass\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state4 = this.state,\n          from = _this$state4.from,\n          to = _this$state4.to;\n      var modifiers = {\n        start: from,\n        end: to\n      };\n      var itemTypes = ['Box', 'Small Furniture', 'Large Furniture', 'TV', 'Couch', 'Suitcase', 'Mini Fridge', 'Moped', 'Bike'];\n      var itemCountElements = itemTypes.map(function (type, index) {\n        var noSpace = type.replace(/\\s+/g, '');\n        var countItem = noSpace + 'Count';\n        return React.createElement(CountItem, {\n          count: _this2.state[countItem],\n          name: type,\n          id: index,\n          handleIncrement: _this2.handleIncrement,\n          handleDecrement: _this2.handleDecrement,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 332\n          },\n          __self: this\n        });\n      });\n      var takenFromDates = [{\n        after: to\n      }, {\n        from: new Date(2019, 3, 20),\n        to: new Date(2019, 3, 25)\n      }, {\n        from: new Date(2019, 3, 12),\n        to: new Date(2019, 3, 13)\n      }];\n      var takenToDates = [{\n        before: from\n      }, {\n        from: new Date(2019, 3, 20),\n        to: new Date(2019, 3, 25)\n      }, {\n        from: new Date(2019, 3, 12),\n        to: new Date(2019, 3, 13)\n      }];\n      return React.createElement(\"div\", {\n        className: \"bookform-main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }, React.createElement(MDBContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"bookform-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, \"Book this Space\"), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }, \"Please fill out the form below to submit a booking request. We will follow up as soon as possible to confirm the booking and setup details for payment, delivery, etc.\")), React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.hSubmit,\n        noValidate: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      }, React.createElement(MDBContainer, {\n        id: \"bookform-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"bookform-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }, React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        size: \"sm-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }, \" Preferred form of contact: \")), React.createElement(MDBCol, {\n        size: \"sm-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, React.createElement(MDBInput, {\n        gap: true,\n        onClick: this.onClick(1, \"contactRadio\"),\n        checked: this.state.contactRadio === 1 ? true : false,\n        label: \"email\",\n        type: \"radio\",\n        id: \"radio1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      })), React.createElement(MDBCol, {\n        size: \"sm-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }, React.createElement(MDBInput, {\n        gap: true,\n        onClick: this.onClick(2, \"contactRadio\"),\n        checked: this.state.contactRadio === 2 ? true : false,\n        label: \"phone\",\n        type: \"radio\",\n        id: \"radio2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      })), React.createElement(MDBCol, {\n        size: \"sm-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }, this.state.contactRadio === 1 && React.createElement(MDBInput, {\n        className: this.state.emailClass,\n        onChange: this.handleContactChange,\n        label: \"Your email *\",\n        group: true,\n        type: \"email\",\n        validate: true,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }), this.state.contactRadio === 2 && React.createElement(MDBInput, {\n        className: this.state.phoneClass,\n        onChange: this.handleContactChange,\n        label: \"Your phone *\",\n        group: true,\n        type: \"number\",\n        validate: true,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      }))), React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        },\n        __self: this\n      }, \"Dates to be stored\")), React.createElement(MDBCol, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"InputFromTo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: this.state.startDClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }, React.createElement(DayPickerInput, {\n        value: from,\n        placeholder: \"From\",\n        format: \"LL\",\n        formatDate: formatDate,\n        parseDate: parseDate,\n        dayPickerProps: {\n          selectedDays: [from, {\n            from: from,\n            to: to\n          }],\n          disabledDays: takenFromDates,\n          toMonth: to,\n          modifiers: modifiers,\n          numberOfMonths: 1,\n          onDayClick: function onDayClick() {\n            return _this2.to.getInput().focus();\n          }\n        },\n        onDayChange: this.handleFromChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      })), ' ', \"\\u2014\", ' ', React.createElement(\"span\", {\n        className: \"InputFromTo-to\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: this.state.endDClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435\n        },\n        __self: this\n      }, React.createElement(DayPickerInput, {\n        className: this.state.endDClass,\n        ref: function ref(el) {\n          return _this2.to = el;\n        },\n        value: to,\n        placeholder: \"To\",\n        format: \"LL\",\n        formatDate: formatDate,\n        parseDate: parseDate,\n        dayPickerProps: {\n          selectedDays: [from, {\n            from: from,\n            to: to\n          }],\n          disabledDays: takenToDates,\n          modifiers: modifiers,\n          month: from,\n          fromMonth: from,\n          numberOfMonths: 1\n        },\n        onDayChange: this.handleToChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436\n        },\n        __self: this\n      })))))), React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461\n        },\n        __self: this\n      }, React.createElement(ToggleInfo, {\n        title: \"item count\",\n        content: itemCountElements,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462\n        },\n        __self: this\n      }))), React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466\n        },\n        __self: this\n      }, \"Additional information about your storage needs\"))), React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469\n        },\n        __self: this\n      }, React.createElement(MDBInput, {\n        onChange: this.handleNoteChange,\n        id: \"bookform-extrainfo\",\n        type: \"textarea\",\n        label: \"ex: I have a oddly shaped item...\",\n        rows: \"5\",\n        cols: \"100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"bookform-submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        outline: true,\n        color: \"secondary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475\n        },\n        __self: this\n      }, \"Send\")))))));\n    }\n  }]);\n\n  return BookForm;\n}(React.Component);\nexport default BookForm;","map":{"version":3,"sources":["/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/src/Components/BookForm.js"],"names":["React","moment","MDBRow","MDBContainer","MDBInput","MDBCol","MDBFormInline","MDBIcon","MDBBtn","CountItem","ToggleInfo","Form","DayPickerInput","formatDate","parseDate","Api","BookForm","props","onClick","nr","type","console","log","typeRadio","setState","Selected","event","noSpace","target","value","split","join","showItem","countItem","state","contactRadio","deliveryRadio","showBox","showOther","showBike","showLargeBox","showSmallFurniture","showLargeFurniture","from","undefined","to","startD","endD","BoxCount","BikeCount","LargeBoxCount","SmallFurnitureCount","LargeFurnitureCount","TVCount","CouchCount","SuitcaseCount","handleFromChange","bind","handleToChange","handleIncrement","handleDecrement","get2D","formatDates","handleNoteChange","handleContactChange","handleSubmit","hSubmit","num","toString","length","date","months","dateA","year","day","month","indexOf","monthString","dayString","newDate","diff","getDayPicker","showMonth","d","showFromMonth","item","note","regexp","email","phone","JSON","stringify","id","data","listing","price","booked_space","start_date","end_date","additional_instructions","Bookings","create","response","e","preventDefault","flag","emailClass","phoneClass","startDClass","endDClass","modifiers","start","end","itemTypes","itemCountElements","map","index","replace","takenFromDates","after","Date","takenToDates","before","selectedDays","disabledDays","toMonth","numberOfMonths","onDayClick","getInput","focus","el","fromMonth","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport moment from 'moment';\nimport { MDBRow, MDBContainer, MDBInput, MDBCol, MDBFormInline, MDBIcon, MDBBtn } from \"mdbreact\";\nimport CountItem from './CountItem.js';\nimport ToggleInfo from './ToggleInfo.js';\nimport Form from 'react-bootstrap/Form';\nimport DayPickerInput from 'react-day-picker/DayPickerInput.js';\nimport { formatDate, parseDate } from 'react-day-picker/moment';\n\nimport 'react-day-picker/lib/style.css';\nimport '../Styles/BookForm.css';\n\nimport * as Api from '../apiActions.js';\n\n\n\nexport class BookForm extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n      value: [],\n      contactRadio:1,\n      deliveryRadio:1,\n      showBox:false,\n      showOther:false,\n      showBike: false,\n      showLargeBox:false,\n      showSmallFurniture:false,\n      showLargeFurniture:false,\n      from: undefined,\n      to: undefined,\n      startD: '',\n      endD: '',\n      BoxCount:0,\n      BikeCount:0,\n      LargeBoxCount:0,\n      SmallFurnitureCount:0,\n      LargeFurnitureCount:0,\n      TVCount:0,\n      CouchCount:0,\n      SuitcaseCount:0,\n      SuitcaseCount:0,\n      MiniFridgeCount:0,\n      MopedCount:0,\n      note:'',\n      email:'',\n      phone:0,\n      emailClass:'',\n      phoneClass:'',\n      startDClass:'',\n      endDClass:''\n    };\n    this.handleFromChange = this.handleFromChange.bind(this);\n    this.handleToChange = this.handleToChange.bind(this);\n    this.handleIncrement = this.handleIncrement.bind(this);\n    this.handleDecrement = this.handleDecrement.bind(this);\n    this.get2D = this.get2D.bind(this);\n    this.formatDates = this.formatDates.bind(this);\n    this.handleNoteChange = this.handleNoteChange.bind(this);\n    this.handleContactChange = this.handleContactChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.hSubmit = this.hSubmit.bind(this);\n  }\n  // <MDBRow>\n  //   <MDBCol>\n  //     <MDBInput\n  //       label=\"First Name*\"\n  //       group\n  //       type=\"text\"\n  //       validate\n  //       error=\"wrong\"\n  //       success=\"right\"\n  //     />\n  //   </MDBCol>\n  //   <MDBCol>\n  //     <MDBInput\n  //       label=\"Last Name*\"\n  //       group\n  //       type=\"text\"\n  //       validate\n  //       error=\"wrong\"\n  //       success=\"right\"\n  //     />\n  //   </MDBCol>\n  // </MDBRow>\n  // <MDBRow>\n  //   <MDBCol size=\"sm-3\"><h3> interested in delivery?: </h3></MDBCol>\n  //   <MDBCol size=\"sm-2\"><MDBInput gap onClick={this.onClick(1, \"deliveryRadio\")} checked={this.state.deliveryRadio===1 ? true : false} label=\"yes\" type=\"radio\"\n  //   id=\"radio1\" /></MDBCol>\n  //   <MDBCol size=\"sm-2\"><MDBInput gap onClick={this.onClick(2, \"deliveryRadio\")} checked={this.state.deliveryRadio===2 ? true : false} label=\"no\" type=\"radio\"\n  //   id=\"radio2\" /></MDBCol>\n  //\n  // </MDBRow>\n  // {this.state.deliveryRadio==1 &&\n  //   <div>\n  //   <MDBRow>\n  //   <MDBCol>\n  //     <MDBInput\n  //       label=\"Street Address (include APT, etc)\"\n  //       group\n  //       type=\"number\"\n  //       validate\n  //       error=\"wrong\"\n  //       success=\"right\"\n  //     />\n  //   </MDBCol>\n  //   </MDBRow>\n  //\n  //   <MDBRow>\n  //     <MDBCol>\n  //     <MDBInput\n  //       label=\"City\"\n  //       group\n  //       type=\"text\"\n  //       validate\n  //       error=\"wrong\"\n  //       success=\"right\"\n  //     />\n  //     </MDBCol>\n  //\n  //     <MDBCol>\n  //\n  //       <Form.Control as=\"select\" id=\"bookform-states\">\n  //         <option>State..</option>\n  //         <option value=\"Alabama\">Alabama</option><option value=\"Alaska\">Alaska</option><option value=\"Arizona\">Arizona</option><option value=\"Arkansas\">Arkansas</option><option value=\"California\">California</option><option value=\"Colorado\">Colorado</option><option value=\"Connecticut\">Connecticut</option><option value=\"Delaware\">Delaware</option><option value=\"District of Columbia\">District of Columbia</option><option value=\"Florida\">Florida</option><option value=\"Georgia\">Georgia</option><option value=\"Guam\">Guam</option><option value=\"Hawaii\">Hawaii</option><option value=\"Idaho\">Idaho</option><option value=\"Illinois\">Illinois</option><option value=\"Indiana\">Indiana</option><option value=\"Iowa\">Iowa</option><option value=\"Kansas\">Kansas</option><option value=\"Kentucky\">Kentucky</option><option value=\"Louisiana\">Louisiana</option><option value=\"Maine\">Maine</option><option value=\"Maryland\">Maryland</option><option value=\"Massachusetts\">Massachusetts</option><option value=\"Michigan\">Michigan</option><option value=\"Minnesota\">Minnesota</option><option value=\"Mississippi\">Mississippi</option><option value=\"Missouri\">Missouri</option><option value=\"Montana\">Montana</option><option value=\"Nebraska\">Nebraska</option><option value=\"Nevada\">Nevada</option><option value=\"New Hampshire\">New Hampshire</option><option value=\"New Jersey\">New Jersey</option><option value=\"New Mexico\">New Mexico</option><option value=\"New York\">New York</option><option value=\"North Carolina\">North Carolina</option><option value=\"North Dakota\">North Dakota</option><option value=\"Northern Marianas Islands\">Northern Marianas Islands</option><option value=\"Ohio\">Ohio</option><option value=\"Oklahoma\">Oklahoma</option><option value=\"Oregon\">Oregon</option><option value=\"Pennsylvania\">Pennsylvania</option><option value=\"Puerto Rico\">Puerto Rico</option><option value=\"Rhode Island\">Rhode Island</option><option value=\"South Carolina\">South Carolina</option><option value=\"South Dakota\">South Dakota</option><option value=\"Tennessee\">Tennessee</option><option value=\"Texas\">Texas</option><option value=\"Utah\">Utah</option><option value=\"Vermont\">Vermont</option><option value=\"Virginia\">Virginia</option><option value=\"Virgin Islands\">Virgin Islands</option><option value=\"Washington\">Washington</option><option value=\"West Virginia\">West Virginia</option><option value=\"Wisconsin\">Wisconsin</option><option value=\"Wyoming\">Wyoming</option>\n  //       </Form.Control>\n  //     </MDBCol>\n  //\n  //     <MDBCol>\n  //     <MDBInput\n  //       label=\"Zip\"\n  //       group\n  //       type=\"number\"\n  //       validate\n  //       error=\"wrong\"\n  //       success=\"right\"\n  //     />\n  //     </MDBCol>\n  //   </MDBRow>\n  //\n  //   </div>\n  //\n  //\n  // }\n\n  onClick = (nr, type) => () => {\n    console.log(type);\n    console.log(nr);\n    let typeRadio = type;\n    this.setState({\n        [type]: nr\n    });\n  }\n\n\n\n  Selected=(event) =>{\n    let noSpace = event.target.value.split(' ').join('');\n    let showItem = `show${noSpace}`;\n    let countItem = noSpace+'Count';\n    console.log(\"count item is \" + countItem );\n    this.setState({\n      value: [ ...event.target.value ],\n      [showItem]:true\n    });\n  }\n\n  get2D( num ) {\n     if( num.toString().length < 2 ) // Integer of less than two digits\n         return \"0\" + num; // Prepend a zero!\n     return num.toString(); // return string for consistency\n  }\n\n  formatDates(date){\n    const months=['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    var dateA = date.toString().split(' '); //split by spaceTypes\n    let year = dateA[3].toString();\n    let day = dateA[2].toString();\n    let month = months.indexOf(dateA[1])+1;\n    const monthString = this.get2D(month);\n    const dayString = this.get2D(day);\n    const newDate = year + '-' + monthString + '-' + dayString;\n    console.log(\"new date\" + newDate);\n    return newDate;\n  }\n\n  showFromMonth() {\n    const { from, to } = this.state;\n    if (!from) {\n      return;\n    }\n    if (moment(to).diff(moment(from), 'months') < 2) {\n      this.to.getDayPicker().showMonth(from);\n    }\n  }\n  handleFromChange(from) {\n    // Change the from date and focus the \"to\" input field\n    console.log(from);\n    const d = this.formatDates(from);\n    this.setState({\n      from,\n      startD: d\n    });\n  }\n  handleToChange(to) {\n    console.log(to);\n    const d = this.formatDates(to);\n    this.setState({\n      to,\n      endD: d\n    }, this.showFromMonth);\n  }\n\n  handleIncrement(item){\n    console.log(\"up\");\n    let countItem = item+'Count';\n    console.log(\"count item is \" + countItem );\n\n    this.setState({\n      [countItem]:this.state[countItem]+1\n    });\n  }\n  handleDecrement(item){\n    console.log(\"down\");\n    let countItem = item+'Count';\n    console.log(\"count item is \" + countItem );\n\n    this.setState({\n      [countItem]:this.state[countItem]==0? 0:this.state[countItem]-1\n    });\n  }\n\n  handleNoteChange(event){\n    this.setState({\n      note: event.target.value\n    });\n  }\n  handleContactChange(event){\n\n    if(this.state.contactRadio==1){\n      var regexp = '';\n      //if(event.target.value.match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)){\n      //  console.log(\"email passing!\");\n        this.setState({\n          email: event.target.value\n        });\n    ///  }else{\n    //    console.log(\"email not poassing\");\n    //  }\n    }else{\n\n        this.setState({\n          phone: event.target.value\n        });\n      }\n    }\n\n\n\n  handleSubmit(){\n    console.log(\"submit!\");\n    //post data\n    console.log(\"id is\" + JSON.stringify(this.props.id));\n    const data = {\n      listing:{\n        id: this.props.id\n      },\n      price: '$5.00',\n      booked_space: 100,\n      start_date: this.state.startD,\n      end_date: this.state.endD,\n      additional_instructions: this.state.note,\n      //confirmed:false,\n      //booker: \"mollycarmody\"\n    }\n    Api.Bookings.create(data, response =>{\n      console.log(\"post attempt\");\n      console.log(response);\n\n    })\n    //data validate\n  }\n\n  hSubmit(e){\n    e.preventDefault();\n    const {contactRadio, phone, email, startD, endD} = this.state;\n    let flag = true;\n    var emailClass='';\n    var phoneClass='';\n    var startDClass='';\n    var endDClass='';\n    if((contactRadio==1) && (email==='')){\n      console.log(\"email no\");\n      flag=false;\n      emailClass=\"invalid\";\n    }\n    if((contactRadio==2) && (phone===0||phone===null||phone===undefined)){\n      console.log(\"phone no\");\n      flag=false;\n      phoneClass=\"invalid\";\n    }\n    if(startD===''){\n      console.log(\"nostartD\");\n      flag=false;\n      startDClass=\"invalid\";\n    }\n    if(endD===''){\n      console.log(\"noendD\");\n      flag=false;\n      endDClass=\"invalid\";\n    }\n    if(flag){\n      console.log('you can submit!');\n      this.handleSubmit();\n    }else{\n      console.log(\"there were errors!\");\n      this.setState({\n        emailClass,\n        phoneClass,\n        startDClass,\n        endDClass\n      })\n    }\n  }\n  render(){\n    const { from, to } = this.state;\n    const modifiers = { start: from, end: to };\n    const itemTypes = ['Box', 'Small Furniture', 'Large Furniture', 'TV', 'Couch', 'Suitcase', 'Mini Fridge', 'Moped', 'Bike'];\n    const itemCountElements = itemTypes.map((type, index) =>{\n    let noSpace = type.replace(/\\s+/g, '');\n    let countItem = noSpace+'Count';\n    return <CountItem count={this.state[countItem]} name={type} id={index} handleIncrement={this.handleIncrement} handleDecrement = {this.handleDecrement}/>;\n  }\n  );\n  const takenFromDates=[\n    {\n      after:to\n    },\n    {\n      from:new Date(2019, 3, 20),\n        to:new Date(2019, 3, 25)\n    },\n    {\n      from:new Date(2019, 3, 12),\n        to:new Date(2019, 3, 13)\n    }\n  ];\n  const takenToDates=[\n    {\n      before:from\n    },\n    {\n      from:new Date(2019, 3, 20),\n        to:new Date(2019, 3, 25)\n    },\n    {\n      from:new Date(2019, 3, 12),\n        to:new Date(2019, 3, 13)\n    }\n  ];\n\n\n\n    return(\n      <div className=\"bookform-main\">\n        <MDBContainer>\n          <div className=\"bookform-title\">\n            <h1>Book this Space</h1>\n            <h4>Please fill out the form below to submit a booking request. We will follow up as soon as possible to confirm the booking and setup details for payment, delivery, etc.</h4>\n          </div>\n          <MDBRow>\n            <form onSubmit={this.hSubmit}\n              noValidate\n            >\n             <MDBContainer id=\"bookform-container\">\n              <div className =\"bookform-content\">\n                <MDBRow>\n                  <MDBCol size=\"sm-3\"><h3> Preferred form of contact: </h3></MDBCol>\n                  <MDBCol size=\"sm-2\"><MDBInput gap onClick={this.onClick(1, \"contactRadio\")} checked={this.state.contactRadio===1 ? true : false} label=\"email\" type=\"radio\"\n                  id=\"radio1\" /></MDBCol>\n                  <MDBCol size=\"sm-2\"><MDBInput gap onClick={this.onClick(2, \"contactRadio\")} checked={this.state.contactRadio===2 ? true : false} label=\"phone\" type=\"radio\"\n                  id=\"radio2\" /></MDBCol>\n                  <MDBCol size=\"sm-5\">\n                  {this.state.contactRadio===1 && <MDBInput\n                    className={this.state.emailClass}\n                    onChange ={this.handleContactChange}\n                    label=\"Your email *\"\n                    group\n                    type=\"email\"\n                    validate\n                    required\n                  />}\n\n                  {this.state.contactRadio===2 && <MDBInput\n                    className={this.state.phoneClass}\n                    onChange ={this.handleContactChange}\n                    label=\"Your phone *\"\n                    group\n                    type=\"number\"\n                    validate\n                    required\n                  />}\n                  </MDBCol>\n                </MDBRow>\n\n                <MDBRow>\n                  <MDBCol>\n                    <h4>Dates to be stored</h4>\n                  </MDBCol>\n\n                  <MDBCol>\n                  <div className=\"InputFromTo\">\n                      <div className={this.state.startDClass}>\n                       <DayPickerInput\n                         value={from}\n                         placeholder=\"From\"\n                         format=\"LL\"\n                         formatDate={formatDate}\n                         parseDate={parseDate}\n                         dayPickerProps={{\n                           selectedDays: [from, { from, to }],\n                           disabledDays: takenFromDates,\n                           toMonth: to,\n                           modifiers,\n                           numberOfMonths: 1,\n                           onDayClick: () => this.to.getInput().focus(),\n                         }}\n                         onDayChange={this.handleFromChange}\n                         required\n                       />\n                     </div>\n                     {' '}\n                     —{' '}\n                     <span className=\"InputFromTo-to\">\n                       <div className={this.state.endDClass}>\n                         <DayPickerInput\n                         className={this.state.endDClass}\n                           ref={el => (this.to = el)}\n                           value={to}\n                           placeholder=\"To\"\n                           format=\"LL\"\n                           formatDate={formatDate}\n                           parseDate={parseDate}\n                           dayPickerProps={{\n                             selectedDays: [from, { from, to }],\n                             disabledDays: takenToDates,\n                             modifiers,\n                             month: from,\n                             fromMonth: from,\n                             numberOfMonths: 1,\n                           }}\n                           onDayChange={this.handleToChange}\n                           required\n                         />\n                        </div>\n                     </span>\n                  </div>\n                  </MDBCol>\n                </MDBRow>\n                <MDBRow>\n                  <MDBCol>\n                    <ToggleInfo title=\"item count\" content={itemCountElements}/>\n                  </MDBCol>\n                </MDBRow>\n                <MDBRow>\n                  <MDBCol><h4>Additional information about your storage needs</h4></MDBCol>\n                </MDBRow>\n                <MDBRow>\n                  <MDBCol>\n                    <MDBInput onChange={this.handleNoteChange} id=\"bookform-extrainfo\" type=\"textarea\" label=\"ex: I have a oddly shaped item...\" rows=\"5\" cols=\"100\"/>\n                  </MDBCol>\n                </MDBRow>\n              </div>\n              <div className =\"bookform-submit\">\n                  <MDBBtn outline color=\"secondary\" type=\"submit\">\n                    Send\n                  </MDBBtn>\n              </div>\n\n              </MDBContainer>\n            </form>\n\n          </MDBRow>\n        </MDBContainer>\n      </div>\n    );\n  }\n}\nexport default BookForm;\n"]},"metadata":{},"sourceType":"module"}