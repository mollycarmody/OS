{"ast":null,"code":"import _classCallCheck from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/src/Components/Filter.js\";\nimport React from 'react';\nimport Multiselect from 'react-bootstrap-multiselect';\nimport { MDBRow, MDBContainer, MDBInput, MDBCol, MDBFormInline, MDBIcon, MDBBtn } from \"mdbreact\";\nimport moment from 'moment';\nimport DayPickerInput from 'react-day-picker/DayPickerInput.js';\nimport { formatDate, parseDate } from 'react-day-picker/moment';\nimport 'react-day-picker/lib/style.css';\nimport 'react-bootstrap-multiselect/css/bootstrap-multiselect.css';\nexport var Filter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Filter, _React$Component);\n\n  function Filter(props) {\n    var _this;\n\n    _classCallCheck(this, Filter);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Filter).call(this, props));\n    _this.state = {\n      from: undefined,\n      to: undefined,\n      spaceTypes: [{\n        value: 'Restaurant space',\n        label: 'Restaurant'\n      }, {\n        value: 'Mall space',\n        label: 'Mall'\n      }, {\n        value: 'Apartment space',\n        label: 'Apartment'\n      }, {\n        value: 'Garage space',\n        label: 'Garage'\n      }, {\n        value: 'Closet space',\n        label: 'Closet'\n      }, {\n        value: 'Basement space',\n        label: 'Basement'\n      }, {\n        value: 'Outdoor space',\n        label: 'Outdoor (i.e shed)'\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(Filter, [{\n    key: \"showFromMonth\",\n    value: function showFromMonth() {\n      var _this$state = this.state,\n          from = _this$state.from,\n          to = _this$state.to;\n\n      if (!from) {\n        return;\n      }\n\n      if (moment(to).diff(moment(from), 'months') < 2) {\n        this.to.getDayPicker().showMonth(from);\n      }\n    }\n  }, {\n    key: \"handleFromChange\",\n    value: function handleFromChange(from) {\n      // Change the from date and focus the \"to\" input field\n      this.setState({\n        from: from\n      });\n    }\n  }, {\n    key: \"handleToChange\",\n    value: function handleToChange(to) {\n      this.setState({\n        to: to\n      }, this.showFromMonth);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          from = _this$state2.from,\n          to = _this$state2.to;\n      var modifiers = {\n        start: from,\n        end: to\n      };\n      var spaceTypeDrop = this.state.spaceTypes.map(function (space, index) {\n        return React.createElement(MDBDropdownItem, {\n          value: space.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, space.label);\n      });\n      return React.createElement(\"div\", {\n        className: \"filter-main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"filter-spaceTypeDropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(MDBDropdown, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(MDBDropdownToggle, {\n        caret: true,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"MDBDropdown\"), React.createElement(MDBDropdownMenu, {\n        basic: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(MDBDropdownItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Action\"), React.createElement(MDBDropdownItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Another Action\"), React.createElement(MDBDropdownItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Something else here\"), React.createElement(MDBDropdownItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Separated link\")))), React.createElement(\"div\", {\n        className: \"InputFromTo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(DayPickerInput, {\n        value: from,\n        placeholder: \"From\",\n        format: \"LL\",\n        formatDate: formatDate,\n        parseDate: parseDate,\n        dayPickerProps: {\n          selectedDays: [from, {\n            from: from,\n            to: to\n          }],\n          disabledDays: {\n            after: to\n          },\n          toMonth: to,\n          modifiers: modifiers,\n          numberOfMonths: 1,\n          onDayClick: function onDayClick() {\n            return _this2.to.getInput().focus();\n          }\n        },\n        onDayChange: this.handleFromChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), ' ', \"\\u2014\", ' ', React.createElement(\"span\", {\n        className: \"InputFromTo-to\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(DayPickerInput, {\n        ref: function ref(el) {\n          return _this2.to = el;\n        },\n        value: to,\n        placeholder: \"To\",\n        format: \"LL\",\n        formatDate: formatDate,\n        parseDate: parseDate,\n        dayPickerProps: {\n          selectedDays: [from, {\n            from: from,\n            to: to\n          }],\n          disabledDays: {\n            before: from\n          },\n          modifiers: modifiers,\n          month: from,\n          fromMonth: from,\n          numberOfMonths: 1\n        },\n        onDayChange: this.handleToChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Filter;\n}(React.Component);\nexport default Filter;","map":{"version":3,"sources":["/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/src/Components/Filter.js"],"names":["React","Multiselect","MDBRow","MDBContainer","MDBInput","MDBCol","MDBFormInline","MDBIcon","MDBBtn","moment","DayPickerInput","formatDate","parseDate","Filter","props","state","from","undefined","to","spaceTypes","value","label","diff","getDayPicker","showMonth","setState","showFromMonth","modifiers","start","end","spaceTypeDrop","map","space","index","selectedDays","disabledDays","after","toMonth","numberOfMonths","onDayClick","getInput","focus","handleFromChange","el","before","month","fromMonth","handleToChange","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Multiselect from 'react-bootstrap-multiselect';\n\nimport { MDBRow, MDBContainer, MDBInput, MDBCol, MDBFormInline, MDBIcon, MDBBtn } from \"mdbreact\";\n\nimport moment from 'moment';\nimport DayPickerInput from 'react-day-picker/DayPickerInput.js';\nimport { formatDate, parseDate } from 'react-day-picker/moment';\nimport 'react-day-picker/lib/style.css';\nimport 'react-bootstrap-multiselect/css/bootstrap-multiselect.css';\n\nexport class Filter extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n      from: undefined,\n      to: undefined,\n      spaceTypes:[\n        {\n          value:'Restaurant space',\n          label:'Restaurant'\n        },\n        {\n          value:'Mall space',\n          label:'Mall'\n        },\n        {\n          value:'Apartment space',\n          label:'Apartment'\n        },\n        {\n          value:'Garage space',\n          label:'Garage'\n        },\n        {\n          value:'Closet space',\n          label:'Closet'\n        },\n        {\n          value:'Basement space',\n          label:'Basement'\n        },\n        {\n          value:'Outdoor space',\n          label:'Outdoor (i.e shed)'\n        }\n      ]\n    }\n  }\n\n  showFromMonth() {\n    const { from, to } = this.state;\n    if (!from) {\n      return;\n    }\n    if (moment(to).diff(moment(from), 'months') < 2) {\n      this.to.getDayPicker().showMonth(from);\n    }\n  }\n  handleFromChange(from) {\n    // Change the from date and focus the \"to\" input field\n    this.setState({ from });\n  }\n  handleToChange(to) {\n    this.setState({ to }, this.showFromMonth);\n  }\n\n  render(){\n    const { from, to } = this.state;\n    const modifiers = { start: from, end: to };\n    const spaceTypeDrop = this.state.spaceTypes.map((space, index) =>\n        <MDBDropdownItem value={space.value}>{space.label}</MDBDropdownItem>\n    );\n    return(\n      <div className=\"filter-main\">\n        <div className=\"filter-spaceTypeDropdown\">\n        <MDBDropdown>\n           <MDBDropdownToggle caret color=\"primary\">\n             MDBDropdown\n           </MDBDropdownToggle>\n           <MDBDropdownMenu basic>\n             <MDBDropdownItem>Action</MDBDropdownItem>\n             <MDBDropdownItem>Another Action</MDBDropdownItem>\n             <MDBDropdownItem>Something else here</MDBDropdownItem>\n             <MDBDropdownItem>Separated link</MDBDropdownItem>\n           </MDBDropdownMenu>\n         </MDBDropdown>\n        </div>\n        <div className=\"InputFromTo\">\n           <DayPickerInput\n             value={from}\n             placeholder=\"From\"\n             format=\"LL\"\n             formatDate={formatDate}\n             parseDate={parseDate}\n             dayPickerProps={{\n               selectedDays: [from, { from, to }],\n               disabledDays: { after: to },\n               toMonth: to,\n               modifiers,\n               numberOfMonths: 1,\n               onDayClick: () => this.to.getInput().focus(),\n             }}\n             onDayChange={this.handleFromChange}\n           />{' '}\n           —{' '}\n           <span className=\"InputFromTo-to\">\n             <DayPickerInput\n               ref={el => (this.to = el)}\n               value={to}\n               placeholder=\"To\"\n               format=\"LL\"\n               formatDate={formatDate}\n               parseDate={parseDate}\n               dayPickerProps={{\n                 selectedDays: [from, { from, to }],\n                 disabledDays: { before: from },\n                 modifiers,\n                 month: from,\n                 fromMonth: from,\n                 numberOfMonths: 1,\n               }}\n               onDayChange={this.handleToChange}\n             />\n           </span>\n        </div>\n\n      </div>\n\n    );\n  }\n\n}\n\nexport default Filter;\n"]},"metadata":{},"sourceType":"module"}