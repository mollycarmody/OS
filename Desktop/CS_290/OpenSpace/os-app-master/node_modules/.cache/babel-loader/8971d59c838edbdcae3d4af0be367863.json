{"ast":null,"code":"import _classCallCheck from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/src/Components/Filter.js\";\nimport React from 'react';\nimport { MDBRow, MDBContainer, MDBInput, MDBCol, MDBFormInline, MDBIcon, MDBBtn } from \"mdbreact\";\nimport { MDBNavbar, MDBNavItem, MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem } from \"mdbreact\";\nimport { UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport moment from 'moment';\nimport DayPickerInput from 'react-day-picker/DayPickerInput.js';\nimport { formatDate, parseDate } from 'react-day-picker/moment';\nimport 'react-day-picker/lib/style.css';\nexport var Filter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Filter, _React$Component);\n\n  function Filter(props) {\n    var _this;\n\n    _classCallCheck(this, Filter);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Filter).call(this, props));\n    _this.state = {\n      dropdownOpenSpace: false,\n      dropdownOpenDate: false,\n      filtersUsed: false,\n      spaceTypes: [{\n        value: 'Restaurant space',\n        label: 'Restaurant'\n      }, {\n        value: 'Mall space',\n        label: 'Mall'\n      }, {\n        value: 'Apartment space',\n        label: 'Apartment'\n      }, {\n        value: 'Garage space',\n        label: 'Garage'\n      }, {\n        value: 'Closet space',\n        label: 'Closet'\n      }, {\n        value: 'Basement space',\n        label: 'Basement'\n      }, {\n        value: 'Outdoor space',\n        label: 'Outdoor (i.e shed)'\n      }]\n    };\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Filter, [{\n    key: \"toggle\",\n    value: function toggle(type) {\n      switch (type) {\n        case 'space':\n          this.setState({\n            dropdownOpenSpace: !this.state.dropdownOpenSpace\n          });\n          break;\n\n        case 'date':\n          this.setState({\n            dropdownOpenDate: !this.state.dropdownOpenDate\n          });\n          break;\n      }\n    } // <select value={this.props.arr} multiple={true} onChange={this.props.handleChange}>\n    //   <option value=\"Restaurant space\">Restaurant</option>\n    //   <option value=\"Apartment space\">Apartment</option>\n    //   <option value=\"Mall space\">Mall</option>\n    //   <option value=\"Garage space\">Garage</option>\n    //   <option value=\"Closet space\">Closet</option>\n    //   <option value=\"Basement space\">Basement</option>\n    //   <option value=\"Attic space\">Attic</option>\n    //   <option value=\"Outdoor space\">Outdoor Storage (i.e. shed)</option>\n    // </select>\n    // const spaceTypeDropItems = this.state.spaceTypes.map((space, index) =>\n    //     <Dropdown.Item value={space.value}>{space.label}</Dropdown.Item>\n    //\n    //\n    // );\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          from = _this$props.from,\n          to = _this$props.to;\n      console.log(\"from\" + from);\n      console.log(\"to\" + to);\n      var modifiers = {\n        start: from,\n        end: to\n      };\n      return React.createElement(\"div\", {\n        className: \"filter-main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(MDBNavbar, {\n        id: \"filter-navbar\",\n        color: \"transparent\",\n        expand: \"md\",\n        scrolling: true,\n        transparent: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(MDBNavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, this.props.filtersUsed && React.createElement(\"div\", {\n        className: \"filter-clearButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        onClick: this.props.handleClearFilters,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Clear filters\"))), React.createElement(MDBNavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"filter-spaceTypeDropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(UncontrolledDropdown, {\n        isOpen: this.state.dropdownOpenSpace,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(DropdownToggle, {\n        onClick: function onClick() {\n          return _this2.toggle('space');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"SpaceType\"), React.createElement(DropdownMenu, {\n        className: \"filter-dropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        value: this.props.arr,\n        multiple: true,\n        onChange: this.props.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"Restaurant space\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Restaurant\"), React.createElement(\"option\", {\n        value: \"Apartment space\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Apartment\"), React.createElement(\"option\", {\n        value: \"Mall space\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Mall\"), React.createElement(\"option\", {\n        value: \"Garage space\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Garage\"), React.createElement(\"option\", {\n        value: \"Closet space\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Closet\"), React.createElement(\"option\", {\n        value: \"Basement space\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Basement\"), React.createElement(\"option\", {\n        value: \"Attic space\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Attic\"), React.createElement(\"option\", {\n        value: \"Outdoor space\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Outdoor Storage (i.e. shed)\")))))), React.createElement(MDBNavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"InputFromTo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(UncontrolledDropdown, {\n        isOpen: this.state.dropdownOpenDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(DropdownToggle, {\n        onClick: function onClick() {\n          return _this2.toggle('date');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Date\"), React.createElement(DropdownMenu, {\n        className: \"filter-dropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(DayPickerInput, {\n        id: \"filter-from\",\n        value: from,\n        placeholder: \"From\",\n        format: \"LL\",\n        formatDate: formatDate,\n        parseDate: parseDate,\n        dayPickerProps: {\n          selectedDays: [from, {\n            from: from,\n            to: to\n          }],\n          disabledDays: {\n            after: to\n          },\n          toMonth: to,\n          modifiers: modifiers,\n          numberOfMonths: 1,\n          onDayClick: function onDayClick() {\n            return _this2.to.getInput().focus();\n          }\n        },\n        onDayChange: this.props.handleFromChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), ' ', \"\\u2014\", ' ', React.createElement(\"span\", {\n        className: \"InputFromTo-to\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(DayPickerInput, {\n        id: \"filter-to\",\n        ref: function ref(el) {\n          return _this2.to = el;\n        },\n        value: to,\n        placeholder: \"To\",\n        format: \"LL\",\n        formatDate: formatDate,\n        parseDate: parseDate,\n        dayPickerProps: {\n          selectedDays: [from, {\n            from: from,\n            to: to\n          }],\n          disabledDays: {\n            before: from\n          },\n          modifiers: modifiers,\n          month: from,\n          fromMonth: from,\n          numberOfMonths: 1\n        },\n        onDayChange: function onDayChange(to) {\n          return _this2.props.handleToChange(to, _this2.to);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }))))))));\n    }\n  }]);\n\n  return Filter;\n}(React.Component);\nexport default Filter;","map":{"version":3,"sources":["/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/src/Components/Filter.js"],"names":["React","MDBRow","MDBContainer","MDBInput","MDBCol","MDBFormInline","MDBIcon","MDBBtn","MDBNavbar","MDBNavItem","MDBDropdown","MDBDropdownToggle","MDBDropdownMenu","MDBDropdownItem","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","moment","DayPickerInput","formatDate","parseDate","Filter","props","state","dropdownOpenSpace","dropdownOpenDate","filtersUsed","spaceTypes","value","label","toggle","bind","type","setState","from","to","console","log","modifiers","start","end","handleClearFilters","arr","handleChange","selectedDays","disabledDays","after","toMonth","numberOfMonths","onDayClick","getInput","focus","handleFromChange","el","before","month","fromMonth","handleToChange","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { MDBRow, MDBContainer, MDBInput, MDBCol, MDBFormInline, MDBIcon, MDBBtn } from \"mdbreact\";\nimport { MDBNavbar, MDBNavItem, MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem } from \"mdbreact\";\nimport { UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nimport moment from 'moment';\nimport DayPickerInput from 'react-day-picker/DayPickerInput.js';\nimport { formatDate, parseDate } from 'react-day-picker/moment';\nimport 'react-day-picker/lib/style.css';\n\nexport class Filter extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state={\n      dropdownOpenSpace: false,\n      dropdownOpenDate: false,\n      filtersUsed:false,\n      spaceTypes:[\n        {\n          value:'Restaurant space',\n          label:'Restaurant'\n        },\n        {\n          value:'Mall space',\n          label:'Mall'\n        },\n        {\n          value:'Apartment space',\n          label:'Apartment'\n        },\n        {\n          value:'Garage space',\n          label:'Garage'\n        },\n        {\n          value:'Closet space',\n          label:'Closet'\n        },\n        {\n          value:'Basement space',\n          label:'Basement'\n        },\n        {\n          value:'Outdoor space',\n          label:'Outdoor (i.e shed)'\n        }\n      ]\n    }\n    this.toggle = this.toggle.bind(this);\n\n\n  }\n  toggle(type) {\n    switch(type){\n      case('space'):\n        this.setState({\n          dropdownOpenSpace:!this.state.dropdownOpenSpace\n        });\n        break;\n      case('date'):\n        this.setState({\n          dropdownOpenDate:!this.state.dropdownOpenDate\n        });\n        break;\n    }\n\n\n  }\n\n  // <select value={this.props.arr} multiple={true} onChange={this.props.handleChange}>\n  //   <option value=\"Restaurant space\">Restaurant</option>\n  //   <option value=\"Apartment space\">Apartment</option>\n  //   <option value=\"Mall space\">Mall</option>\n  //   <option value=\"Garage space\">Garage</option>\n  //   <option value=\"Closet space\">Closet</option>\n  //   <option value=\"Basement space\">Basement</option>\n  //   <option value=\"Attic space\">Attic</option>\n  //   <option value=\"Outdoor space\">Outdoor Storage (i.e. shed)</option>\n  // </select>\n  // const spaceTypeDropItems = this.state.spaceTypes.map((space, index) =>\n  //     <Dropdown.Item value={space.value}>{space.label}</Dropdown.Item>\n  //\n  //\n  // );\n  render(){\n    const { from, to } = this.props;\n    console.log(\"from\" + from);\n    console.log(\"to\" + to);\n    const modifiers = { start: from, end: to };\n\n    return(\n      <div className=\"filter-main\">\n        <MDBNavbar id=\"filter-navbar\" color=\"transparent\" expand=\"md\" scrolling transparent>\n          <MDBNavItem>\n            {this.props.filtersUsed &&\n              <div className=\"filter-clearButton\">\n                <MDBBtn onClick={this.props.handleClearFilters}>Clear filters</MDBBtn>\n              </div>}\n          </MDBNavItem>\n\n          <MDBNavItem>\n            <div className=\"filter-spaceTypeDropdown\">\n            <UncontrolledDropdown isOpen={this.state.dropdownOpenSpace}>\n              <DropdownToggle onClick={()=>this.toggle('space')}>\n                SpaceType\n              </DropdownToggle>\n              <DropdownMenu className=\"filter-dropdown\">\n              <select value={this.props.arr} multiple={true} onChange={this.props.handleChange}>\n                <option value=\"Restaurant space\">Restaurant</option>\n                <option value=\"Apartment space\">Apartment</option>\n                <option value=\"Mall space\">Mall</option>\n                <option value=\"Garage space\">Garage</option>\n                <option value=\"Closet space\">Closet</option>\n                <option value=\"Basement space\">Basement</option>\n                <option value=\"Attic space\">Attic</option>\n                <option value=\"Outdoor space\">Outdoor Storage (i.e. shed)</option>\n              </select>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n            </div>\n          </MDBNavItem>\n\n          <MDBNavItem>\n            <div className=\"InputFromTo\">\n            <UncontrolledDropdown isOpen={this.state.dropdownOpenDate}>\n            <DropdownToggle onClick={()=>this.toggle('date')}>\n              Date\n            </DropdownToggle>\n              <DropdownMenu className=\"filter-dropdown\">\n               <DayPickerInput\n                 id=\"filter-from\"\n                 value={from}\n                 placeholder=\"From\"\n                 format=\"LL\"\n                 formatDate={formatDate}\n                 parseDate={parseDate}\n                 dayPickerProps={{\n                   selectedDays: [from, { from, to }],\n                   disabledDays: { after: to },\n                   toMonth: to,\n                   modifiers,\n                   numberOfMonths: 1,\n                   onDayClick: () => this.to.getInput().focus(),\n                 }}\n                 onDayChange={this.props.handleFromChange}\n               />{' '}\n               —{' '}\n               <span className=\"InputFromTo-to\">\n                 <DayPickerInput\n                   id=\"filter-to\"\n                   ref={el => (this.to = el)}\n                   value={to}\n                   placeholder=\"To\"\n                   format=\"LL\"\n                   formatDate={formatDate}\n                   parseDate={parseDate}\n                   dayPickerProps={{\n                     selectedDays: [from, { from, to }],\n                     disabledDays: { before: from },\n                     modifiers,\n                     month: from,\n                     fromMonth: from,\n                     numberOfMonths: 1,\n                   }}\n                   onDayChange={(to)=>this.props.handleToChange(to, this.to)}\n                 />\n               </span>\n               </DropdownMenu>\n              </UncontrolledDropdown>\n            </div>\n          </MDBNavItem>\n        </MDBNavbar>\n      </div>\n\n    );\n  }\n\n}\n\nexport default Filter;\n"]},"metadata":{},"sourceType":"module"}