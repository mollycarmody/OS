{"ast":null,"code":"import _toConsumableArray from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/src/Components/Filter.js\";\nimport React from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { MDBRow, MDBContainer, MDBInput, MDBCol, MDBFormInline, MDBIcon, MDBBtn } from \"mdbreact\";\nimport { MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem } from \"mdbreact\";\nimport moment from 'moment';\nimport DayPickerInput from 'react-day-picker/DayPickerInput.js';\nimport { formatDate, parseDate } from 'react-day-picker/moment';\nimport 'react-day-picker/lib/style.css';\nexport var Filter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Filter, _React$Component);\n\n  function Filter(props) {\n    var _this;\n\n    _classCallCheck(this, Filter);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Filter).call(this, props));\n    _this.state = {\n      arr: [],\n      from: undefined,\n      to: undefined,\n      spaceTypes: [{\n        value: 'Restaurant space',\n        label: 'Restaurant'\n      }, {\n        value: 'Mall space',\n        label: 'Mall'\n      }, {\n        value: 'Apartment space',\n        label: 'Apartment'\n      }, {\n        value: 'Garage space',\n        label: 'Garage'\n      }, {\n        value: 'Closet space',\n        label: 'Closet'\n      }, {\n        value: 'Basement space',\n        label: 'Basement'\n      }, {\n        value: 'Outdoor space',\n        label: 'Outdoor (i.e shed)'\n      }]\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Filter, [{\n    key: \"showFromMonth\",\n    value: function showFromMonth() {\n      var _this$state = this.state,\n          from = _this$state.from,\n          to = _this$state.to;\n\n      if (!from) {\n        return;\n      }\n\n      if (moment(to).diff(moment(from), 'months') < 2) {\n        this.to.getDayPicker().showMonth(from);\n      }\n    }\n  }, {\n    key: \"handleFromChange\",\n    value: function handleFromChange(from) {\n      // Change the from date and focus the \"to\" input field\n      this.setState({\n        from: from\n      });\n    }\n  }, {\n    key: \"handleToChange\",\n    value: function handleToChange(to) {\n      this.setState({\n        to: to\n      }, this.showFromMonth);\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      console.log(\"hi\");\n      var exists = this.state.arr.some(function (v) {\n        return v === event.target.value;\n      });\n\n      if (!exists) {\n        this.setState({\n          arr: this.state.arr.concat(event.target.value)\n        });\n      } else {\n        var array = _toConsumableArray(this.state.arr);\n\n        var index = array.indexOf(event.target.value);\n\n        if (index !== -1) {\n          array.splice(index, 1);\n          this.setState({\n            arr: array\n          });\n        }\n      } //call filter function\n\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(evt) {\n      // Prevent the root click handler from closing the dropdown\n      evt.preventDefault();\n      evt.nativeEvent.stopImmediatePropagation(); // Note have to handle anything that needs to happen on \"click when closed\" in here,\n      // not in the wrapped handler.\n\n      if (!this.props.open) {\n        this.wrappedClick(evt);\n      }\n    }\n  }, {\n    key: \"wrappedClick\",\n    value: function wrappedClick(evt) {\n      console.log(\"hi\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          from = _this$state2.from,\n          to = _this$state2.to;\n      var modifiers = {\n        start: from,\n        end: to\n      };\n      var spaceTypeDropItems = this.state.spaceTypes.map(function (space, index) {\n        return React.createElement(Dropdown.Item, {\n          value: space.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, space.label);\n      });\n      return React.createElement(\"div\", {\n        className: \"filter-main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"filter-spaceTypeDropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Pick your favorite flavor:\", React.createElement(\"select\", {\n        value: this.state.arr,\n        multiple: true,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"grapefruit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Grapefruit\"), React.createElement(\"option\", {\n        value: \"lime\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Lime\"), React.createElement(\"option\", {\n        value: \"coconut\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Coconut\"), React.createElement(\"option\", {\n        value: \"mango\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Mango\")))), React.createElement(\"div\", {\n        className: \"InputFromTo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(DayPickerInput, {\n        value: from,\n        placeholder: \"From\",\n        format: \"LL\",\n        formatDate: formatDate,\n        parseDate: parseDate,\n        dayPickerProps: {\n          selectedDays: [from, {\n            from: from,\n            to: to\n          }],\n          disabledDays: {\n            after: to\n          },\n          toMonth: to,\n          modifiers: modifiers,\n          numberOfMonths: 1,\n          onDayClick: function onDayClick() {\n            return _this2.to.getInput().focus();\n          }\n        },\n        onDayChange: this.handleFromChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), ' ', \"\\u2014\", ' ', React.createElement(\"span\", {\n        className: \"InputFromTo-to\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(DayPickerInput, {\n        ref: function ref(el) {\n          return _this2.to = el;\n        },\n        value: to,\n        placeholder: \"To\",\n        format: \"LL\",\n        formatDate: formatDate,\n        parseDate: parseDate,\n        dayPickerProps: {\n          selectedDays: [from, {\n            from: from,\n            to: to\n          }],\n          disabledDays: {\n            before: from\n          },\n          modifiers: modifiers,\n          month: from,\n          fromMonth: from,\n          numberOfMonths: 1\n        },\n        onDayChange: this.handleToChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Filter;\n}(React.Component);\nexport default Filter;","map":{"version":3,"sources":["/Users/mollycarmody/Desktop/CS_290/OpenSpace/os-app-master/src/Components/Filter.js"],"names":["React","Dropdown","MDBRow","MDBContainer","MDBInput","MDBCol","MDBFormInline","MDBIcon","MDBBtn","MDBDropdown","MDBDropdownToggle","MDBDropdownMenu","MDBDropdownItem","moment","DayPickerInput","formatDate","parseDate","Filter","props","state","arr","from","undefined","to","spaceTypes","value","label","handleChange","bind","diff","getDayPicker","showMonth","setState","showFromMonth","event","console","log","exists","some","v","target","concat","array","index","indexOf","splice","evt","preventDefault","nativeEvent","stopImmediatePropagation","open","wrappedClick","modifiers","start","end","spaceTypeDropItems","map","space","selectedDays","disabledDays","after","toMonth","numberOfMonths","onDayClick","getInput","focus","handleFromChange","el","before","month","fromMonth","handleToChange","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { MDBRow, MDBContainer, MDBInput, MDBCol, MDBFormInline, MDBIcon, MDBBtn } from \"mdbreact\";\nimport { MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem } from \"mdbreact\";\n\nimport moment from 'moment';\nimport DayPickerInput from 'react-day-picker/DayPickerInput.js';\nimport { formatDate, parseDate } from 'react-day-picker/moment';\nimport 'react-day-picker/lib/style.css';\n\nexport class Filter extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state={\n        arr: [],\n      from: undefined,\n      to: undefined,\n      spaceTypes:[\n        {\n          value:'Restaurant space',\n          label:'Restaurant'\n        },\n        {\n          value:'Mall space',\n          label:'Mall'\n        },\n        {\n          value:'Apartment space',\n          label:'Apartment'\n        },\n        {\n          value:'Garage space',\n          label:'Garage'\n        },\n        {\n          value:'Closet space',\n          label:'Closet'\n        },\n        {\n          value:'Basement space',\n          label:'Basement'\n        },\n        {\n          value:'Outdoor space',\n          label:'Outdoor (i.e shed)'\n        }\n      ]\n    }\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  showFromMonth() {\n    const { from, to } = this.state;\n    if (!from) {\n      return;\n    }\n    if (moment(to).diff(moment(from), 'months') < 2) {\n      this.to.getDayPicker().showMonth(from);\n    }\n  }\n  handleFromChange(from) {\n    // Change the from date and focus the \"to\" input field\n    this.setState({ from });\n  }\n  handleToChange(to) {\n    this.setState({ to }, this.showFromMonth);\n  }\n  handleChange(event) {\nconsole.log(\"hi\");\nconst exists = this.state.arr.some(v => (v === event.target.value));\nif(!exists){\n   this.setState({\n  arr: this.state.arr.concat(event.target.value)\n});\n}else{\n  var array = [...this.state.arr];\n  var index = array.indexOf(event.target.value)\n  if (index !== -1) {\n    array.splice(index, 1);\n    this.setState({arr: array});\n  }\n\n}\n//call filter function\n }\n  handleClick(evt) {\n    // Prevent the root click handler from closing the dropdown\n    evt.preventDefault();\n    evt.nativeEvent.stopImmediatePropagation();\n    // Note have to handle anything that needs to happen on \"click when closed\" in here,\n    // not in the wrapped handler.\n    if (!this.props.open) {\n      this.wrappedClick(evt);\n    }\n  }\n  wrappedClick(evt){\n    console.log(\"hi\");\n  }\n\n  render(){\n    const { from, to } = this.state;\n    const modifiers = { start: from, end: to };\n    const spaceTypeDropItems = this.state.spaceTypes.map((space, index) =>\n        <Dropdown.Item value={space.value}>{space.label}</Dropdown.Item>\n\n\n    );\n    return(\n      <div className=\"filter-main\">\n        <div className=\"filter-spaceTypeDropdown\">\n        <label>\n          Pick your favorite flavor:\n          <select value={this.state.arr} multiple={true} onChange={this.handleChange}>\n            <option value=\"grapefruit\">Grapefruit</option>\n            <option value=\"lime\">Lime</option>\n            <option value=\"coconut\">Coconut</option>\n            <option value=\"mango\">Mango</option>\n          </select>\n        </label>\n        </div>\n        <div className=\"InputFromTo\">\n           <DayPickerInput\n             value={from}\n             placeholder=\"From\"\n             format=\"LL\"\n             formatDate={formatDate}\n             parseDate={parseDate}\n             dayPickerProps={{\n               selectedDays: [from, { from, to }],\n               disabledDays: { after: to },\n               toMonth: to,\n               modifiers,\n               numberOfMonths: 1,\n               onDayClick: () => this.to.getInput().focus(),\n             }}\n             onDayChange={this.handleFromChange}\n           />{' '}\n           —{' '}\n           <span className=\"InputFromTo-to\">\n             <DayPickerInput\n               ref={el => (this.to = el)}\n               value={to}\n               placeholder=\"To\"\n               format=\"LL\"\n               formatDate={formatDate}\n               parseDate={parseDate}\n               dayPickerProps={{\n                 selectedDays: [from, { from, to }],\n                 disabledDays: { before: from },\n                 modifiers,\n                 month: from,\n                 fromMonth: from,\n                 numberOfMonths: 1,\n               }}\n               onDayChange={this.handleToChange}\n             />\n           </span>\n        </div>\n\n      </div>\n\n    );\n  }\n\n}\n\nexport default Filter;\n"]},"metadata":{},"sourceType":"module"}